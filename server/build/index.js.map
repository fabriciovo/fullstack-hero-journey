{"version":3,"sources":["../src/index.js"],"names":["app","server","require","Server","io","gameManager","GameManager","setup","port","process","env","PORT","uri","MONGO_CONNECTION_URL","mongoConfig","useNewUrlParser","authSource","MONGO_USER_NAME","MONGO_PASSWORD","auth","username","password","mongoose","connect","connection","on","error","console","log","exit","use","bodyParser","urlencoded","extended","json","credentials","origin","CORS_ORIGIN","get","passport","authenticate","session","request","response","status","user","express","path","join","__dirname","send","routes","passwordRoutes","secureRoutes","message","next","listen"],"mappings":"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","sourcesContent":["import \"dotenv/config\";\r\nimport path from \"path\";\r\nimport express from \"express\";\r\nimport bodyParser from \"body-parser\";\r\nimport cors from \"cors\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport passport from \"passport\";\r\nimport mongoose from \"mongoose\";\r\n\r\nimport routes from \"./routes/main\";\r\nimport passwordRoutes from \"./routes/password\";\r\nimport secureRoutes from \"./routes/secure\";\r\nimport GameManager from \"./game_manager/GameManager\";\r\n\r\nconst app = express();\r\nconst server = require(\"http\").Server(app);\r\nconst io = require(\"socket.io\")(server);\r\n// const io = require(\"socket.io\")(server, {\r\n//   cors: {\r\n//     origin: process.env.CORS_ORIGIN,\r\n//   },\r\n// });\r\n\r\nconst gameManager = new GameManager(io);\r\ngameManager.setup();\r\nconst port = process.env.PORT || 3000;\r\n\r\nconst uri = process.env.MONGO_CONNECTION_URL;\r\nconst mongoConfig = {\r\n  useNewUrlParser: true,\r\n  authSource: \"admin\",\r\n};\r\n\r\nif (process.env.MONGO_USER_NAME && process.env.MONGO_PASSWORD) {\r\n  mongoConfig.auth = {};\r\n  mongoConfig.auth.username = process.env.MONGO_USER_NAME;\r\n  mongoConfig.auth.password = process.env.MONGO_PASSWORD;\r\n}\r\n\r\n//TODO\r\nmongoose.connect(uri, mongoConfig);\r\nmongoose.connection.on(\"error\", (error) => {\r\n  console.log(error);\r\n  process.exit(1);\r\n});\r\n\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\napp.use(cookieParser());\r\napp.use(\r\n  cors({\r\n    credentials: true,\r\n    origin: process.env.CORS_ORIGIN,\r\n  })\r\n);\r\n\r\nrequire(\"./auth/auth\");\r\n\r\napp.get(\r\n  \"/game.html\",\r\n  passport.authenticate(\"jwt\", { session: false }),\r\n  (request, response) => {\r\n    response.status(200).json(request.user);\r\n  }\r\n);\r\n\r\napp.use(express.static(path.join(__dirname, \"/../public\")));\r\n\r\napp.get(\"/\", (request, response) => {\r\n  response.send(path.join(__dirname, \"/../index.html\"));\r\n});\r\n\r\napp.use(\"/\", routes);\r\napp.use(\"/\", passwordRoutes);\r\napp.use(\"/\", passport.authenticate(\"jwt\", { session: false }), secureRoutes);\r\n\r\napp.use((request, response) => {\r\n  response.status(404).json({ message: \"404 - Not Found\", status: 404 });\r\n});\r\n\r\napp.use((error, request, response, next) => {\r\n  console.log(error);\r\n  response\r\n    .status(error.status || 500)\r\n    .json({ error: error.message, status: 500 });\r\n});\r\n\r\nmongoose.connection.on(\"connected\", () => {\r\n  server.listen(port, () => {\r\n    console.log(\"Connected\");\r\n  });\r\n});\r\n"],"file":"index.js"}