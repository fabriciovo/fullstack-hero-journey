{"version":3,"sources":["../src/index.js"],"names":["console","log","process","env","CORS_ORIGIN","app","server","require","Server","io","cors","origin","methods","gameManager","GameManager","setup","port","PORT","uri","MONGO_CONNECTION_URL","mongoConfig","useNewUrlParser","authSource","MONGO_USER_NAME","MONGO_PASSWORD","auth","username","password","mongoose","connect","connection","on","error","exit","use","bodyParser","urlencoded","extended","json","credentials","get","passport","authenticate","session","request","response","status","user","express","path","join","__dirname","send","routes","passwordRoutes","secureRoutes","message","next","listen"],"mappings":"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","sourcesContent":["import 'dotenv/config';\nimport path from 'path';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport cookieParser from 'cookie-parser';\nimport passport from 'passport';\nimport mongoose from 'mongoose';\n\n\nimport routes from './routes/main';\nimport passwordRoutes from './routes/password';\nimport secureRoutes from './routes/secure';\nimport GameManager from './game_manager/GameManager'\n\nconsole.log(process.env.CORS_ORIGIN)\nconst app = express();\nconst server = require('http').Server(app);\nconst io = require('socket.io')(server, {\n    cors: {\n        origin: [\"http://localhost:8000\", \"https://localhost:8000\"],\n        methods: [\"GET\", \"POST\"],\n\n    }\n});\n\nconst gameManager = new GameManager(io);\ngameManager.setup();\nconst port = process.env.PORT || 3000;\n\n\n\nconst uri = process.env.MONGO_CONNECTION_URL;\nconst mongoConfig = {\n    useNewUrlParser: true,\n    authSource: \"admin\"\n}\n\nif (process.env.MONGO_USER_NAME && process.env.MONGO_PASSWORD) {\n    mongoConfig.auth = {};\n    mongoConfig.auth.username = process.env.MONGO_USER_NAME;\n    mongoConfig.auth.password = process.env.MONGO_PASSWORD;\n}\n\n//TODO  \nmongoose.connect(uri, mongoConfig)\nmongoose.connection.on('error', (error) => {\n    console.log(error)\n    process.exit(1);\n});\n\n\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json());\napp.use(cookieParser());\napp.use(cors({\n    credentials: true,\n    origin: process.env.CORS_ORIGIN\n}))\n\nrequire('./auth/auth');\n\n\napp.get('/game.html', passport.authenticate('jwt', { session: false }), (request, response) => {\n    response.status(200).json(request.user);\n})\n\napp.use(express.static(path.join(__dirname, '/../public')));\n\napp.get('/', (request, response) => {\n    response.send(path.join(__dirname, '/../index.html'));\n})\n\napp.use('/', routes);\napp.use('/', passwordRoutes);\napp.use('/', passport.authenticate('jwt', { session: false }), secureRoutes);\n\n\napp.use((request, response) => {\n    response.status(404).json({ message: '404 - Not Found', status: 404 });\n});\n\n\napp.use((error, request, response, next) => {\n    console.log(error);\n    response.status(error.status || 500).json({ error: error.message, status: 500 });\n});\n\n\n\nmongoose.connection.on('connected', () => {\n    server.listen(port, () => {\n        console.log('Connected')\n    });\n});\n"],"file":"index.js"}