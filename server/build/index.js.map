{"version":3,"sources":["../src/index.js"],"names":["console","log","process","env","CORS_ORIGIN","app","server","require","Server","io","cors","origin","gameManager","GameManager","setup","port","PORT","uri","MONGO_CONNECTION_URL","mongoConfig","useNewUrlParser","authSource","MONGO_USER_NAME","MONGO_PASSWORD","auth","username","password","mongoose","connect","connection","on","error","exit","use","bodyParser","urlencoded","extended","json","credentials","get","passport","authenticate","session","request","response","status","user","express","path","join","__dirname","send","routes","passwordRoutes","secureRoutes","message","next","listen"],"mappings":"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","sourcesContent":["import 'dotenv/config';\r\nimport path from 'path';\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport cookieParser from 'cookie-parser';\r\nimport passport from 'passport';\r\nimport mongoose from 'mongoose';\r\n\r\n\r\nimport routes from './routes/main';\r\nimport passwordRoutes from './routes/password';\r\nimport secureRoutes from './routes/secure';\r\nimport GameManager from './game_manager/GameManager'\r\n\r\nconsole.log(process.env.CORS_ORIGIN)\r\nconst app = express();\r\nconst server = require('http').Server(app);\r\nconst io = require(\"socket.io\")(server, {\r\n    cors: {\r\n        origin: process.env.CORS_ORIGIN\r\n    }\r\n});\r\n\r\n\r\n\r\nconst gameManager = new GameManager(io);\r\ngameManager.setup();\r\nconst port = process.env.PORT || 3000;\r\n\r\n\r\n\r\nconst uri = process.env.MONGO_CONNECTION_URL;\r\nconst mongoConfig = {\r\n    useNewUrlParser: true,\r\n    authSource: \"admin\"\r\n}\r\n\r\nif (process.env.MONGO_USER_NAME && process.env.MONGO_PASSWORD) {\r\n    mongoConfig.auth = {};\r\n    mongoConfig.auth.username = process.env.MONGO_USER_NAME;\r\n    mongoConfig.auth.password = process.env.MONGO_PASSWORD;\r\n}\r\n\r\n//TODO  \r\nmongoose.connect(uri, mongoConfig)\r\nmongoose.connection.on('error', (error) => {\r\n    console.log(error)\r\n    process.exit(1);\r\n});\r\n\r\n\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\napp.use(bodyParser.json());\r\napp.use(cookieParser());\r\napp.use(cors({\r\n    credentials: true,\r\n    origin: process.env.CORS_ORIGIN\r\n}))\r\n\r\nrequire('./auth/auth');\r\n\r\n\r\napp.get('/game.html', passport.authenticate('jwt', { session: false }), (request, response) => {\r\n    response.status(200).json(request.user);\r\n})\r\n\r\napp.use(express.static(path.join(__dirname, '/../public')));\r\n\r\napp.get('/', (request, response) => {\r\n    response.send(path.join(__dirname, '/../index.html'));\r\n})\r\n\r\napp.use('/', routes);\r\napp.use('/', passwordRoutes);\r\napp.use('/', passport.authenticate('jwt', { session: false }), secureRoutes);\r\n\r\n\r\napp.use((request, response) => {\r\n    response.status(404).json({ message: '404 - Not Found', status: 404 });\r\n});\r\n\r\n\r\napp.use((error, request, response, next) => {\r\n    console.log(error);\r\n    response.status(error.status || 500).json({ error: error.message, status: 500 });\r\n});\r\n\r\n\r\n\r\nmongoose.connection.on('connected', () => {\r\n    server.listen(port, () => {\r\n        console.log('Connected')\r\n    });\r\n});\r\n"],"file":"index.js"}