{"version":3,"file":"GameManager.js","names":["_jsonwebtoken","_interopRequireDefault","require","_PlayerModel","_UserModel","_ChatModel","levelData","_interopRequireWildcard","itemData","enemyData","_Spawner","_utils","_ItemModel","_ChestModel","_uuid","_MonsterModel","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","GameManager","exports","io","_classCallCheck2","spawners","chests","monsters","players","items","npcs","rangedObjects","playerLocations","chestLocations","monsterLocations","npcLocations","itemsLocations","locations","itemDictionary","chest","createChest","bind","item","createItem","drop","_createClass2","key","value","setup","parseMapData","setupEventListeners","setupSpawners","_this","layers","forEach","layer","name","objects","obj","push","x","y","properties","spawner","_this2","on","socket","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context","prev","next","id","equipedItems","UserModel","updateOne","username","playerName","$set","player","t0","console","log","stop","emit","_ref2","_callee2","message","token","decoded","email","_callee2$","_context2","jwt","verify","process","env","JWT_SECRET","user","ChatModel","create","frame","_x","_x2","apply","arguments","_ref3","_callee3","_decoded$user","_id","playerSchema","_callee3$","_context3","findById","sent","spawnPlayer","broadcast","_x3","_x4","playerData","flipX","actionAActive","potionAActive","currentDirection","chestId","gold","updateGold","deleteChest","itemId","canPickupItem","addItem","deleteItems","removeItem","canEquipItem","equipItem","removeEquipedItem","levelUp","level","attack","defense","maxHealth","exp","maxExp","attackedPlayerId","playerAttackValue","playerAttacked","health","respawn","to","concat","updateHealth","monsterId","dis","_this2$monsters$monst","loseHealth","updateExp","deleteMonster","playerId","parseInt","damage","potion","potions","price","monster","stateTime","randomPosition","_this3","config","spawnInterval","limit","spawnerType","SpawnerType","CHEST","keys","Spawner","addChest","MONSTER","addMonster","NPC","addNpc","deleteNpc","ITEM","addItems","setInterval","length","spawnMonster","PlayerModel","undefined","npcId","npc","ChestModel","randomNumber","v4","randomItem","Math","floor","random","ItemModel","getRandonValues","WeaponTypes","MELEE","pickRandomLocation","location","invalidLocation","some","randomEnemy","enemies","MonsterModel","goldValue","healthValue","attackValue","expValue"],"sources":["../../src/game_manager/GameManager.js"],"sourcesContent":["import jwt from \"jsonwebtoken\";\nimport PlayerModel from \"../models/PlayerModel\";\nimport UserModel from \"../models/UserModel\";\nimport ChatModel from \"../models/ChatModel\";\n\nimport * as levelData from \"../../public/assets/level/new_level.json\";\nimport * as itemData from \"../../public/assets/level/tools.json\";\nimport * as enemyData from \"../../public/assets/Enemies/enemies.json\";\n\nimport Spawner from \"./controllers/Spawner\";\nimport {\n  getRandonValues,\n  randomNumber,\n  SpawnerType,\n  WeaponTypes,\n} from \"./utils\";\nimport ItemModel from \"../models/ItemModel\";\nimport ChestModel from \"../models/ChestModel\";\nimport { v4 } from \"uuid\";\nimport MonsterModel from \"../models/MonsterModel\";\n\nexport default class GameManager {\n  constructor(io) {\n    this.io = io;\n    this.spawners = {};\n    this.chests = {};\n    this.monsters = {};\n    this.players = {};\n    this.items = {};\n    this.npcs = {};\n\n    this.rangedObjects = {};\n\n    this.playerLocations = [];\n    this.chestLocations = {};\n    this.monsterLocations = {};\n    this.npcLocations = {};\n\n    this.itemsLocations = itemData.locations;\n\n    this.itemDictionary = {\n      chest: this.createChest.bind(this),\n      item: this.createItem.bind(this),\n      \"\": this.drop,\n    };\n  }\n\n  setup() {\n    this.parseMapData();\n    this.setupEventListeners();\n    this.setupSpawners();\n  }\n\n  parseMapData() {\n    this.levelData = levelData;\n    this.levelData.layers.forEach((layer) => {\n      if (layer.name === \"player_locations\") {\n        layer.objects.forEach((obj) => {\n          this.playerLocations.push([obj.x, obj.y]);\n        });\n      } else if (layer.name === \"monster_locations\") {\n        layer.objects.forEach((obj) => {\n          if (this.monsterLocations[obj.properties.spawner]) {\n            this.monsterLocations[obj.properties.spawner].push([obj.x, obj.y]);\n          } else {\n            this.monsterLocations[obj.properties.spawner] = [[obj.x, obj.y]];\n          }\n        });\n      } else if (layer.name === \"chest_locations\") {\n        layer.objects.forEach((obj) => {\n          if (this.chestLocations[obj.properties.spawner]) {\n            this.chestLocations[obj.properties.spawner].push([obj.x, obj.y]);\n          } else {\n            this.chestLocations[obj.properties.spawner] = [[obj.x, obj.y]];\n          }\n        });\n      } else if (layer.name === \"npc_locations\") {\n        layer.objects.forEach((obj) => {\n          if (this.npcLocations[obj.properties.spawner]) {\n            this.npcLocations[obj.properties.spawner].push([obj.x, obj.y]);\n          } else {\n            this.npcLocations[obj.properties.spawner] = [[obj.x, obj.y]];\n          }\n        });\n      }\n    });\n  }\n\n  setupEventListeners() {\n    this.io.on(\"connection\", (socket) => {\n      // player disconnected\n\n      socket.on(\"savePlayerData\", async () => {\n        try {\n          if (!this.players[socket.id].items) {\n            this.players[socket.id].items = null;\n          }\n\n          if (!this.players[socket.id].equipedItems) {\n            this.players[socket.id].equipedItems = null;\n          }\n\n          await UserModel.updateOne(\n            { username: this.players[socket.id].playerName },\n            {\n              $set: {\n                player: this.players[socket.id],\n              },\n            }\n          );\n        } catch (error) {\n          console.log(error);\n        }\n      });\n\n      socket.on(\"disconnect\", () => {\n        // delete user data from server\n\n        console.log(\"disconnect\");\n\n        delete this.players[socket.id];\n\n        // emit a message to all players to remove this player\n        this.io.emit(\"disconnected\", socket.id);\n      });\n\n      socket.on(\"sendMessage\", async (message, token) => {\n        try {\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\n          const { email } = decoded.user;\n          await ChatModel.create({ email, message });\n          this.io.emit(\"newMessage\", {\n            message,\n            name: this.players[socket.id].playerName,\n            frame: this.players[socket.id].frame,\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      });\n\n      socket.on(\"newPlayer\", async (token, key) => {\n        try {\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\n          const { name, _id } = decoded.user;\n\n          const playerSchema = await UserModel.findById(_id);\n          // create a new Player\n\n          this.spawnPlayer(socket.id, name, key, playerSchema.player);\n\n          // send the players object to the new player\n          socket.emit(\"currentPlayers\", this.players);\n\n          // send the monsters object to the new player\n          socket.emit(\"currentMonsters\", this.monsters);\n\n          // send the chests object to the new player\n          socket.emit(\"currentChests\", this.chests);\n\n          // send the items object to the new player\n          socket.emit(\"currentItems\", this.items);\n\n          // send the npcs object to the new player\n          socket.emit(\"currentNpcs\", this.npcs);\n\n          // inform the other players of the new player that joined\n          socket.broadcast.emit(\"spawnPlayer\", this.players[socket.id]);\n          socket.emit(\"updateItems\", this.players[socket.id]);\n          socket.broadcast.emit(\n            \"updatePlayersItems\",\n            socket.id,\n            this.players[socket.id]\n          );\n        } catch (error) {\n          console.log(error);\n          socket.emit(\"invalidToken\");\n        }\n      });\n\n      socket.on(\"playerMovement\", (playerData) => {\n        if (this.players[socket.id]) {\n          this.players[socket.id].x = playerData.x;\n          this.players[socket.id].y = playerData.y;\n          this.players[socket.id].flipX = playerData.flipX;\n          this.players[socket.id].actionAActive = playerData.actionAActive;\n          this.players[socket.id].potionAActive = playerData.potionAActive;\n          this.players[socket.id].frame = playerData.frame;\n          this.players[socket.id].currentDirection =\n            playerData.currentDirection;\n          // emit a message to all players about the player that moved\n          this.io.emit(\"playerMoved\", this.players[socket.id]);\n        }\n      });\n\n      socket.on(\"pickUpChest\", (chestId) => {\n        // update the spawner\n        if (this.chests[chestId]) {\n          const { gold } = this.chests[chestId];\n\n          // updating the players gold\n          this.players[socket.id].updateGold(gold);\n          socket.emit(\"updateScore\", this.players[socket.id].gold);\n          socket.broadcast.emit(\n            \"updatePlayersScore\",\n            socket.id,\n            this.players[socket.id].gold\n          );\n          // removing the chest\n          this.deleteChest(chestId);\n        }\n      });\n\n      socket.on(\"pickUpItem\", (itemId) => {\n        // update the spawner\n        if (this.items[itemId]) {\n          if (this.players[socket.id].canPickupItem()) {\n            this.players[socket.id].addItem(this.items[itemId]);\n            socket.emit(\"updateItems\", this.players[socket.id]);\n            socket.broadcast.emit(\n              \"updatePlayersItems\",\n              socket.id,\n              this.players[socket.id]\n            );\n\n            // removing the item\n            this.deleteItems(itemId);\n          }\n        }\n      });\n\n      socket.on(\"playerDroppedItem\", (itemId) => {\n        this.players[socket.id].removeItem(itemId);\n        socket.emit(\"updateItems\", this.players[socket.id]);\n        socket.broadcast.emit(\n          \"updatePlayersItems\",\n          socket.id,\n          this.players[socket.id]\n        );\n      });\n\n      socket.on(\"playerEquipedItem\", (itemId) => {\n        if (this.players[socket.id].items[itemId]) {\n          if (this.players[socket.id].canEquipItem()) {\n            this.players[socket.id].equipItem(\n              this.players[socket.id].items[itemId]\n            );\n\n            socket.emit(\"updateItems\", this.players[socket.id]);\n            socket.broadcast.emit(\n              \"updatePlayersItems\",\n              socket.id,\n              this.players[socket.id]\n            );\n          }\n        }\n      });\n\n      socket.on(\"playerUnequipedItem\", (itemId) => {\n        if (this.players[socket.id].equipedItems[itemId]) {\n          if (this.players[socket.id].canPickupItem()) {\n            this.players[socket.id].addItem(\n              this.players[socket.id].equipedItems[itemId]\n            );\n\n            this.players[socket.id].removeEquipedItem(itemId);\n\n            socket.emit(\"updateItems\", this.players[socket.id]);\n            socket.broadcast.emit(\n              \"updatePlayersItems\",\n              socket.id,\n              this.players[socket.id]\n            );\n          }\n        }\n      });\n\n      socket.on(\"levelUp\", () => {\n        this.players[socket.id].levelUp();\n        this.io.emit(\n          \"updatePlayerStats\",\n          socket.id,\n          this.players[socket.id].level,\n          this.players[socket.id].attack,\n          this.players[socket.id].defense,\n          this.players[socket.id].maxHealth,\n          this.players[socket.id].exp,\n          this.players[socket.id].maxExp\n        );\n      });\n\n      socket.on(\"attackedPlayer\", (attackedPlayerId) => {\n        if (this.players[attackedPlayerId]) {\n          // get required info from attacked player\n          const { gold } = this.players[attackedPlayerId];\n          const playerAttackValue = this.players[socket.id].attack;\n\n          // subtract health from attacked player\n          this.players[attackedPlayerId].playerAttacked(playerAttackValue);\n\n          // check attacked players health, if dead send gold to other player\n          if (this.players[attackedPlayerId].health <= 0) {\n            // get the amount of gold, and update player object\n            this.players[socket.id].updateGold(gold);\n\n            // respawn attacked player\n            this.players[attackedPlayerId].respawn(this.players);\n            this.io.emit(\"respawnPlayer\", this.players[attackedPlayerId]);\n\n            // send update gold message to player\n            socket.emit(\"updateScore\", this.players[socket.id].gold);\n\n            // reset the attacked players gold\n            this.players[attackedPlayerId].updateGold(-gold);\n            this.io\n              .to(`${attackedPlayerId}`)\n              .emit(\"updateScore\", this.players[attackedPlayerId].gold);\n\n            // add bonus health to the player\n            this.players[socket.id].updateHealth(15);\n            this.io.emit(\n              \"updatePlayerHealth\",\n              socket.id,\n              this.players[socket.id].health\n            );\n          } else {\n            this.io.emit(\n              \"updatePlayerHealth\",\n              attackedPlayerId,\n              this.players[attackedPlayerId].health\n            );\n          }\n        }\n      });\n\n      socket.on(\"monsterAttacked\", (monsterId, dis) => {\n        // update the spawner\n        if (this.monsters[monsterId]) {\n          const { gold, attack, exp } = this.monsters[monsterId];\n          const playerAttackValue = this.players[socket.id].attack;\n          // subtract health monster model\n          this.monsters[monsterId].loseHealth(playerAttackValue);\n\n          // check the monsters health, and if dead remove that object\n          if (this.monsters[monsterId].health <= 0) {\n            // updating the players gold\n            this.players[socket.id].updateGold(gold);\n            socket.emit(\"updateScore\", this.players[socket.id].gold);\n\n            //update xp\n            this.players[socket.id].updateExp(exp);\n            this.io.emit(\"updateXp\", exp, socket.id);\n\n            this.deleteMonster(monsterId);\n          } else {\n            // update the monsters health\n            this.io.emit(\n              \"updateMonsterHealth\",\n              monsterId,\n              this.monsters[monsterId].health\n            );\n          }\n        }\n      });\n\n      socket.on(\"monsterAttack\", (monsterId, playerId) => {\n        const { attack } = this.monsters[monsterId];\n        // update the players health\n        this.players[playerId].playerAttacked(attack);\n        this.io.emit(\n          \"updatePlayerHealth\",\n          playerId,\n          this.players[playerId].health\n        );\n\n        // check the player's health, if below 0 have the player respawn\n        if (this.players[playerId].health <= 0) {\n          // update the gold the player has\n          this.players[playerId].updateGold(\n            parseInt(-this.players[playerId].gold / 2, 10)\n          );\n          socket.emit(\"updateScore\", this.players[playerId].gold);\n\n          // respawn the player\n          this.players[playerId].respawn(this.players);\n          this.io.emit(\"respawnPlayer\", this.players[playerId]);\n        }\n      });\n\n      socket.on(\"playerHit\", (damage) => {});\n\n      socket.on(\"healthPotion\", (playerId, health) => {\n        if (socket.id === playerId) {\n          this.players[socket.id];\n          this.players[socket.id].potion(health);\n          this.io.emit(\n            \"updatePlayerHealth\",\n            socket.id,\n            this.players[socket.id].health\n          );\n        }\n      });\n\n      socket.on(\"sendBuyItemMessage\", (item) => {\n        this.players[socket.id].potions++;\n\n        this.players[socket.id].updateGold(-item.price);\n        socket.emit(\"updateScore\", this.players[socket.id].gold);\n        socket.broadcast.emit(\n          \"updatePlayersScore\",\n          socket.id,\n          this.players[socket.id].gold\n        );\n      });\n\n      socket.on(\"monsterMovement\", (monster) => {\n        if (!this.monsters[monster.id]) return;\n        this.monsters[monster.id].stateTime = monster.stateTime;\n        this.monsters[monster.id].randomPosition = monster.randomPosition;\n        this.monsters[monster.id].x = monster.x;\n        this.monsters[monster.id].y = monster.y;\n        // emit a message to all players about the monster that moved\n\n        this.io.emit(\"monsterMoved\", this.monsters[monster.id]);\n      });\n\n      socket.on(\"dropItem\", (x, y, item) => {\n        this.itemDictionary[item](x, y);\n      });\n\n      // player connected to our game\n      console.log(\"player connected to our game\");\n    });\n  }\n\n  setupSpawners() {\n    const config = {\n      spawnInterval: 3000,\n      limit: 3,\n      spawnerType: SpawnerType.CHEST,\n      id: \"\",\n    };\n    let spawner;\n    // create chest spawners\n    Object.keys(this.chestLocations).forEach((key) => {\n      config.id = `chest-${key}`;\n\n      spawner = new Spawner(\n        config,\n        this.chestLocations[key],\n        this.addChest.bind(this),\n        this.deleteChest.bind(this)\n      );\n      this.spawners[spawner.id] = spawner;\n    });\n\n    // create monster spawners\n    Object.keys(this.monsterLocations).forEach((key) => {\n      config.id = `monster-${key}`;\n      config.limit = 8;\n      config.spawnerType = SpawnerType.MONSTER;\n\n      spawner = new Spawner(\n        config,\n        this.monsterLocations[key],\n        this.addMonster.bind(this),\n        this.deleteMonster.bind(this)\n      );\n      this.spawners[spawner.id] = spawner;\n    });\n\n    // create npc spawners\n    Object.keys(this.npcLocations).forEach((key) => {\n      config.id = `npc-${key}`;\n      config.spawnerType = SpawnerType.NPC;\n\n      spawner = new Spawner(\n        config,\n        this.npcLocations[key],\n        this.addNpc.bind(this),\n        this.deleteNpc.bind(this)\n      );\n      this.spawners[spawner.id] = spawner;\n    });\n\n    // create items spawners\n    config.id = \"item\";\n    config.spawnerType = SpawnerType.ITEM;\n    spawner = new Spawner(\n      config,\n      this.itemsLocations,\n      this.addItems.bind(this),\n      this.deleteItems.bind(this)\n    );\n    this.spawners[spawner.id] = spawner;\n\n    setInterval(() => {\n      if ((Object.keys(this.monsters).length< 8)) {\n        this.spawnMonster();\n      }\n    }, 3000);\n  }\n  spawnPlayer(playerId, name, key, playerSchema) {\n    const player = new PlayerModel(\n      playerId,\n      this.playerLocations,\n      this.players,\n      name,\n      key,\n      undefined,\n      playerSchema\n    );\n    this.players[playerId] = player;\n  }\n\n  addItems(itemId, item) {\n    this.items[itemId] = item;\n    this.io.emit(\"itemSpawned\", item);\n  }\n\n  deleteItems(itemId) {\n    delete this.items[itemId];\n    this.io.emit(\"itemRemoved\", itemId);\n  }\n\n  addChest(chestId, chest) {\n    this.chests[chestId] = chest;\n    this.io.emit(\"chestSpawned\", chest);\n  }\n\n  deleteChest(chestId) {\n    delete this.chests[chestId];\n    this.io.emit(\"chestRemoved\", chestId);\n  }\n\n  addMonster(monsterId, monster) {\n    this.monsters[monsterId] = monster;\n    this.io.emit(\"monsterSpawned\", monster);\n  }\n\n  deleteMonster(monsterId) {\n    delete this.monsters[monsterId];\n    this.io.emit(\"monsterRemoved\", monsterId);\n  }\n\n  addNpc(npcId, npc) {\n    this.npcs[npcId] = npc;\n    this.io.emit(\"npcSpawned\", npc);\n  }\n\n  deleteNpc(npcId) {\n    delete this.npcs[npcId];\n    this.io.emit(\"npcRemoved\", npcId);\n  }\n\n  drop(x, y) {}\n\n  createChest(x, y) {\n    const chest = new ChestModel(x, y, randomNumber(10, 20), `chest-${v4()}`);\n\n    this.addChest(chest.id, chest);\n  }\n\n  createItem(x, y) {\n    const randomItem =\n      itemData.items[Math.floor(Math.random() * itemData.items.length)];\n\n    const item = new ItemModel(\n      x,\n      y,\n      `item-${v4()}`,\n      randomItem.name,\n      randomItem.frame,\n      getRandonValues(),\n      getRandonValues(),\n      getRandonValues(),\n      WeaponTypes.MELEE,\n      \"Description\"\n    );\n\n    this.addItems(item.id, item);\n  }\n\n  pickRandomLocation() {\n    const location =\n      this.monsterLocations[\n        Math.floor(Math.random() * this.monsterLocations.length)\n      ];\n\n    if (this.monsters.length > 0) {\n      const invalidLocation = this.monsters.some((obj) => {\n        if (obj.x === location[0] && obj.y === location[1]) {\n          return true;\n        }\n        return false;\n      });\n      console.log(location);\n\n      if (invalidLocation) return this.pickRandomLocation();\n      return location || [200, 200];\n    }\n    console.log(location);\n    return location || [200, 200];\n  }\n\n  spawnMonster() {\n    const randomEnemy =\n      enemyData.enemies[Math.floor(Math.random() * enemyData.enemies.length)];\n\n    const location = this.pickRandomLocation();\n    const monster = new MonsterModel(\n      location[0],\n      location[1],\n      randomEnemy.goldValue, // gold value\n      this.id,\n      randomEnemy.key, // key\n      randomEnemy.healthValue, // health value\n      randomEnemy.attackValue, // attack value\n      randomEnemy.expValue, // exp value\n      3000 //timer\n    );\n    this.addMonster(monster.id, monster);\n  }\n}"],"mappings":"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","ignoreList":[]}