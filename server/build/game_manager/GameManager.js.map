{"version":3,"sources":["../../src/game_manager/GameManager.js"],"names":["GameManager","io","spawners","chests","monsters","players","items","npcs","rangedObjects","playerLocations","chestLocations","monsterLocations","npcLocations","itemsLocations","itemData","locations","itemDictionary","chest","createChest","bind","item","createItem","drop","parseMapData","setupEventListeners","setupSpawners","levelData","layers","forEach","layer","name","objects","obj","push","x","y","properties","spawner","on","socket","id","equipedItems","UserModel","updateOne","username","playerName","$set","player","console","log","emit","message","token","decoded","jwt","verify","process","env","JWT_SECRET","email","user","ChatModel","create","frame","key","_id","findById","playerSchema","spawnPlayer","broadcast","playerData","flipX","actionAActive","potionAActive","currentDirection","chestId","gold","updateGold","deleteChest","itemId","canPickupItem","addItem","deleteItems","removeItem","canEquipItem","equipItem","removeEquipedItem","levelUp","level","attack","defense","maxHealth","exp","maxExp","attackedPlayerId","playerAttackValue","playerAttacked","health","respawn","to","updateHealth","monsterId","dis","loseHealth","updateExp","deleteMonster","playerId","parseInt","damage","potion","potions","price","monster","stateTime","randomPosition","config","spawnInterval","limit","spawnerType","SpawnerType","CHEST","Object","keys","Spawner","addChest","MONSTER","addMonster","NPC","addNpc","deleteNpc","ITEM","addItems","setInterval","length","spawnMonster","PlayerModel","undefined","npcId","npc","ChestModel","randomItem","Math","floor","random","ItemModel","WeaponTypes","MELEE","location","invalidLocation","some","pickRandomLocation","randomEnemy","enemyData","enemies","MonsterModel","goldValue","healthValue","attackValue","expValue"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AAMA;;AACA;;AACA;;AACA;;;;;;IAEqBA,W;AACnB,uBAAYC,EAAZ,EAAgB;AAAA;AACd,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,EAAZ;AAEA,SAAKC,aAAL,GAAqB,EAArB;AAEA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,YAAL,GAAoB,EAApB;AAEA,SAAKC,cAAL,GAAsBC,QAAQ,CAACC,SAA/B;AAEA,SAAKC,cAAL,GAAsB;AACpBC,MAAAA,KAAK,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CADa;AAEpBC,MAAAA,IAAI,EAAE,KAAKC,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAFc;AAGpB,UAAI,KAAKG;AAHW,KAAtB;AAKD;;;;WAED,iBAAQ;AACN,WAAKC,YAAL;AACA,WAAKC,mBAAL;AACA,WAAKC,aAAL;AACD;;;WAED,wBAAe;AAAA;;AACb,WAAKC,SAAL,GAAiBA,SAAjB;AACA,WAAKA,SAAL,CAAeC,MAAf,CAAsBC,OAAtB,CAA8B,UAACC,KAAD,EAAW;AACvC,YAAIA,KAAK,CAACC,IAAN,KAAe,kBAAnB,EAAuC;AACrCD,UAAAA,KAAK,CAACE,OAAN,CAAcH,OAAd,CAAsB,UAACI,GAAD,EAAS;AAC7B,YAAA,KAAI,CAACvB,eAAL,CAAqBwB,IAArB,CAA0B,CAACD,GAAG,CAACE,CAAL,EAAQF,GAAG,CAACG,CAAZ,CAA1B;AACD,WAFD;AAGD,SAJD,MAIO,IAAIN,KAAK,CAACC,IAAN,KAAe,mBAAnB,EAAwC;AAC7CD,UAAAA,KAAK,CAACE,OAAN,CAAcH,OAAd,CAAsB,UAACI,GAAD,EAAS;AAC7B,gBAAI,KAAI,CAACrB,gBAAL,CAAsBqB,GAAG,CAACI,UAAJ,CAAeC,OAArC,CAAJ,EAAmD;AACjD,cAAA,KAAI,CAAC1B,gBAAL,CAAsBqB,GAAG,CAACI,UAAJ,CAAeC,OAArC,EAA8CJ,IAA9C,CAAmD,CAACD,GAAG,CAACE,CAAL,EAAQF,GAAG,CAACG,CAAZ,CAAnD;AACD,aAFD,MAEO;AACL,cAAA,KAAI,CAACxB,gBAAL,CAAsBqB,GAAG,CAACI,UAAJ,CAAeC,OAArC,IAAgD,CAAC,CAACL,GAAG,CAACE,CAAL,EAAQF,GAAG,CAACG,CAAZ,CAAD,CAAhD;AACD;AACF,WAND;AAOD,SARM,MAQA,IAAIN,KAAK,CAACC,IAAN,KAAe,iBAAnB,EAAsC;AAC3CD,UAAAA,KAAK,CAACE,OAAN,CAAcH,OAAd,CAAsB,UAACI,GAAD,EAAS;AAC7B,gBAAI,KAAI,CAACtB,cAAL,CAAoBsB,GAAG,CAACI,UAAJ,CAAeC,OAAnC,CAAJ,EAAiD;AAC/C,cAAA,KAAI,CAAC3B,cAAL,CAAoBsB,GAAG,CAACI,UAAJ,CAAeC,OAAnC,EAA4CJ,IAA5C,CAAiD,CAACD,GAAG,CAACE,CAAL,EAAQF,GAAG,CAACG,CAAZ,CAAjD;AACD,aAFD,MAEO;AACL,cAAA,KAAI,CAACzB,cAAL,CAAoBsB,GAAG,CAACI,UAAJ,CAAeC,OAAnC,IAA8C,CAAC,CAACL,GAAG,CAACE,CAAL,EAAQF,GAAG,CAACG,CAAZ,CAAD,CAA9C;AACD;AACF,WAND;AAOD,SARM,MAQA,IAAIN,KAAK,CAACC,IAAN,KAAe,eAAnB,EAAoC;AACzCD,UAAAA,KAAK,CAACE,OAAN,CAAcH,OAAd,CAAsB,UAACI,GAAD,EAAS;AAC7B,gBAAI,KAAI,CAACpB,YAAL,CAAkBoB,GAAG,CAACI,UAAJ,CAAeC,OAAjC,CAAJ,EAA+C;AAC7C,cAAA,KAAI,CAACzB,YAAL,CAAkBoB,GAAG,CAACI,UAAJ,CAAeC,OAAjC,EAA0CJ,IAA1C,CAA+C,CAACD,GAAG,CAACE,CAAL,EAAQF,GAAG,CAACG,CAAZ,CAA/C;AACD,aAFD,MAEO;AACL,cAAA,KAAI,CAACvB,YAAL,CAAkBoB,GAAG,CAACI,UAAJ,CAAeC,OAAjC,IAA4C,CAAC,CAACL,GAAG,CAACE,CAAL,EAAQF,GAAG,CAACG,CAAZ,CAAD,CAA5C;AACD;AACF,WAND;AAOD;AACF,OA9BD;AA+BD;;;WAED,+BAAsB;AAAA;;AACpB,WAAKlC,EAAL,CAAQqC,EAAR,CAAW,YAAX,EAAyB,UAACC,MAAD,EAAY;AACnC;AAEAA,QAAAA,MAAM,CAACD,EAAP,CAAU,gBAAV,6FAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;;AAExB,sBAAI,CAAC,MAAI,CAACjC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBlC,KAA7B,EAAoC;AAClC,oBAAA,MAAI,CAACD,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBlC,KAAxB,GAAgC,IAAhC;AACD;;AAED,sBAAI,CAAC,MAAI,CAACD,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBC,YAA7B,EAA2C;AACzC,oBAAA,MAAI,CAACpC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBC,YAAxB,GAAuC,IAAvC;AACD;;AARuB;AAAA,yBAUlBC,sBAAUC,SAAV,CACJ;AAAEC,oBAAAA,QAAQ,EAAE,MAAI,CAACvC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBK;AAApC,mBADI,EAEJ;AACEC,oBAAAA,IAAI,EAAE;AACJC,sBAAAA,MAAM,EAAE,MAAI,CAAC1C,OAAL,CAAakC,MAAM,CAACC,EAApB;AADJ;AADR,mBAFI,CAVkB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmBxBQ,kBAAAA,OAAO,CAACC,GAAR;;AAnBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5B;AAuBAV,QAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC5B;AAEAU,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,iBAAO,MAAI,CAAC5C,OAAL,CAAakC,MAAM,CAACC,EAApB,CAAP,CAL4B,CAO5B;;AACA,UAAA,MAAI,CAACvC,EAAL,CAAQiD,IAAR,CAAa,cAAb,EAA6BX,MAAM,CAACC,EAApC;AACD,SATD;AAWAD,QAAAA,MAAM,CAACD,EAAP,CAAU,aAAV;AAAA,oGAAyB,kBAAOa,OAAP,EAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,oBAAAA,OAFe,GAELC,yBAAIC,MAAJ,CAAWH,KAAX,EAAkBI,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAFK;AAGbC,oBAAAA,KAHa,GAGHN,OAAO,CAACO,IAHL,CAGbD,KAHa;AAAA;AAAA,2BAIfE,sBAAUC,MAAV,CAAiB;AAAEH,sBAAAA,KAAK,EAALA,KAAF;AAASR,sBAAAA,OAAO,EAAPA;AAAT,qBAAjB,CAJe;;AAAA;AAKrB,oBAAA,MAAI,CAAClD,EAAL,CAAQiD,IAAR,CAAa,YAAb,EAA2B;AACzBC,sBAAAA,OAAO,EAAPA,OADyB;AAEzBrB,sBAAAA,IAAI,EAAE,MAAI,CAACzB,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBK,UAFL;AAGzBkB,sBAAAA,KAAK,EAAE,MAAI,CAAC1D,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBuB;AAHN,qBAA3B;;AALqB;AAAA;;AAAA;AAAA;AAAA;AAWrBf,oBAAAA,OAAO,CAACC,GAAR;;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAzB;;AAAA;AAAA;AAAA;AAAA;AAeAV,QAAAA,MAAM,CAACD,EAAP,CAAU,WAAV;AAAA,oGAAuB,kBAAOc,KAAP,EAAcY,GAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEbX,oBAAAA,OAFa,GAEHC,yBAAIC,MAAJ,CAAWH,KAAX,EAAkBI,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAFG;AAAA,oCAGGL,OAAO,CAACO,IAHX,EAGX9B,IAHW,iBAGXA,IAHW,EAGLmC,GAHK,iBAGLA,GAHK;AAAA;AAAA,2BAKQvB,sBAAUwB,QAAV,CAAmBD,GAAnB,CALR;;AAAA;AAKbE,oBAAAA,YALa;;AAMnB;AAEA,oBAAA,MAAI,CAACC,WAAL,CAAiB7B,MAAM,CAACC,EAAxB,EAA4BV,IAA5B,EAAkCkC,GAAlC,EAAuCG,YAAY,CAACpB,MAApD,EARmB,CAUnB;;;AACAR,oBAAAA,MAAM,CAACW,IAAP,CAAY,gBAAZ,EAA8B,MAAI,CAAC7C,OAAnC,EAXmB,CAanB;;AACAkC,oBAAAA,MAAM,CAACW,IAAP,CAAY,iBAAZ,EAA+B,MAAI,CAAC9C,QAApC,EAdmB,CAgBnB;;AACAmC,oBAAAA,MAAM,CAACW,IAAP,CAAY,eAAZ,EAA6B,MAAI,CAAC/C,MAAlC,EAjBmB,CAmBnB;;AACAoC,oBAAAA,MAAM,CAACW,IAAP,CAAY,cAAZ,EAA4B,MAAI,CAAC5C,KAAjC,EApBmB,CAsBnB;;AACAiC,oBAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC3C,IAAhC,EAvBmB,CAyBnB;;AACAgC,oBAAAA,MAAM,CAAC8B,SAAP,CAAiBnB,IAAjB,CAAsB,aAAtB,EAAqC,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,CAArC;AACAD,oBAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,CAA3B;AACAD,oBAAAA,MAAM,CAAC8B,SAAP,CAAiBnB,IAAjB,CACE,oBADF,EAEEX,MAAM,CAACC,EAFT,EAGE,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,CAHF;AA5BmB;AAAA;;AAAA;AAAA;AAAA;AAkCnBQ,oBAAAA,OAAO,CAACC,GAAR;AACAV,oBAAAA,MAAM,CAACW,IAAP,CAAY,cAAZ;;AAnCmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAvB;;AAAA;AAAA;AAAA;AAAA;AAuCAX,QAAAA,MAAM,CAACD,EAAP,CAAU,gBAAV,EAA4B,UAACgC,UAAD,EAAgB;AAC1C,cAAI,MAAI,CAACjE,OAAL,CAAakC,MAAM,CAACC,EAApB,CAAJ,EAA6B;AAC3B,YAAA,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBN,CAAxB,GAA4BoC,UAAU,CAACpC,CAAvC;AACA,YAAA,MAAI,CAAC7B,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBL,CAAxB,GAA4BmC,UAAU,CAACnC,CAAvC;AACA,YAAA,MAAI,CAAC9B,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwB+B,KAAxB,GAAgCD,UAAU,CAACC,KAA3C;AACA,YAAA,MAAI,CAAClE,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBgC,aAAxB,GAAwCF,UAAU,CAACE,aAAnD;AACA,YAAA,MAAI,CAACnE,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBiC,aAAxB,GAAwCH,UAAU,CAACG,aAAnD;AACA,YAAA,MAAI,CAACpE,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBuB,KAAxB,GAAgCO,UAAU,CAACP,KAA3C;AACA,YAAA,MAAI,CAAC1D,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBkC,gBAAxB,GACEJ,UAAU,CAACI,gBADb,CAP2B,CAS3B;;AACA,YAAA,MAAI,CAACzE,EAAL,CAAQiD,IAAR,CAAa,aAAb,EAA4B,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,CAA5B;AACD;AACF,SAbD;AAeAD,QAAAA,MAAM,CAACD,EAAP,CAAU,aAAV,EAAyB,UAACqC,OAAD,EAAa;AACpC;AACA,cAAI,MAAI,CAACxE,MAAL,CAAYwE,OAAZ,CAAJ,EAA0B;AACxB,gBAAQC,IAAR,GAAiB,MAAI,CAACzE,MAAL,CAAYwE,OAAZ,CAAjB,CAAQC,IAAR,CADwB,CAGxB;;AACA,YAAA,MAAI,CAACvE,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBqC,UAAxB,CAAmCD,IAAnC;;AACArC,YAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBoC,IAAnD;AACArC,YAAAA,MAAM,CAAC8B,SAAP,CAAiBnB,IAAjB,CACE,oBADF,EAEEX,MAAM,CAACC,EAFT,EAGE,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBoC,IAH1B,EANwB,CAWxB;;AACA,YAAA,MAAI,CAACE,WAAL,CAAiBH,OAAjB;AACD;AACF,SAhBD;AAkBApC,QAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,UAACyC,MAAD,EAAY;AAClC;AACA,cAAI,MAAI,CAACzE,KAAL,CAAWyE,MAAX,CAAJ,EAAwB;AACtB,gBAAI,MAAI,CAAC1E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBwC,aAAxB,EAAJ,EAA6C;AAC3C,cAAA,MAAI,CAAC3E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwByC,OAAxB,CAAgC,MAAI,CAAC3E,KAAL,CAAWyE,MAAX,CAAhC;;AACAxC,cAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,CAA3B;AACAD,cAAAA,MAAM,CAAC8B,SAAP,CAAiBnB,IAAjB,CACE,oBADF,EAEEX,MAAM,CAACC,EAFT,EAGE,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,CAHF,EAH2C,CAS3C;;AACA,cAAA,MAAI,CAAC0C,WAAL,CAAiBH,MAAjB;AACD;AACF;AACF,SAhBD;AAkBAxC,QAAAA,MAAM,CAACD,EAAP,CAAU,mBAAV,EAA+B,UAACyC,MAAD,EAAY;AACzC,UAAA,MAAI,CAAC1E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwB2C,UAAxB,CAAmCJ,MAAnC;;AACAxC,UAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,CAA3B;AACAD,UAAAA,MAAM,CAAC8B,SAAP,CAAiBnB,IAAjB,CACE,oBADF,EAEEX,MAAM,CAACC,EAFT,EAGE,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,CAHF;AAKD,SARD;AAUAD,QAAAA,MAAM,CAACD,EAAP,CAAU,mBAAV,EAA+B,UAACyC,MAAD,EAAY;AACzC,cAAI,MAAI,CAAC1E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBlC,KAAxB,CAA8ByE,MAA9B,CAAJ,EAA2C;AACzC,gBAAI,MAAI,CAAC1E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwB4C,YAAxB,EAAJ,EAA4C;AAC1C,cAAA,MAAI,CAAC/E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwB6C,SAAxB,CACE,MAAI,CAAChF,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBlC,KAAxB,CAA8ByE,MAA9B,CADF;;AAIAxC,cAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,CAA3B;AACAD,cAAAA,MAAM,CAAC8B,SAAP,CAAiBnB,IAAjB,CACE,oBADF,EAEEX,MAAM,CAACC,EAFT,EAGE,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,CAHF;AAKD;AACF;AACF,SAfD;AAiBAD,QAAAA,MAAM,CAACD,EAAP,CAAU,qBAAV,EAAiC,UAACyC,MAAD,EAAY;AAC3C,cAAI,MAAI,CAAC1E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBC,YAAxB,CAAqCsC,MAArC,CAAJ,EAAkD;AAChD,gBAAI,MAAI,CAAC1E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBwC,aAAxB,EAAJ,EAA6C;AAC3C,cAAA,MAAI,CAAC3E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwByC,OAAxB,CACE,MAAI,CAAC5E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBC,YAAxB,CAAqCsC,MAArC,CADF;;AAIA,cAAA,MAAI,CAAC1E,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwB8C,iBAAxB,CAA0CP,MAA1C;;AAEAxC,cAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,CAA3B;AACAD,cAAAA,MAAM,CAAC8B,SAAP,CAAiBnB,IAAjB,CACE,oBADF,EAEEX,MAAM,CAACC,EAFT,EAGE,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,CAHF;AAKD;AACF;AACF,SAjBD;AAmBAD,QAAAA,MAAM,CAACD,EAAP,CAAU,SAAV,EAAqB,YAAM;AACzB,UAAA,MAAI,CAACjC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwB+C,OAAxB;;AACA,UAAA,MAAI,CAACtF,EAAL,CAAQiD,IAAR,CACE,mBADF,EAEEX,MAAM,CAACC,EAFT,EAGE,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBgD,KAH1B,EAIE,MAAI,CAACnF,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBiD,MAJ1B,EAKE,MAAI,CAACpF,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBkD,OAL1B,EAME,MAAI,CAACrF,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBmD,SAN1B,EAOE,MAAI,CAACtF,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBoD,GAP1B,EAQE,MAAI,CAACvF,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBqD,MAR1B;AAUD,SAZD;AAcAtD,QAAAA,MAAM,CAACD,EAAP,CAAU,gBAAV,EAA4B,UAACwD,gBAAD,EAAsB;AAChD,cAAI,MAAI,CAACzF,OAAL,CAAayF,gBAAb,CAAJ,EAAoC;AAClC;AACA,gBAAQlB,IAAR,GAAiB,MAAI,CAACvE,OAAL,CAAayF,gBAAb,CAAjB,CAAQlB,IAAR;AACA,gBAAMmB,iBAAiB,GAAG,MAAI,CAAC1F,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBiD,MAAlD,CAHkC,CAKlC;;AACA,YAAA,MAAI,CAACpF,OAAL,CAAayF,gBAAb,EAA+BE,cAA/B,CAA8CD,iBAA9C,EANkC,CAQlC;;;AACA,gBAAI,MAAI,CAAC1F,OAAL,CAAayF,gBAAb,EAA+BG,MAA/B,IAAyC,CAA7C,EAAgD;AAC9C;AACA,cAAA,MAAI,CAAC5F,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBqC,UAAxB,CAAmCD,IAAnC,EAF8C,CAI9C;;;AACA,cAAA,MAAI,CAACvE,OAAL,CAAayF,gBAAb,EAA+BI,OAA/B,CAAuC,MAAI,CAAC7F,OAA5C;;AACA,cAAA,MAAI,CAACJ,EAAL,CAAQiD,IAAR,CAAa,eAAb,EAA8B,MAAI,CAAC7C,OAAL,CAAayF,gBAAb,CAA9B,EAN8C,CAQ9C;;;AACAvD,cAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBoC,IAAnD,EAT8C,CAW9C;;AACA,cAAA,MAAI,CAACvE,OAAL,CAAayF,gBAAb,EAA+BjB,UAA/B,CAA0C,CAACD,IAA3C;;AACA,cAAA,MAAI,CAAC3E,EAAL,CACGkG,EADH,WACSL,gBADT,GAEG5C,IAFH,CAEQ,aAFR,EAEuB,MAAI,CAAC7C,OAAL,CAAayF,gBAAb,EAA+BlB,IAFtD,EAb8C,CAiB9C;;;AACA,cAAA,MAAI,CAACvE,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwB4D,YAAxB,CAAqC,EAArC;;AACA,cAAA,MAAI,CAACnG,EAAL,CAAQiD,IAAR,CACE,oBADF,EAEEX,MAAM,CAACC,EAFT,EAGE,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwByD,MAH1B;AAKD,aAxBD,MAwBO;AACL,cAAA,MAAI,CAAChG,EAAL,CAAQiD,IAAR,CACE,oBADF,EAEE4C,gBAFF,EAGE,MAAI,CAACzF,OAAL,CAAayF,gBAAb,EAA+BG,MAHjC;AAKD;AACF;AACF,SA1CD;AA4CA1D,QAAAA,MAAM,CAACD,EAAP,CAAU,iBAAV,EAA6B,UAAC+D,SAAD,EAAYC,GAAZ,EAAoB;AAC/C;AACA,cAAI,MAAI,CAAClG,QAAL,CAAciG,SAAd,CAAJ,EAA8B;AAC5B,wCAA8B,MAAI,CAACjG,QAAL,CAAciG,SAAd,CAA9B;AAAA,gBAAQzB,IAAR,yBAAQA,IAAR;AAAA,gBAAca,MAAd,yBAAcA,MAAd;AAAA,gBAAsBG,GAAtB,yBAAsBA,GAAtB;AACA,gBAAMG,iBAAiB,GAAG,MAAI,CAAC1F,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBiD,MAAlD,CAF4B,CAG5B;;AACA,YAAA,MAAI,CAACrF,QAAL,CAAciG,SAAd,EAAyBE,UAAzB,CAAoCR,iBAApC,EAJ4B,CAM5B;;;AACA,gBAAI,MAAI,CAAC3F,QAAL,CAAciG,SAAd,EAAyBJ,MAAzB,IAAmC,CAAvC,EAA0C;AACxC;AACA,cAAA,MAAI,CAAC5F,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBqC,UAAxB,CAAmCD,IAAnC;;AACArC,cAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBoC,IAAnD,EAHwC,CAKxC;;AACA,cAAA,MAAI,CAACvE,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBgE,SAAxB,CAAkCZ,GAAlC;;AACA,cAAA,MAAI,CAAC3F,EAAL,CAAQiD,IAAR,CAAa,UAAb,EAAyB0C,GAAzB,EAA8BrD,MAAM,CAACC,EAArC;;AAEA,cAAA,MAAI,CAACiE,aAAL,CAAmBJ,SAAnB;AACD,aAVD,MAUO;AACL;AACA,cAAA,MAAI,CAACpG,EAAL,CAAQiD,IAAR,CACE,qBADF,EAEEmD,SAFF,EAGE,MAAI,CAACjG,QAAL,CAAciG,SAAd,EAAyBJ,MAH3B;AAKD;AACF;AACF,SA5BD;AA8BA1D,QAAAA,MAAM,CAACD,EAAP,CAAU,eAAV,EAA2B,UAAC+D,SAAD,EAAYK,QAAZ,EAAyB;AAClD,cAAQjB,MAAR,GAAmB,MAAI,CAACrF,QAAL,CAAciG,SAAd,CAAnB,CAAQZ,MAAR,CADkD,CAElD;;AACA,UAAA,MAAI,CAACpF,OAAL,CAAaqG,QAAb,EAAuBV,cAAvB,CAAsCP,MAAtC;;AACA,UAAA,MAAI,CAACxF,EAAL,CAAQiD,IAAR,CACE,oBADF,EAEEwD,QAFF,EAGE,MAAI,CAACrG,OAAL,CAAaqG,QAAb,EAAuBT,MAHzB,EAJkD,CAUlD;;;AACA,cAAI,MAAI,CAAC5F,OAAL,CAAaqG,QAAb,EAAuBT,MAAvB,IAAiC,CAArC,EAAwC;AACtC;AACA,YAAA,MAAI,CAAC5F,OAAL,CAAaqG,QAAb,EAAuB7B,UAAvB,CACE8B,QAAQ,CAAC,CAAC,MAAI,CAACtG,OAAL,CAAaqG,QAAb,EAAuB9B,IAAxB,GAA+B,CAAhC,EAAmC,EAAnC,CADV;;AAGArC,YAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC7C,OAAL,CAAaqG,QAAb,EAAuB9B,IAAlD,EALsC,CAOtC;;AACA,YAAA,MAAI,CAACvE,OAAL,CAAaqG,QAAb,EAAuBR,OAAvB,CAA+B,MAAI,CAAC7F,OAApC;;AACA,YAAA,MAAI,CAACJ,EAAL,CAAQiD,IAAR,CAAa,eAAb,EAA8B,MAAI,CAAC7C,OAAL,CAAaqG,QAAb,CAA9B;AACD;AACF,SAtBD;AAwBAnE,QAAAA,MAAM,CAACD,EAAP,CAAU,WAAV,EAAuB,UAACsE,MAAD,EAAY,CAAE,CAArC;AAEArE,QAAAA,MAAM,CAACD,EAAP,CAAU,cAAV,EAA0B,UAACoE,QAAD,EAAWT,MAAX,EAAsB;AAC9C,cAAI1D,MAAM,CAACC,EAAP,KAAckE,QAAlB,EAA4B;AAC1B,YAAA,MAAI,CAACrG,OAAL,CAAakC,MAAM,CAACC,EAApB;;AACA,YAAA,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBqE,MAAxB,CAA+BZ,MAA/B;;AACA,YAAA,MAAI,CAAChG,EAAL,CAAQiD,IAAR,CACE,oBADF,EAEEX,MAAM,CAACC,EAFT,EAGE,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwByD,MAH1B;AAKD;AACF,SAVD;AAYA1D,QAAAA,MAAM,CAACD,EAAP,CAAU,oBAAV,EAAgC,UAAClB,IAAD,EAAU;AACxC,UAAA,MAAI,CAACf,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBsE,OAAxB;;AAEA,UAAA,MAAI,CAACzG,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBqC,UAAxB,CAAmC,CAACzD,IAAI,CAAC2F,KAAzC;;AACAxE,UAAAA,MAAM,CAACW,IAAP,CAAY,aAAZ,EAA2B,MAAI,CAAC7C,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBoC,IAAnD;AACArC,UAAAA,MAAM,CAAC8B,SAAP,CAAiBnB,IAAjB,CACE,oBADF,EAEEX,MAAM,CAACC,EAFT,EAGE,MAAI,CAACnC,OAAL,CAAakC,MAAM,CAACC,EAApB,EAAwBoC,IAH1B;AAKD,SAVD;AAYArC,QAAAA,MAAM,CAACD,EAAP,CAAU,iBAAV,EAA6B,UAAC0E,OAAD,EAAa;AACxC,cAAI,CAAC,MAAI,CAAC5G,QAAL,CAAc4G,OAAO,CAACxE,EAAtB,CAAL,EAAgC;AAChC,UAAA,MAAI,CAACpC,QAAL,CAAc4G,OAAO,CAACxE,EAAtB,EAA0ByE,SAA1B,GAAsCD,OAAO,CAACC,SAA9C;AACA,UAAA,MAAI,CAAC7G,QAAL,CAAc4G,OAAO,CAACxE,EAAtB,EAA0B0E,cAA1B,GAA2CF,OAAO,CAACE,cAAnD;AACA,UAAA,MAAI,CAAC9G,QAAL,CAAc4G,OAAO,CAACxE,EAAtB,EAA0BN,CAA1B,GAA8B8E,OAAO,CAAC9E,CAAtC;AACA,UAAA,MAAI,CAAC9B,QAAL,CAAc4G,OAAO,CAACxE,EAAtB,EAA0BL,CAA1B,GAA8B6E,OAAO,CAAC7E,CAAtC,CALwC,CAMxC;;AAEA,UAAA,MAAI,CAAClC,EAAL,CAAQiD,IAAR,CAAa,cAAb,EAA6B,MAAI,CAAC9C,QAAL,CAAc4G,OAAO,CAACxE,EAAtB,CAA7B;AACD,SATD;AAWAD,QAAAA,MAAM,CAACD,EAAP,CAAU,UAAV,EAAsB,UAACJ,CAAD,EAAIC,CAAJ,EAAOf,IAAP,EAAgB;AACpC,UAAA,MAAI,CAACJ,cAAL,CAAoBI,IAApB,EAA0Bc,CAA1B,EAA6BC,CAA7B;AACD,SAFD,EAjVmC,CAqVnC;;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,OAvVD;AAwVD;;;WAED,yBAAgB;AAAA;;AACd,UAAMkE,MAAM,GAAG;AACbC,QAAAA,aAAa,EAAE,IADF;AAEbC,QAAAA,KAAK,EAAE,CAFM;AAGbC,QAAAA,WAAW,EAAEC,mBAAYC,KAHZ;AAIbhF,QAAAA,EAAE,EAAE;AAJS,OAAf;AAMA,UAAIH,OAAJ,CAPc,CAQd;;AACAoF,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKhH,cAAjB,EAAiCkB,OAAjC,CAAyC,UAACoC,GAAD,EAAS;AAChDmD,QAAAA,MAAM,CAAC3E,EAAP,mBAAqBwB,GAArB;AAEA3B,QAAAA,OAAO,GAAG,IAAIsF,mBAAJ,CACRR,MADQ,EAER,MAAI,CAACzG,cAAL,CAAoBsD,GAApB,CAFQ,EAGR,MAAI,CAAC4D,QAAL,CAAczG,IAAd,CAAmB,MAAnB,CAHQ,EAIR,MAAI,CAAC2D,WAAL,CAAiB3D,IAAjB,CAAsB,MAAtB,CAJQ,CAAV;AAMA,QAAA,MAAI,CAACjB,QAAL,CAAcmC,OAAO,CAACG,EAAtB,IAA4BH,OAA5B;AACD,OAVD,EATc,CAqBd;;AACAoF,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAK/G,gBAAjB,EAAmCiB,OAAnC,CAA2C,UAACoC,GAAD,EAAS;AAClDmD,QAAAA,MAAM,CAAC3E,EAAP,qBAAuBwB,GAAvB;AACAmD,QAAAA,MAAM,CAACE,KAAP,GAAe,CAAf;AACAF,QAAAA,MAAM,CAACG,WAAP,GAAqBC,mBAAYM,OAAjC;AAEAxF,QAAAA,OAAO,GAAG,IAAIsF,mBAAJ,CACRR,MADQ,EAER,MAAI,CAACxG,gBAAL,CAAsBqD,GAAtB,CAFQ,EAGR,MAAI,CAAC8D,UAAL,CAAgB3G,IAAhB,CAAqB,MAArB,CAHQ,EAIR,MAAI,CAACsF,aAAL,CAAmBtF,IAAnB,CAAwB,MAAxB,CAJQ,CAAV;AAMA,QAAA,MAAI,CAACjB,QAAL,CAAcmC,OAAO,CAACG,EAAtB,IAA4BH,OAA5B;AACD,OAZD,EAtBc,CAoCd;;AACAoF,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAK9G,YAAjB,EAA+BgB,OAA/B,CAAuC,UAACoC,GAAD,EAAS;AAC9CmD,QAAAA,MAAM,CAAC3E,EAAP,iBAAmBwB,GAAnB;AACAmD,QAAAA,MAAM,CAACG,WAAP,GAAqBC,mBAAYQ,GAAjC;AAEA1F,QAAAA,OAAO,GAAG,IAAIsF,mBAAJ,CACRR,MADQ,EAER,MAAI,CAACvG,YAAL,CAAkBoD,GAAlB,CAFQ,EAGR,MAAI,CAACgE,MAAL,CAAY7G,IAAZ,CAAiB,MAAjB,CAHQ,EAIR,MAAI,CAAC8G,SAAL,CAAe9G,IAAf,CAAoB,MAApB,CAJQ,CAAV;AAMA,QAAA,MAAI,CAACjB,QAAL,CAAcmC,OAAO,CAACG,EAAtB,IAA4BH,OAA5B;AACD,OAXD,EArCc,CAkDd;;AACA8E,MAAAA,MAAM,CAAC3E,EAAP,GAAY,MAAZ;AACA2E,MAAAA,MAAM,CAACG,WAAP,GAAqBC,mBAAYW,IAAjC;AACA7F,MAAAA,OAAO,GAAG,IAAIsF,mBAAJ,CACRR,MADQ,EAER,KAAKtG,cAFG,EAGR,KAAKsH,QAAL,CAAchH,IAAd,CAAmB,IAAnB,CAHQ,EAIR,KAAK+D,WAAL,CAAiB/D,IAAjB,CAAsB,IAAtB,CAJQ,CAAV;AAMA,WAAKjB,QAAL,CAAcmC,OAAO,CAACG,EAAtB,IAA4BH,OAA5B;AAEA+F,MAAAA,WAAW,CAAC,YAAM;AAChB,YAAKX,MAAM,CAACC,IAAP,CAAY,MAAI,CAACtH,QAAjB,EAA2BiI,MAA3B,GAAmC,CAAxC,EAA4C;AAC1C,UAAA,MAAI,CAACC,YAAL;AACD;AACF,OAJU,EAIR,IAJQ,CAAX;AAKD;;;WACD,qBAAY5B,QAAZ,EAAsB5E,IAAtB,EAA4BkC,GAA5B,EAAiCG,YAAjC,EAA+C;AAC7C,UAAMpB,MAAM,GAAG,IAAIwF,uBAAJ,CACb7B,QADa,EAEb,KAAKjG,eAFQ,EAGb,KAAKJ,OAHQ,EAIbyB,IAJa,EAKbkC,GALa,EAMbwE,SANa,EAObrE,YAPa,CAAf;AASA,WAAK9D,OAAL,CAAaqG,QAAb,IAAyB3D,MAAzB;AACD;;;WAED,kBAASgC,MAAT,EAAiB3D,IAAjB,EAAuB;AACrB,WAAKd,KAAL,CAAWyE,MAAX,IAAqB3D,IAArB;AACA,WAAKnB,EAAL,CAAQiD,IAAR,CAAa,aAAb,EAA4B9B,IAA5B;AACD;;;WAED,qBAAY2D,MAAZ,EAAoB;AAClB,aAAO,KAAKzE,KAAL,CAAWyE,MAAX,CAAP;AACA,WAAK9E,EAAL,CAAQiD,IAAR,CAAa,aAAb,EAA4B6B,MAA5B;AACD;;;WAED,kBAASJ,OAAT,EAAkB1D,KAAlB,EAAyB;AACvB,WAAKd,MAAL,CAAYwE,OAAZ,IAAuB1D,KAAvB;AACA,WAAKhB,EAAL,CAAQiD,IAAR,CAAa,cAAb,EAA6BjC,KAA7B;AACD;;;WAED,qBAAY0D,OAAZ,EAAqB;AACnB,aAAO,KAAKxE,MAAL,CAAYwE,OAAZ,CAAP;AACA,WAAK1E,EAAL,CAAQiD,IAAR,CAAa,cAAb,EAA6ByB,OAA7B;AACD;;;WAED,oBAAW0B,SAAX,EAAsBW,OAAtB,EAA+B;AAC7B,WAAK5G,QAAL,CAAciG,SAAd,IAA2BW,OAA3B;AACA,WAAK/G,EAAL,CAAQiD,IAAR,CAAa,gBAAb,EAA+B8D,OAA/B;AACD;;;WAED,uBAAcX,SAAd,EAAyB;AACvB,aAAO,KAAKjG,QAAL,CAAciG,SAAd,CAAP;AACA,WAAKpG,EAAL,CAAQiD,IAAR,CAAa,gBAAb,EAA+BmD,SAA/B;AACD;;;WAED,gBAAOoC,KAAP,EAAcC,GAAd,EAAmB;AACjB,WAAKnI,IAAL,CAAUkI,KAAV,IAAmBC,GAAnB;AACA,WAAKzI,EAAL,CAAQiD,IAAR,CAAa,YAAb,EAA2BwF,GAA3B;AACD;;;WAED,mBAAUD,KAAV,EAAiB;AACf,aAAO,KAAKlI,IAAL,CAAUkI,KAAV,CAAP;AACA,WAAKxI,EAAL,CAAQiD,IAAR,CAAa,YAAb,EAA2BuF,KAA3B;AACD;;;WAED,cAAKvG,CAAL,EAAQC,CAAR,EAAW,CAAE;;;WAEb,qBAAYD,CAAZ,EAAeC,CAAf,EAAkB;AAChB,UAAMlB,KAAK,GAAG,IAAI0H,sBAAJ,CAAezG,CAAf,EAAkBC,CAAlB,EAAqB,yBAAa,EAAb,EAAiB,EAAjB,CAArB,kBAAoD,eAApD,EAAd;AAEA,WAAKyF,QAAL,CAAc3G,KAAK,CAACuB,EAApB,EAAwBvB,KAAxB;AACD;;;WAED,oBAAWiB,CAAX,EAAcC,CAAd,EAAiB;AACf,UAAMyG,UAAU,GACd9H,QAAQ,CAACR,KAAT,CAAeuI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjI,QAAQ,CAACR,KAAT,CAAe+H,MAA1C,CAAf,CADF;AAGA,UAAMjH,IAAI,GAAG,IAAI4H,qBAAJ,CACX9G,CADW,EAEXC,CAFW,iBAGH,eAHG,GAIXyG,UAAU,CAAC9G,IAJA,EAKX8G,UAAU,CAAC7E,KALA,EAMX,6BANW,EAOX,6BAPW,EAQX,6BARW,EASXkF,mBAAYC,KATD,EAUX,aAVW,CAAb;AAaA,WAAKf,QAAL,CAAc/G,IAAI,CAACoB,EAAnB,EAAuBpB,IAAvB;AACD;;;WAED,8BAAqB;AACnB,UAAM+H,QAAQ,GACZ,KAAKxI,gBAAL,CACEkI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKpI,gBAAL,CAAsB0H,MAAjD,CADF,CADF;;AAKA,UAAI,KAAKjI,QAAL,CAAciI,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,YAAMe,eAAe,GAAG,KAAKhJ,QAAL,CAAciJ,IAAd,CAAmB,UAACrH,GAAD,EAAS;AAClD,cAAIA,GAAG,CAACE,CAAJ,KAAUiH,QAAQ,CAAC,CAAD,CAAlB,IAAyBnH,GAAG,CAACG,CAAJ,KAAUgH,QAAQ,CAAC,CAAD,CAA/C,EAAoD;AAClD,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD,SALuB,CAAxB;AAOA,YAAIC,eAAJ,EAAqB,OAAO,KAAKE,kBAAL,EAAP;AACrB,eAAOH,QAAQ,IAAI,CAAC,GAAD,EAAM,GAAN,CAAnB;AACD;;AACD,aAAOA,QAAQ,IAAI,CAAC,GAAD,EAAM,GAAN,CAAnB;AACD;;;WAED,wBAAe;AACb,UAAMI,WAAW,GACfC,SAAS,CAACC,OAAV,CAAkBZ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBS,SAAS,CAACC,OAAV,CAAkBpB,MAA7C,CAAlB,CADF;AAGA,UAAMc,QAAQ,GAAG,KAAKG,kBAAL,EAAjB;AACA,UAAMtC,OAAO,GAAG,IAAI0C,wBAAJ,CACdP,QAAQ,CAAC,CAAD,CADM,EAEdA,QAAQ,CAAC,CAAD,CAFM,EAGdI,WAAW,CAACI,SAHE,EAGS;AACvB,WAAKnH,EAJS,EAKd+G,WAAW,CAACvF,GALE,EAKG;AACjBuF,MAAAA,WAAW,CAACK,WANE,EAMW;AACzBL,MAAAA,WAAW,CAACM,WAPE,EAOW;AACzBN,MAAAA,WAAW,CAACO,QARE,EAQQ;AACtB,UATc,CAST;AATS,OAAhB;AAWA,WAAKhC,UAAL,CAAgBd,OAAO,CAACxE,EAAxB,EAA4BwE,OAA5B;AACD","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport PlayerModel from \"../models/PlayerModel\";\r\nimport UserModel from \"../models/UserModel\";\r\nimport ChatModel from \"../models/ChatModel\";\r\n\r\nimport * as levelData from \"../../public/assets/level/new_level.json\";\r\nimport * as itemData from \"../../public/assets/level/tools.json\";\r\nimport * as enemyData from \"../../public/assets/Enemies/enemies.json\";\r\n\r\nimport Spawner from \"./controllers/Spawner\";\r\nimport {\r\n  getRandonValues,\r\n  randomNumber,\r\n  SpawnerType,\r\n  WeaponTypes,\r\n} from \"./utils\";\r\nimport ItemModel from \"../models/ItemModel\";\r\nimport ChestModel from \"../models/ChestModel\";\r\nimport { v4 } from \"uuid\";\r\nimport MonsterModel from \"../models/MonsterModel\";\r\n\r\nexport default class GameManager {\r\n  constructor(io) {\r\n    this.io = io;\r\n    this.spawners = {};\r\n    this.chests = {};\r\n    this.monsters = {};\r\n    this.players = {};\r\n    this.items = {};\r\n    this.npcs = {};\r\n\r\n    this.rangedObjects = {};\r\n\r\n    this.playerLocations = [];\r\n    this.chestLocations = {};\r\n    this.monsterLocations = {};\r\n    this.npcLocations = {};\r\n\r\n    this.itemsLocations = itemData.locations;\r\n\r\n    this.itemDictionary = {\r\n      chest: this.createChest.bind(this),\r\n      item: this.createItem.bind(this),\r\n      \"\": this.drop,\r\n    };\r\n  }\r\n\r\n  setup() {\r\n    this.parseMapData();\r\n    this.setupEventListeners();\r\n    this.setupSpawners();\r\n  }\r\n\r\n  parseMapData() {\r\n    this.levelData = levelData;\r\n    this.levelData.layers.forEach((layer) => {\r\n      if (layer.name === \"player_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          this.playerLocations.push([obj.x, obj.y]);\r\n        });\r\n      } else if (layer.name === \"monster_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.monsterLocations[obj.properties.spawner]) {\r\n            this.monsterLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.monsterLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      } else if (layer.name === \"chest_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.chestLocations[obj.properties.spawner]) {\r\n            this.chestLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.chestLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      } else if (layer.name === \"npc_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.npcLocations[obj.properties.spawner]) {\r\n            this.npcLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.npcLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setupEventListeners() {\r\n    this.io.on(\"connection\", (socket) => {\r\n      // player disconnected\r\n\r\n      socket.on(\"savePlayerData\", async () => {\r\n        try {\r\n          if (!this.players[socket.id].items) {\r\n            this.players[socket.id].items = null;\r\n          }\r\n\r\n          if (!this.players[socket.id].equipedItems) {\r\n            this.players[socket.id].equipedItems = null;\r\n          }\r\n\r\n          await UserModel.updateOne(\r\n            { username: this.players[socket.id].playerName },\r\n            {\r\n              $set: {\r\n                player: this.players[socket.id],\r\n              },\r\n            }\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n      socket.on(\"disconnect\", () => {\r\n        // delete user data from server\r\n\r\n        console.log(\"disconnect\");\r\n\r\n        delete this.players[socket.id];\r\n\r\n        // emit a message to all players to remove this player\r\n        this.io.emit(\"disconnected\", socket.id);\r\n      });\r\n\r\n      socket.on(\"sendMessage\", async (message, token) => {\r\n        try {\r\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n          const { email } = decoded.user;\r\n          await ChatModel.create({ email, message });\r\n          this.io.emit(\"newMessage\", {\r\n            message,\r\n            name: this.players[socket.id].playerName,\r\n            frame: this.players[socket.id].frame,\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n      socket.on(\"newPlayer\", async (token, key) => {\r\n        try {\r\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n          const { name, _id } = decoded.user;\r\n\r\n          const playerSchema = await UserModel.findById(_id);\r\n          // create a new Player\r\n\r\n          this.spawnPlayer(socket.id, name, key, playerSchema.player);\r\n\r\n          // send the players object to the new player\r\n          socket.emit(\"currentPlayers\", this.players);\r\n\r\n          // send the monsters object to the new player\r\n          socket.emit(\"currentMonsters\", this.monsters);\r\n\r\n          // send the chests object to the new player\r\n          socket.emit(\"currentChests\", this.chests);\r\n\r\n          // send the items object to the new player\r\n          socket.emit(\"currentItems\", this.items);\r\n\r\n          // send the npcs object to the new player\r\n          socket.emit(\"currentNpcs\", this.npcs);\r\n\r\n          // inform the other players of the new player that joined\r\n          socket.broadcast.emit(\"spawnPlayer\", this.players[socket.id]);\r\n          socket.emit(\"updateItems\", this.players[socket.id]);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersItems\",\r\n            socket.id,\r\n            this.players[socket.id]\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n          socket.emit(\"invalidToken\");\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerMovement\", (playerData) => {\r\n        if (this.players[socket.id]) {\r\n          this.players[socket.id].x = playerData.x;\r\n          this.players[socket.id].y = playerData.y;\r\n          this.players[socket.id].flipX = playerData.flipX;\r\n          this.players[socket.id].actionAActive = playerData.actionAActive;\r\n          this.players[socket.id].potionAActive = playerData.potionAActive;\r\n          this.players[socket.id].frame = playerData.frame;\r\n          this.players[socket.id].currentDirection =\r\n            playerData.currentDirection;\r\n          // emit a message to all players about the player that moved\r\n          this.io.emit(\"playerMoved\", this.players[socket.id]);\r\n        }\r\n      });\r\n\r\n      socket.on(\"pickUpChest\", (chestId) => {\r\n        // update the spawner\r\n        if (this.chests[chestId]) {\r\n          const { gold } = this.chests[chestId];\r\n\r\n          // updating the players gold\r\n          this.players[socket.id].updateGold(gold);\r\n          socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersScore\",\r\n            socket.id,\r\n            this.players[socket.id].gold\r\n          );\r\n          // removing the chest\r\n          this.deleteChest(chestId);\r\n        }\r\n      });\r\n\r\n      socket.on(\"pickUpItem\", (itemId) => {\r\n        // update the spawner\r\n        if (this.items[itemId]) {\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(this.items[itemId]);\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n\r\n            // removing the item\r\n            this.deleteItems(itemId);\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerDroppedItem\", (itemId) => {\r\n        this.players[socket.id].removeItem(itemId);\r\n        socket.emit(\"updateItems\", this.players[socket.id]);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersItems\",\r\n          socket.id,\r\n          this.players[socket.id]\r\n        );\r\n      });\r\n\r\n      socket.on(\"playerEquipedItem\", (itemId) => {\r\n        if (this.players[socket.id].items[itemId]) {\r\n          if (this.players[socket.id].canEquipItem()) {\r\n            this.players[socket.id].equipItem(\r\n              this.players[socket.id].items[itemId]\r\n            );\r\n\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerUnequipedItem\", (itemId) => {\r\n        if (this.players[socket.id].equipedItems[itemId]) {\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(\r\n              this.players[socket.id].equipedItems[itemId]\r\n            );\r\n\r\n            this.players[socket.id].removeEquipedItem(itemId);\r\n\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"levelUp\", () => {\r\n        this.players[socket.id].levelUp();\r\n        this.io.emit(\r\n          \"updatePlayerStats\",\r\n          socket.id,\r\n          this.players[socket.id].level,\r\n          this.players[socket.id].attack,\r\n          this.players[socket.id].defense,\r\n          this.players[socket.id].maxHealth,\r\n          this.players[socket.id].exp,\r\n          this.players[socket.id].maxExp\r\n        );\r\n      });\r\n\r\n      socket.on(\"attackedPlayer\", (attackedPlayerId) => {\r\n        if (this.players[attackedPlayerId]) {\r\n          // get required info from attacked player\r\n          const { gold } = this.players[attackedPlayerId];\r\n          const playerAttackValue = this.players[socket.id].attack;\r\n\r\n          // subtract health from attacked player\r\n          this.players[attackedPlayerId].playerAttacked(playerAttackValue);\r\n\r\n          // check attacked players health, if dead send gold to other player\r\n          if (this.players[attackedPlayerId].health <= 0) {\r\n            // get the amount of gold, and update player object\r\n            this.players[socket.id].updateGold(gold);\r\n\r\n            // respawn attacked player\r\n            this.players[attackedPlayerId].respawn(this.players);\r\n            this.io.emit(\"respawnPlayer\", this.players[attackedPlayerId]);\r\n\r\n            // send update gold message to player\r\n            socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n            // reset the attacked players gold\r\n            this.players[attackedPlayerId].updateGold(-gold);\r\n            this.io\r\n              .to(`${attackedPlayerId}`)\r\n              .emit(\"updateScore\", this.players[attackedPlayerId].gold);\r\n\r\n            // add bonus health to the player\r\n            this.players[socket.id].updateHealth(15);\r\n            this.io.emit(\r\n              \"updatePlayerHealth\",\r\n              socket.id,\r\n              this.players[socket.id].health\r\n            );\r\n          } else {\r\n            this.io.emit(\r\n              \"updatePlayerHealth\",\r\n              attackedPlayerId,\r\n              this.players[attackedPlayerId].health\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"monsterAttacked\", (monsterId, dis) => {\r\n        // update the spawner\r\n        if (this.monsters[monsterId]) {\r\n          const { gold, attack, exp } = this.monsters[monsterId];\r\n          const playerAttackValue = this.players[socket.id].attack;\r\n          // subtract health monster model\r\n          this.monsters[monsterId].loseHealth(playerAttackValue);\r\n\r\n          // check the monsters health, and if dead remove that object\r\n          if (this.monsters[monsterId].health <= 0) {\r\n            // updating the players gold\r\n            this.players[socket.id].updateGold(gold);\r\n            socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n            //update xp\r\n            this.players[socket.id].updateExp(exp);\r\n            this.io.emit(\"updateXp\", exp, socket.id);\r\n\r\n            this.deleteMonster(monsterId);\r\n          } else {\r\n            // update the monsters health\r\n            this.io.emit(\r\n              \"updateMonsterHealth\",\r\n              monsterId,\r\n              this.monsters[monsterId].health\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"monsterAttack\", (monsterId, playerId) => {\r\n        const { attack } = this.monsters[monsterId];\r\n        // update the players health\r\n        this.players[playerId].playerAttacked(attack);\r\n        this.io.emit(\r\n          \"updatePlayerHealth\",\r\n          playerId,\r\n          this.players[playerId].health\r\n        );\r\n\r\n        // check the player's health, if below 0 have the player respawn\r\n        if (this.players[playerId].health <= 0) {\r\n          // update the gold the player has\r\n          this.players[playerId].updateGold(\r\n            parseInt(-this.players[playerId].gold / 2, 10)\r\n          );\r\n          socket.emit(\"updateScore\", this.players[playerId].gold);\r\n\r\n          // respawn the player\r\n          this.players[playerId].respawn(this.players);\r\n          this.io.emit(\"respawnPlayer\", this.players[playerId]);\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerHit\", (damage) => {});\r\n\r\n      socket.on(\"healthPotion\", (playerId, health) => {\r\n        if (socket.id === playerId) {\r\n          this.players[socket.id];\r\n          this.players[socket.id].potion(health);\r\n          this.io.emit(\r\n            \"updatePlayerHealth\",\r\n            socket.id,\r\n            this.players[socket.id].health\r\n          );\r\n        }\r\n      });\r\n\r\n      socket.on(\"sendBuyItemMessage\", (item) => {\r\n        this.players[socket.id].potions++;\r\n\r\n        this.players[socket.id].updateGold(-item.price);\r\n        socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersScore\",\r\n          socket.id,\r\n          this.players[socket.id].gold\r\n        );\r\n      });\r\n\r\n      socket.on(\"monsterMovement\", (monster) => {\r\n        if (!this.monsters[monster.id]) return;\r\n        this.monsters[monster.id].stateTime = monster.stateTime;\r\n        this.monsters[monster.id].randomPosition = monster.randomPosition;\r\n        this.monsters[monster.id].x = monster.x;\r\n        this.monsters[monster.id].y = monster.y;\r\n        // emit a message to all players about the monster that moved\r\n\r\n        this.io.emit(\"monsterMoved\", this.monsters[monster.id]);\r\n      });\r\n\r\n      socket.on(\"dropItem\", (x, y, item) => {\r\n        this.itemDictionary[item](x, y);\r\n      });\r\n\r\n      // player connected to our game\r\n      console.log(\"player connected to our game\");\r\n    });\r\n  }\r\n\r\n  setupSpawners() {\r\n    const config = {\r\n      spawnInterval: 3000,\r\n      limit: 3,\r\n      spawnerType: SpawnerType.CHEST,\r\n      id: \"\",\r\n    };\r\n    let spawner;\r\n    // create chest spawners\r\n    Object.keys(this.chestLocations).forEach((key) => {\r\n      config.id = `chest-${key}`;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.chestLocations[key],\r\n        this.addChest.bind(this),\r\n        this.deleteChest.bind(this)\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create monster spawners\r\n    Object.keys(this.monsterLocations).forEach((key) => {\r\n      config.id = `monster-${key}`;\r\n      config.limit = 8;\r\n      config.spawnerType = SpawnerType.MONSTER;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.monsterLocations[key],\r\n        this.addMonster.bind(this),\r\n        this.deleteMonster.bind(this)\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create npc spawners\r\n    Object.keys(this.npcLocations).forEach((key) => {\r\n      config.id = `npc-${key}`;\r\n      config.spawnerType = SpawnerType.NPC;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.npcLocations[key],\r\n        this.addNpc.bind(this),\r\n        this.deleteNpc.bind(this)\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create items spawners\r\n    config.id = \"item\";\r\n    config.spawnerType = SpawnerType.ITEM;\r\n    spawner = new Spawner(\r\n      config,\r\n      this.itemsLocations,\r\n      this.addItems.bind(this),\r\n      this.deleteItems.bind(this)\r\n    );\r\n    this.spawners[spawner.id] = spawner;\r\n\r\n    setInterval(() => {\r\n      if ((Object.keys(this.monsters).length< 8)) {\r\n        this.spawnMonster();\r\n      }\r\n    }, 3000);\r\n  }\r\n  spawnPlayer(playerId, name, key, playerSchema) {\r\n    const player = new PlayerModel(\r\n      playerId,\r\n      this.playerLocations,\r\n      this.players,\r\n      name,\r\n      key,\r\n      undefined,\r\n      playerSchema\r\n    );\r\n    this.players[playerId] = player;\r\n  }\r\n\r\n  addItems(itemId, item) {\r\n    this.items[itemId] = item;\r\n    this.io.emit(\"itemSpawned\", item);\r\n  }\r\n\r\n  deleteItems(itemId) {\r\n    delete this.items[itemId];\r\n    this.io.emit(\"itemRemoved\", itemId);\r\n  }\r\n\r\n  addChest(chestId, chest) {\r\n    this.chests[chestId] = chest;\r\n    this.io.emit(\"chestSpawned\", chest);\r\n  }\r\n\r\n  deleteChest(chestId) {\r\n    delete this.chests[chestId];\r\n    this.io.emit(\"chestRemoved\", chestId);\r\n  }\r\n\r\n  addMonster(monsterId, monster) {\r\n    this.monsters[monsterId] = monster;\r\n    this.io.emit(\"monsterSpawned\", monster);\r\n  }\r\n\r\n  deleteMonster(monsterId) {\r\n    delete this.monsters[monsterId];\r\n    this.io.emit(\"monsterRemoved\", monsterId);\r\n  }\r\n\r\n  addNpc(npcId, npc) {\r\n    this.npcs[npcId] = npc;\r\n    this.io.emit(\"npcSpawned\", npc);\r\n  }\r\n\r\n  deleteNpc(npcId) {\r\n    delete this.npcs[npcId];\r\n    this.io.emit(\"npcRemoved\", npcId);\r\n  }\r\n\r\n  drop(x, y) {}\r\n\r\n  createChest(x, y) {\r\n    const chest = new ChestModel(x, y, randomNumber(10, 20), `chest-${v4()}`);\r\n\r\n    this.addChest(chest.id, chest);\r\n  }\r\n\r\n  createItem(x, y) {\r\n    const randomItem =\r\n      itemData.items[Math.floor(Math.random() * itemData.items.length)];\r\n\r\n    const item = new ItemModel(\r\n      x,\r\n      y,\r\n      `item-${v4()}`,\r\n      randomItem.name,\r\n      randomItem.frame,\r\n      getRandonValues(),\r\n      getRandonValues(),\r\n      getRandonValues(),\r\n      WeaponTypes.MELEE,\r\n      \"Description\"\r\n    );\r\n\r\n    this.addItems(item.id, item);\r\n  }\r\n\r\n  pickRandomLocation() {\r\n    const location =\r\n      this.monsterLocations[\r\n        Math.floor(Math.random() * this.monsterLocations.length)\r\n      ];\r\n\r\n    if (this.monsters.length > 0) {\r\n      const invalidLocation = this.monsters.some((obj) => {\r\n        if (obj.x === location[0] && obj.y === location[1]) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      if (invalidLocation) return this.pickRandomLocation();\r\n      return location || [200, 200];\r\n    }\r\n    return location || [200, 200];\r\n  }\r\n\r\n  spawnMonster() {\r\n    const randomEnemy =\r\n      enemyData.enemies[Math.floor(Math.random() * enemyData.enemies.length)];\r\n\r\n    const location = this.pickRandomLocation();\r\n    const monster = new MonsterModel(\r\n      location[0],\r\n      location[1],\r\n      randomEnemy.goldValue, // gold value\r\n      this.id,\r\n      randomEnemy.key, // key\r\n      randomEnemy.healthValue, // health value\r\n      randomEnemy.attackValue, // attack value\r\n      randomEnemy.expValue, // exp value\r\n      3000 //timer\r\n    );\r\n    this.addMonster(monster.id, monster);\r\n  }\r\n}\r\n"],"file":"GameManager.js"}