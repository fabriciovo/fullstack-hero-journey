{"version":3,"sources":["../../src/game_manager/GameManager.js"],"names":["GameManager","io","spawners","chests","players","items","npcs","monsterController","MonsterController","rangedObjects","playerLocations","chestLocations","npcLocations","itemsLocations","itemData","locations","itemDictionary","chest","createChest","bind","item","createItem","drop","locationsDictionary","parseMapData","setupEventListeners","levelData","layers","forEach","name","objects","on","socket","id","equipedItems","UserModel","updateOne","username","playerName","$set","player","console","log","emit","message","token","decoded","jwt","verify","process","env","JWT_SECRET","email","user","ChatModel","create","frame","key","_id","findById","playerSchema","spawnPlayer","getMonsterList","broadcast","playerData","x","y","flipX","actionAActive","potionAActive","currentDirection","chestId","gold","updateGold","deleteChest","itemId","canPickupItem","addItem","deleteItems","removeItem","canEquipItem","equipItem","removeEquipedItem","levelUp","level","attack","defense","maxHealth","exp","maxExp","attackedPlayerId","playerAttackValue","playerAttacked","health","respawn","to","updateHealth","playerId","potion","potions","price","npcId","npc","ChestModel","addChest","randomItem","Math","floor","random","length","ItemModel","WeaponTypes","MELEE","addItems","PlayerModel","undefined","randomEnemy","enemyData","enemies","location","pickRandomLocation","monster","MonsterModel","goldValue","healthValue","attackValue","expValue","addMonster"],"mappings":"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","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport PlayerModel from \"../models/PlayerModel\";\r\nimport UserModel from \"../models/UserModel\";\r\nimport ChatModel from \"../models/ChatModel\";\r\n\r\nimport * as levelData from \"../../public/assets/level/new_level.json\";\r\nimport * as itemData from \"../../public/assets/level/tools.json\";\r\nimport * as enemyData from \"../../public/assets/Enemies/enemies.json\";\r\n\r\nimport Spawner from \"./controllers/Spawner\";\r\nimport {\r\n  getRandonValues,\r\n  randomNumber,\r\n  SpawnerType,\r\n  WeaponTypes,\r\n} from \"./utils\";\r\nimport ItemModel from \"../models/ItemModel\";\r\nimport ChestModel from \"../models/ChestModel\";\r\nimport { v4 } from \"uuid\";\r\nimport MonsterModel from \"../models/MonsterModel\";\r\nimport MonsterController from \"./controllers/MonsterController\";\r\n\r\nexport default class GameManager {\r\n  constructor(io) {\r\n    this.io = io;\r\n    this.spawners = {};\r\n    this.chests = {};\r\n    this.players = {};\r\n    this.items = {};\r\n    this.npcs = {};\r\n\r\n    this.monsterController = new MonsterController(this.io);\r\n\r\n    this.rangedObjects = {};\r\n\r\n    this.playerLocations = [];\r\n    this.chestLocations = {};\r\n    this.npcLocations = {};\r\n\r\n    this.itemsLocations = itemData.locations;\r\n\r\n    this.itemDictionary = {\r\n      chest: this.createChest.bind(this),\r\n      item: this.createItem.bind(this),\r\n      \"\": this.drop.bind(this),\r\n    };\r\n\r\n    this.locationsDictionary = {};\r\n  }\r\n\r\n  setup() {\r\n    this.parseMapData();\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  parseMapData() {\r\n    this.levelData = levelData;\r\n    this.levelData.layers.forEach(({ name, objects }) => {\r\n      //this.locationsDictionary[name](objects);\r\n    });\r\n  }\r\n\r\n  setupEventListeners() {\r\n    this.io.on(\"connection\", (socket) => {\r\n      // player disconnected\r\n\r\n      socket.on(\"savePlayerData\", async () => {\r\n        try {\r\n          if (!this.players[socket.id].items) {\r\n            this.players[socket.id].items = null;\r\n          }\r\n\r\n          if (!this.players[socket.id].equipedItems) {\r\n            this.players[socket.id].equipedItems = null;\r\n          }\r\n\r\n          await UserModel.updateOne(\r\n            { username: this.players[socket.id].playerName },\r\n            {\r\n              $set: {\r\n                player: this.players[socket.id],\r\n              },\r\n            }\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n      socket.on(\"disconnect\", () => {\r\n        // delete user data from server\r\n\r\n        console.log(\"disconnect\");\r\n\r\n        delete this.players[socket.id];\r\n\r\n        // emit a message to all players to remove this player\r\n        this.io.emit(\"disconnected\", socket.id);\r\n      });\r\n\r\n      socket.on(\"sendMessage\", async (message, token) => {\r\n        try {\r\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n          const { email } = decoded.user;\r\n          await ChatModel.create({ email, message });\r\n          this.io.emit(\"newMessage\", {\r\n            message,\r\n            name: this.players[socket.id].playerName,\r\n            frame: this.players[socket.id].frame,\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n      socket.on(\"newPlayer\", async (token, key) => {\r\n        try {\r\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n          const { name, _id } = decoded.user;\r\n\r\n          const playerSchema = await UserModel.findById(_id);\r\n          // create a new Player\r\n\r\n          this.spawnPlayer(socket.id, name, key, playerSchema.player);\r\n\r\n          // send the players object to the new player\r\n          socket.emit(\"currentPlayers\", this.players);\r\n\r\n          // send the monsters object to the new player\r\n          socket.emit(\r\n            \"currentMonsters\",\r\n            this.monsterController.getMonsterList()\r\n          );\r\n\r\n          // send the chests object to the new player\r\n          socket.emit(\"currentChests\", this.chests);\r\n\r\n          // send the items object to the new player\r\n          socket.emit(\"currentItems\", this.items);\r\n\r\n          // send the npcs object to the new player\r\n          socket.emit(\"currentNpcs\", this.npcs);\r\n\r\n          // inform the other players of the new player that joined\r\n          socket.broadcast.emit(\"spawnPlayer\", this.players[socket.id]);\r\n          socket.emit(\"updateItems\", this.players[socket.id]);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersItems\",\r\n            socket.id,\r\n            this.players[socket.id]\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n          socket.emit(\"invalidToken\");\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerMovement\", (playerData) => {\r\n        if (this.players[socket.id]) {\r\n          this.players[socket.id].x = playerData.x;\r\n          this.players[socket.id].y = playerData.y;\r\n          this.players[socket.id].flipX = playerData.flipX;\r\n          this.players[socket.id].actionAActive = playerData.actionAActive;\r\n          this.players[socket.id].potionAActive = playerData.potionAActive;\r\n          this.players[socket.id].frame = playerData.frame;\r\n          this.players[socket.id].currentDirection =\r\n            playerData.currentDirection;\r\n          // emit a message to all players about the player that moved\r\n          this.io.emit(\"playerMoved\", this.players[socket.id]);\r\n        }\r\n      });\r\n\r\n      socket.on(\"pickUpChest\", (chestId) => {\r\n        // update the spawner\r\n        if (this.chests[chestId]) {\r\n          const { gold } = this.chests[chestId];\r\n\r\n          // updating the players gold\r\n          this.players[socket.id].updateGold(gold);\r\n          socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersScore\",\r\n            socket.id,\r\n            this.players[socket.id].gold\r\n          );\r\n          // removing the chest\r\n          this.deleteChest(chestId);\r\n        }\r\n      });\r\n\r\n      socket.on(\"pickUpItem\", (itemId) => {\r\n        // update the spawner\r\n        if (this.items[itemId]) {\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(this.items[itemId]);\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n\r\n            // removing the item\r\n            this.deleteItems(itemId);\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerDroppedItem\", (itemId) => {\r\n        this.players[socket.id].removeItem(itemId);\r\n        socket.emit(\"updateItems\", this.players[socket.id]);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersItems\",\r\n          socket.id,\r\n          this.players[socket.id]\r\n        );\r\n      });\r\n\r\n      socket.on(\"playerEquipedItem\", (itemId) => {\r\n        if (this.players[socket.id].items[itemId]) {\r\n          if (this.players[socket.id].canEquipItem()) {\r\n            this.players[socket.id].equipItem(\r\n              this.players[socket.id].items[itemId]\r\n            );\r\n\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerUnequipedItem\", (itemId) => {\r\n        if (this.players[socket.id].equipedItems[itemId]) {\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(\r\n              this.players[socket.id].equipedItems[itemId]\r\n            );\r\n\r\n            this.players[socket.id].removeEquipedItem(itemId);\r\n\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"levelUp\", () => {\r\n        this.players[socket.id].levelUp();\r\n        this.io.emit(\r\n          \"updatePlayerStats\",\r\n          socket.id,\r\n          this.players[socket.id].level,\r\n          this.players[socket.id].attack,\r\n          this.players[socket.id].defense,\r\n          this.players[socket.id].maxHealth,\r\n          this.players[socket.id].exp,\r\n          this.players[socket.id].maxExp\r\n        );\r\n      });\r\n\r\n      socket.on(\"attackedPlayer\", (attackedPlayerId) => {\r\n        if (this.players[attackedPlayerId]) {\r\n          // get required info from attacked player\r\n          const { gold } = this.players[attackedPlayerId];\r\n          const playerAttackValue = this.players[socket.id].attack;\r\n\r\n          // subtract health from attacked player\r\n          this.players[attackedPlayerId].playerAttacked(playerAttackValue);\r\n\r\n          // check attacked players health, if dead send gold to other player\r\n          if (this.players[attackedPlayerId].health <= 0) {\r\n            // get the amount of gold, and update player object\r\n            this.players[socket.id].updateGold(gold);\r\n\r\n            // respawn attacked player\r\n            this.players[attackedPlayerId].respawn(this.players);\r\n            this.io.emit(\"respawnPlayer\", this.players[attackedPlayerId]);\r\n\r\n            // send update gold message to player\r\n            socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n            // reset the attacked players gold\r\n            this.players[attackedPlayerId].updateGold(-gold);\r\n            this.io\r\n              .to(`${attackedPlayerId}`)\r\n              .emit(\"updateScore\", this.players[attackedPlayerId].gold);\r\n\r\n            // add bonus health to the player\r\n            this.players[socket.id].updateHealth(15);\r\n            this.io.emit(\r\n              \"updatePlayerHealth\",\r\n              socket.id,\r\n              this.players[socket.id].health\r\n            );\r\n          } else {\r\n            this.io.emit(\r\n              \"updatePlayerHealth\",\r\n              attackedPlayerId,\r\n              this.players[attackedPlayerId].health\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"healthPotion\", (playerId, health) => {\r\n        if (socket.id === playerId) {\r\n          this.players[socket.id];\r\n          this.players[socket.id].potion(health);\r\n          this.io.emit(\r\n            \"updatePlayerHealth\",\r\n            socket.id,\r\n            this.players[socket.id].health\r\n          );\r\n        }\r\n      });\r\n\r\n      socket.on(\"sendBuyItemMessage\", (item) => {\r\n        this.players[socket.id].potions++;\r\n\r\n        this.players[socket.id].updateGold(-item.price);\r\n        socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersScore\",\r\n          socket.id,\r\n          this.players[socket.id].gold\r\n        );\r\n      });\r\n\r\n      socket.on(\"dropItem\", (x, y, item) => {\r\n        this.itemDictionary[item](x, y);\r\n      });\r\n\r\n      //-------------------MONSTER---------------\r\n      this.monsterController.setupEventListeners(socket, this.players);\r\n\r\n      // player connected to our game\r\n      console.log(\"player connected to our game\");\r\n    });\r\n  }\r\n\r\n  addItems(itemId, item) {\r\n    this.items[itemId] = item;\r\n    this.io.emit(\"itemSpawned\", item);\r\n  }\r\n\r\n  deleteItems(itemId) {\r\n    delete this.items[itemId];\r\n    this.io.emit(\"itemRemoved\", itemId);\r\n  }\r\n\r\n  addChest(chestId, chest) {\r\n    this.chests[chestId] = chest;\r\n    this.io.emit(\"chestSpawned\", chest);\r\n  }\r\n\r\n  deleteChest(chestId) {\r\n    delete this.chests[chestId];\r\n    this.io.emit(\"chestRemoved\", chestId);\r\n  }\r\n\r\n  addNpc(npcId, npc) {\r\n    this.npcs[npcId] = npc;\r\n    this.io.emit(\"npcSpawned\", npc);\r\n  }\r\n\r\n  deleteNpc(npcId) {\r\n    delete this.npcs[npcId];\r\n    this.io.emit(\"npcRemoved\", npcId);\r\n  }\r\n\r\n  drop(x, y) {}\r\n\r\n  createChest(x, y) {\r\n    const chest = new ChestModel(x, y, randomNumber(10, 20), `chest-${v4()}`);\r\n    this.addChest(chest.id, chest);\r\n  }\r\n\r\n  createItem(x, y) {\r\n    const randomItem =\r\n      itemData.items[Math.floor(Math.random() * itemData.items.length)];\r\n\r\n    const item = new ItemModel(\r\n      x,\r\n      y,\r\n      `item-${v4()}`,\r\n      randomItem.name,\r\n      randomItem.frame,\r\n      getRandonValues(),\r\n      getRandonValues(),\r\n      getRandonValues(),\r\n      WeaponTypes.MELEE,\r\n      \"Description\"\r\n    );\r\n\r\n    this.addItems(item.id, item);\r\n  }\r\n\r\n  spawnPlayer(playerId, name, key, playerSchema) {\r\n    const player = new PlayerModel(\r\n      playerId,\r\n      [\r\n        [200, 200],\r\n        [400, 400],\r\n      ],\r\n      this.players,\r\n      name,\r\n      key,\r\n      undefined,\r\n      playerSchema\r\n    );\r\n    this.players[playerId] = player;\r\n  }\r\n\r\n  spawnMonster() {\r\n    const randomEnemy =\r\n      enemyData.enemies[Math.floor(Math.random() * enemyData.enemies.length)];\r\n\r\n    const location = this.pickRandomLocation();\r\n    const monster = new MonsterModel(\r\n      location[0],\r\n      location[1],\r\n      randomEnemy.goldValue, // gold value\r\n      this.id,\r\n      randomEnemy.key, // key\r\n      randomEnemy.healthValue, // health value\r\n      randomEnemy.attackValue, // attack value\r\n      randomEnemy.expValue, // exp value\r\n      3000 //timer\r\n    );\r\n    this.addMonster(monster.id, monster);\r\n  }\r\n}\r\n"],"file":"GameManager.js"}