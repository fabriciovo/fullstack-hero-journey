{"version":3,"sources":["../../src/game_manager/GameManager.js"],"names":["GameManager","io","spawners","chests","monsters","players","items","npcs","rangedObjects","playerLocations","chestLocations","monsterLocations","npcLocations","itemsLocations","itemData","locations","parseMapData","setupEventListeners","setupSpawners","levelData","layers","forEach","layer","name","objects","obj","push","x","y","properties","spawner","on","socket","id","equipedItems","UserModel","updateOne","username","playerName","$set","player","console","log","emit","message","token","decoded","jwt","verify","process","env","JWT_SECRET","email","user","ChatModel","create","frame","key","_id","findById","playerSchema","spawnPlayer","broadcast","playerData","flipX","actionAActive","actionBActive","potionAActive","currentDirection","actionB","chestId","gold","updateGold","spawnerId","removeObject","itemId","canPickupItem","addItem","removeItem","canEquipItem","equipItem","removeEquipedItem","levelUp","level","attack","defense","maxHealth","exp","maxExp","attackedPlayerId","playerAttackValue","playerAttacked","health","respawn","to","updateHealth","monsterId","dis","loseHealth","updateExp","parseInt","damage","playerId","potion","item","potions","price","monster","config","spawnInterval","limit","spawnerType","SpawnerType","CHEST","Object","keys","Spawner","addChest","bind","deleteChest","MONSTER","addMonster","deleteMonster","NPC","addNpc","deleteNpc","ITEM","addItems","deleteItems","PlayerModel","undefined","chest","npcId","npc"],"mappings":"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","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport PlayerModel from \"../models/PlayerModel\";\r\nimport UserModel from \"../models/UserModel\";\r\nimport ChatModel from \"../models/ChatModel\";\r\n\r\nimport * as levelData from \"../../public/assets/level/new_level.json\";\r\nimport * as itemData from \"../../public/assets/level/tools.json\";\r\n\r\nimport Spawner from \"./controllers/Spawner\";\r\nimport { SpawnerType } from \"./utils\";\r\n\r\nexport default class GameManager {\r\n  constructor(io) {\r\n    this.io = io;\r\n    this.spawners = {};\r\n    this.chests = {};\r\n    this.monsters = {};\r\n    this.players = {};\r\n    this.items = {};\r\n    this.npcs = {};\r\n\r\n    this.rangedObjects = {};\r\n\r\n    this.playerLocations = [];\r\n    this.chestLocations = {};\r\n    this.monsterLocations = {};\r\n    this.npcLocations = {};\r\n\r\n    this.itemsLocations = itemData.locations;\r\n  }\r\n\r\n  setup() {\r\n    this.parseMapData();\r\n    this.setupEventListeners();\r\n    this.setupSpawners();\r\n  }\r\n\r\n  parseMapData() {\r\n    this.levelData = levelData;\r\n    this.levelData.layers.forEach((layer) => {\r\n      if (layer.name === \"player_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          this.playerLocations.push([obj.x, obj.y]);\r\n        });\r\n      } else if (layer.name === \"monster_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.monsterLocations[obj.properties.spawner]) {\r\n            this.monsterLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.monsterLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      } else if (layer.name === \"chest_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.chestLocations[obj.properties.spawner]) {\r\n            this.chestLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.chestLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      } else if (layer.name === \"npc_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.npcLocations[obj.properties.spawner]) {\r\n            this.npcLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.npcLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setupEventListeners() {\r\n    this.io.on(\"connection\", (socket) => {\r\n      // player disconnected\r\n\r\n      socket.on(\"savePlayerData\", async () => {\r\n        try {\r\n          if (!this.players[socket.id].items) {\r\n            this.players[socket.id].items = null;\r\n          }\r\n\r\n          if (!this.players[socket.id].equipedItems) {\r\n            this.players[socket.id].equipedItems = null;\r\n          }\r\n\r\n          await UserModel.updateOne(\r\n            { username: this.players[socket.id].playerName },\r\n            {\r\n              $set: {\r\n                player: this.players[socket.id],\r\n              },\r\n            }\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n      socket.on(\"disconnect\", () => {\r\n        // delete user data from server\r\n\r\n        console.log(\"disconnect\");\r\n\r\n        delete this.players[socket.id];\r\n\r\n        // emit a message to all players to remove this player\r\n        this.io.emit(\"disconnected\", socket.id);\r\n      });\r\n\r\n      socket.on(\"sendMessage\", async (message, token) => {\r\n        try {\r\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n          const { email } = decoded.user;\r\n          await ChatModel.create({ email, message });\r\n          this.io.emit(\"newMessage\", {\r\n            message,\r\n            name: this.players[socket.id].playerName,\r\n            frame: this.players[socket.id].frame,\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n      socket.on(\"newPlayer\", async (token, key) => {\r\n        try {\r\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n          const { name, _id } = decoded.user;\r\n\r\n          const playerSchema = await UserModel.findById(_id);\r\n          // create a new Player\r\n\r\n          this.spawnPlayer(socket.id, name, key, playerSchema.player);\r\n\r\n          // send the players object to the new player\r\n          socket.emit(\"currentPlayers\", this.players);\r\n\r\n          // send the monsters object to the new player\r\n          socket.emit(\"currentMonsters\", this.monsters);\r\n\r\n          // send the chests object to the new player\r\n          socket.emit(\"currentChests\", this.chests);\r\n\r\n          // send the items object to the new player\r\n          socket.emit(\"currentItems\", this.items);\r\n\r\n          // send the npcs object to the new player\r\n          socket.emit(\"currentNpcs\", this.npcs);\r\n\r\n          // inform the other players of the new player that joined\r\n          socket.broadcast.emit(\"spawnPlayer\", this.players[socket.id]);\r\n          socket.emit(\"updateItems\", this.players[socket.id]);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersItems\",\r\n            socket.id,\r\n            this.players[socket.id]\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n          socket.emit(\"invalidToken\");\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerMovement\", (playerData) => {\r\n        console.log(\"playerMovement\")\r\n        if (this.players[socket.id]) {\r\n          console.log(\"playerMovement2\")\r\n\r\n          this.players[socket.id].x = playerData.x;\r\n          this.players[socket.id].y = playerData.y;\r\n          this.players[socket.id].flipX = playerData.flipX;\r\n          this.players[socket.id].actionAActive = playerData.actionAActive;\r\n          this.players[socket.id].actionBActive = playerData.actionBActive;\r\n          this.players[socket.id].potionAActive = playerData.potionAActive;\r\n          this.players[socket.id].frame = playerData.frame;\r\n          this.players[socket.id].currentDirection =\r\n            playerData.currentDirection;\r\n          this.players[socket.id].actionB = playerData.actionB;\r\n          // emit a message to all players about the player that moved\r\n          this.io.emit(\"playerMoved\", this.players[socket.id]);\r\n        }\r\n      });\r\n\r\n      socket.on(\"pickUpChest\", (chestId) => {\r\n        // update the spawner\r\n        if (this.chests[chestId]) {\r\n          const { gold } = this.chests[chestId];\r\n\r\n          // updating the players gold\r\n          this.players[socket.id].updateGold(gold);\r\n          socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersScore\",\r\n            socket.id,\r\n            this.players[socket.id].gold\r\n          );\r\n          // removing the chest\r\n          this.spawners[this.chests[chestId].spawnerId].removeObject(chestId);\r\n        }\r\n      });\r\n\r\n      socket.on(\"pickUpItem\", (itemId) => {\r\n        // update the spawner\r\n        if (this.items[itemId]) {\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(this.items[itemId]);\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n\r\n            // removing the item\r\n            this.spawners[this.items[itemId].spawnerId].removeObject(itemId);\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerDroppedItem\", (itemId) => {\r\n        this.players[socket.id].removeItem(itemId);\r\n        socket.emit(\"updateItems\", this.players[socket.id]);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersItems\",\r\n          socket.id,\r\n          this.players[socket.id]\r\n        );\r\n      });\r\n\r\n      socket.on(\"playerEquipedItem\", (itemId) => {\r\n        if (this.players[socket.id].items[itemId]) {\r\n          if (this.players[socket.id].canEquipItem()) {\r\n            this.players[socket.id].equipItem(\r\n              this.players[socket.id].items[itemId]\r\n            );\r\n\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerUnequipedItem\", (itemId) => {\r\n        if (this.players[socket.id].equipedItems[itemId]) {\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(\r\n              this.players[socket.id].equipedItems[itemId]\r\n            );\r\n\r\n            this.players[socket.id].removeEquipedItem(itemId);\r\n\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"levelUp\", () => {\r\n        this.players[socket.id].levelUp();\r\n        this.io.emit(\r\n          \"updatePlayerStats\",\r\n          socket.id,\r\n          this.players[socket.id].level,\r\n          this.players[socket.id].attack,\r\n          this.players[socket.id].defense,\r\n          this.players[socket.id].maxHealth,\r\n          this.players[socket.id].exp,\r\n          this.players[socket.id].maxExp\r\n        );\r\n      });\r\n\r\n      socket.on(\"attackedPlayer\", (attackedPlayerId) => {\r\n        if (this.players[attackedPlayerId]) {\r\n          // get required info from attacked player\r\n          const { gold } = this.players[attackedPlayerId];\r\n          const playerAttackValue = this.players[socket.id].attack;\r\n\r\n          // subtract health from attacked player\r\n          this.players[attackedPlayerId].playerAttacked(playerAttackValue);\r\n\r\n          // check attacked players health, if dead send gold to other player\r\n          if (this.players[attackedPlayerId].health <= 0) {\r\n            // get the amount of gold, and update player object\r\n            this.players[socket.id].updateGold(gold);\r\n\r\n            // respawn attacked player\r\n            this.players[attackedPlayerId].respawn(this.players);\r\n            this.io.emit(\"respawnPlayer\", this.players[attackedPlayerId]);\r\n\r\n            // send update gold message to player\r\n            socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n            // reset the attacked players gold\r\n            this.players[attackedPlayerId].updateGold(-gold);\r\n            this.io\r\n              .to(`${attackedPlayerId}`)\r\n              .emit(\"updateScore\", this.players[attackedPlayerId].gold);\r\n\r\n            // add bonus health to the player\r\n            this.players[socket.id].updateHealth(15);\r\n            this.io.emit(\r\n              \"updatePlayerHealth\",\r\n              socket.id,\r\n              this.players[socket.id].health\r\n            );\r\n          } else {\r\n            this.io.emit(\r\n              \"updatePlayerHealth\",\r\n              attackedPlayerId,\r\n              this.players[attackedPlayerId].health\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"monsterAttacked\", (monsterId, dis) => {\r\n        // update the spawner\r\n        if (this.monsters[monsterId]) {\r\n          const { gold, attack, exp } = this.monsters[monsterId];\r\n          const playerAttackValue = this.players[socket.id].attack;\r\n          // subtract health monster model\r\n          this.monsters[monsterId].loseHealth(playerAttackValue);\r\n\r\n          // check the monsters health, and if dead remove that object\r\n          if (this.monsters[monsterId].health <= 0) {\r\n            // updating the players gold\r\n            this.players[socket.id].updateGold(gold);\r\n            socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n            //socket.emit(\"dropItem\", item);\r\n\r\n            //update xp\r\n            this.players[socket.id].updateExp(exp);\r\n            this.io.emit(\"updateXp\", exp, socket.id);\r\n\r\n            //this.io.emit(\"dropItem\",this.monsters[monsterId] );\r\n\r\n            // removing the monster\r\n            this.spawners[this.monsters[monsterId].spawnerId].removeObject(\r\n              monsterId\r\n            );\r\n            this.io.emit(\"monsterRemoved\", monsterId);\r\n          } else {\r\n            // update the monsters health\r\n            this.io.emit(\r\n              \"updateMonsterHealth\",\r\n              monsterId,\r\n              this.monsters[monsterId].health\r\n            );\r\n\r\n            if (dis < 90) {\r\n              // update the players health\r\n              this.players[socket.id].playerAttacked(attack);\r\n              this.io.emit(\r\n                \"updatePlayerHealth\",\r\n                socket.id,\r\n                this.players[socket.id].health\r\n              );\r\n\r\n              // check the player's health, if below 0 have the player respawn\r\n              if (this.players[socket.id].health <= 0) {\r\n                // update the gold the player has\r\n                this.players[socket.id].updateGold(\r\n                  parseInt(-this.players[socket.id].gold / 2, 10)\r\n                );\r\n                socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n                // respawn the player\r\n                this.players[socket.id].respawn(this.players);\r\n                this.io.emit(\"respawnPlayer\", this.players[socket.id]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerHit\", (damage) => {});\r\n\r\n      socket.on(\"healthPotion\", (playerId, health) => {\r\n        if (socket.id === playerId) {\r\n          this.players[socket.id];\r\n          this.players[socket.id].potion(health);\r\n          this.io.emit(\r\n            \"updatePlayerHealth\",\r\n            socket.id,\r\n            this.players[socket.id].health\r\n          );\r\n        }\r\n      });\r\n\r\n      socket.on(\"sendBuyItemMessage\", (item) => {\r\n        this.players[socket.id].potions++;\r\n\r\n        this.players[socket.id].updateGold(-item.price);\r\n        socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersScore\",\r\n          socket.id,\r\n          this.players[socket.id].gold\r\n        );\r\n      });\r\n\r\n      socket.on(\"monsterMovement\", (monster) => {\r\n        this.monsters[monster.id].x = monster.x;\r\n        this.monsters[monster.id].y = monster.y;\r\n        // emit a message to all players about the player that moved\r\n        this.io.emit(\"monsterMoved\", this.monsters[monster.id]);\r\n      });\r\n\r\n      // player connected to our game\r\n      console.log(\"player connected to our game\");\r\n    });\r\n  }\r\n\r\n  setupSpawners() {\r\n    const config = {\r\n      spawnInterval: 3000,\r\n      limit: 3,\r\n      spawnerType: SpawnerType.CHEST,\r\n      id: \"\",\r\n    };\r\n    let spawner;\r\n    // create chest spawners\r\n    Object.keys(this.chestLocations).forEach((key) => {\r\n      config.id = `chest-${key}`;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.chestLocations[key],\r\n        this.addChest.bind(this),\r\n        this.deleteChest.bind(this)\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create monster spawners\r\n    Object.keys(this.monsterLocations).forEach((key) => {\r\n      config.id = `monster-${key}`;\r\n      config.limit = 8;\r\n      config.spawnerType = SpawnerType.MONSTER;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.monsterLocations[key],\r\n        this.addMonster.bind(this),\r\n        this.deleteMonster.bind(this)\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create npc spawners\r\n    Object.keys(this.npcLocations).forEach((key) => {\r\n      config.id = `npc-${key}`;\r\n      config.spawnerType = SpawnerType.NPC;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.npcLocations[key],\r\n        this.addNpc.bind(this),\r\n        this.deleteNpc.bind(this)\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create items spawners\r\n    config.id = \"item\";\r\n    config.spawnerType = SpawnerType.ITEM;\r\n    spawner = new Spawner(\r\n      config,\r\n      this.itemsLocations,\r\n      this.addItems.bind(this),\r\n      this.deleteItems.bind(this)\r\n    );\r\n    this.spawners[spawner.id] = spawner;\r\n  }\r\n  spawnPlayer(playerId, name, key, playerSchema) {\r\n    const player = new PlayerModel(\r\n      playerId,\r\n      this.playerLocations,\r\n      this.players,\r\n      name,\r\n      key,\r\n      undefined,\r\n      playerSchema\r\n    );\r\n    this.players[playerId] = player;\r\n  }\r\n\r\n  addItems(itemId, item) {\r\n    this.items[itemId] = item;\r\n    this.io.emit(\"itemSpawned\", item);\r\n  }\r\n\r\n  deleteItems(itemId) {\r\n    delete this.items[itemId];\r\n    this.io.emit(\"itemRemoved\", itemId);\r\n  }\r\n\r\n  addChest(chestId, chest) {\r\n    this.chests[chestId] = chest;\r\n    this.io.emit(\"chestSpawned\", chest);\r\n  }\r\n\r\n  deleteChest(chestId) {\r\n    delete this.chests[chestId];\r\n    this.io.emit(\"chestRemoved\", chestId);\r\n  }\r\n\r\n  addMonster(monsterId, monster) {\r\n    this.monsters[monsterId] = monster;\r\n    this.io.emit(\"monsterSpawned\", monster);\r\n  }\r\n\r\n  deleteMonster(monsterId) {\r\n    delete this.monsters[monsterId];\r\n    this.io.emit(\"monsterRemoved\", monsterId);\r\n  }\r\n\r\n  addNpc(npcId, npc) {\r\n    this.npcs[npcId] = npc;\r\n    this.io.emit(\"npcSpawned\", npc);\r\n  }\r\n\r\n  deleteNpc(npcId) {\r\n    delete this.npcs[npcId];\r\n    this.io.emit(\"npcRemoved\", npcId);\r\n  }\r\n}\r\n"],"file":"GameManager.js"}