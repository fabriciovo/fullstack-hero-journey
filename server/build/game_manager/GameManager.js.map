{"version":3,"sources":["../../src/game_manager/GameManager.js"],"names":["GameManager","io","spawners","chests","monsters","players","items","npcs","rangedObjects","playerLocations","chestLocations","monsterLocations","npcLocations","itemsLocations","itemData","locations","itemDictionary","createChest","createItem","drop","parseMapData","setupEventListeners","setupSpawners","levelData","layers","forEach","layer","name","objects","obj","push","x","y","properties","spawner","on","socket","id","equipedItems","UserModel","updateOne","username","playerName","$set","player","console","log","emit","message","token","decoded","jwt","verify","process","env","JWT_SECRET","email","user","ChatModel","create","frame","key","_id","findById","playerSchema","spawnPlayer","broadcast","playerData","flipX","actionAActive","potionAActive","currentDirection","chestId","gold","updateGold","spawnerId","removeObject","itemId","canPickupItem","addItem","deleteItems","removeItem","canEquipItem","equipItem","removeEquipedItem","levelUp","level","attack","defense","maxHealth","exp","maxExp","attackedPlayerId","playerAttackValue","playerAttacked","health","respawn","to","updateHealth","monsterId","dis","loseHealth","updateExp","deleteMonster","parseInt","damage","playerId","potion","item","potions","price","monster","stateTime","randomPosition","config","spawnInterval","limit","spawnerType","SpawnerType","CHEST","Object","keys","Spawner","addChest","bind","deleteChest","MONSTER","addMonster","NPC","addNpc","deleteNpc","ITEM","addItems","PlayerModel","undefined","chest","npcId","npc","ChestModel","randomItem","Math","floor","random","length","ItemModel","WeaponTypes","MELEE"],"mappings":"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","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport PlayerModel from \"../models/PlayerModel\";\r\nimport UserModel from \"../models/UserModel\";\r\nimport ChatModel from \"../models/ChatModel\";\r\n\r\nimport * as levelData from \"../../public/assets/level/new_level.json\";\r\nimport * as itemData from \"../../public/assets/level/tools.json\";\r\n\r\nimport Spawner from \"./controllers/Spawner\";\r\nimport { getRandonValues, randomNumber, SpawnerType, WeaponTypes } from \"./utils\";\r\nimport ItemModel from \"../models/ItemModel\";\r\nimport ChestModel from \"../models/ChestModel\";\r\nimport { v4 } from \"uuid\";\r\n\r\n\r\n\r\nexport default class GameManager {\r\n  constructor(io) {\r\n    this.io = io;\r\n    this.spawners = {};\r\n    this.chests = {};\r\n    this.monsters = {};\r\n    this.players = {};\r\n    this.items = {};\r\n    this.npcs = {};\r\n\r\n    this.rangedObjects = {};\r\n\r\n    this.playerLocations = [];\r\n    this.chestLocations = {};\r\n    this.monsterLocations = {};\r\n    this.npcLocations = {};\r\n\r\n    this.itemsLocations = itemData.locations;\r\n\r\n    this.itemDictionary = {\r\n      \"chest\": this.createChest,\r\n      \"item\": this.createItem,\r\n      \"\": this.drop\r\n    };\r\n  }\r\n\r\n\r\n  \r\n  setup() {\r\n    this.parseMapData();\r\n    this.setupEventListeners();\r\n    this.setupSpawners();\r\n\r\n    \r\n  }\r\n\r\n  parseMapData() {\r\n    this.levelData = levelData;\r\n    this.levelData.layers.forEach((layer) => {\r\n      if (layer.name === \"player_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          this.playerLocations.push([obj.x, obj.y]);\r\n        });\r\n      } else if (layer.name === \"monster_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.monsterLocations[obj.properties.spawner]) {\r\n            this.monsterLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.monsterLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      } else if (layer.name === \"chest_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.chestLocations[obj.properties.spawner]) {\r\n            this.chestLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.chestLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      } else if (layer.name === \"npc_locations\") {\r\n        layer.objects.forEach((obj) => {\r\n          if (this.npcLocations[obj.properties.spawner]) {\r\n            this.npcLocations[obj.properties.spawner].push([obj.x, obj.y]);\r\n          } else {\r\n            this.npcLocations[obj.properties.spawner] = [[obj.x, obj.y]];\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setupEventListeners() {\r\n    this.io.on(\"connection\", (socket) => {\r\n      // player disconnected\r\n\r\n      socket.on(\"savePlayerData\", async () => {\r\n        try {\r\n          if (!this.players[socket.id].items) {\r\n            this.players[socket.id].items = null;\r\n          }\r\n\r\n          if (!this.players[socket.id].equipedItems) {\r\n            this.players[socket.id].equipedItems = null;\r\n          }\r\n\r\n          await UserModel.updateOne(\r\n            { username: this.players[socket.id].playerName },\r\n            {\r\n              $set: {\r\n                player: this.players[socket.id],\r\n              },\r\n            }\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n      socket.on(\"disconnect\", () => {\r\n        // delete user data from server\r\n\r\n        console.log(\"disconnect\");\r\n\r\n        delete this.players[socket.id];\r\n\r\n        // emit a message to all players to remove this player\r\n        this.io.emit(\"disconnected\", socket.id);\r\n      });\r\n\r\n      socket.on(\"sendMessage\", async (message, token) => {\r\n        try {\r\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n          const { email } = decoded.user;\r\n          await ChatModel.create({ email, message });\r\n          this.io.emit(\"newMessage\", {\r\n            message,\r\n            name: this.players[socket.id].playerName,\r\n            frame: this.players[socket.id].frame,\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n      socket.on(\"newPlayer\", async (token, key) => {\r\n        try {\r\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n          const { name, _id } = decoded.user;\r\n\r\n          const playerSchema = await UserModel.findById(_id);\r\n          // create a new Player\r\n\r\n          this.spawnPlayer(socket.id, name, key, playerSchema.player);\r\n\r\n          // send the players object to the new player\r\n          socket.emit(\"currentPlayers\", this.players);\r\n\r\n          // send the monsters object to the new player\r\n          socket.emit(\"currentMonsters\", this.monsters);\r\n\r\n          // send the chests object to the new player\r\n          socket.emit(\"currentChests\", this.chests);\r\n\r\n          // send the items object to the new player\r\n          socket.emit(\"currentItems\", this.items);\r\n\r\n          // send the npcs object to the new player\r\n          socket.emit(\"currentNpcs\", this.npcs);\r\n\r\n          // inform the other players of the new player that joined\r\n          socket.broadcast.emit(\"spawnPlayer\", this.players[socket.id]);\r\n          socket.emit(\"updateItems\", this.players[socket.id]);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersItems\",\r\n            socket.id,\r\n            this.players[socket.id]\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n          socket.emit(\"invalidToken\");\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerMovement\", (playerData) => {\r\n        if (this.players[socket.id]) {\r\n          this.players[socket.id].x = playerData.x;\r\n          this.players[socket.id].y = playerData.y;\r\n          this.players[socket.id].flipX = playerData.flipX;\r\n          this.players[socket.id].actionAActive = playerData.actionAActive;\r\n          this.players[socket.id].potionAActive = playerData.potionAActive;\r\n          this.players[socket.id].frame = playerData.frame;\r\n          this.players[socket.id].currentDirection =\r\n            playerData.currentDirection;\r\n          // emit a message to all players about the player that moved\r\n          this.io.emit(\"playerMoved\", this.players[socket.id]);\r\n        }\r\n      });\r\n\r\n      socket.on(\"pickUpChest\", (chestId) => {\r\n        // update the spawner\r\n        if (this.chests[chestId]) {\r\n          const { gold } = this.chests[chestId];\r\n\r\n          // updating the players gold\r\n          this.players[socket.id].updateGold(gold);\r\n          socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersScore\",\r\n            socket.id,\r\n            this.players[socket.id].gold\r\n          );\r\n          // removing the chest\r\n          this.spawners[this.chests[chestId].spawnerId].removeObject(chestId);\r\n        }\r\n      });\r\n\r\n      socket.on(\"pickUpItem\", (itemId) => {\r\n        // update the spawner\r\n        if (this.items[itemId]) {\r\n          console.log(itemId);\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(this.items[itemId]);\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n\r\n            // removing the item\r\n            this.deleteItems(itemId);\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerDroppedItem\", (itemId) => {\r\n        this.players[socket.id].removeItem(itemId);\r\n        socket.emit(\"updateItems\", this.players[socket.id]);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersItems\",\r\n          socket.id,\r\n          this.players[socket.id]\r\n        );\r\n      });\r\n\r\n      socket.on(\"playerEquipedItem\", (itemId) => {\r\n        if (this.players[socket.id].items[itemId]) {\r\n          if (this.players[socket.id].canEquipItem()) {\r\n            this.players[socket.id].equipItem(\r\n              this.players[socket.id].items[itemId]\r\n            );\r\n\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerUnequipedItem\", (itemId) => {\r\n        if (this.players[socket.id].equipedItems[itemId]) {\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(\r\n              this.players[socket.id].equipedItems[itemId]\r\n            );\r\n\r\n            this.players[socket.id].removeEquipedItem(itemId);\r\n\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"levelUp\", () => {\r\n        this.players[socket.id].levelUp();\r\n        this.io.emit(\r\n          \"updatePlayerStats\",\r\n          socket.id,\r\n          this.players[socket.id].level,\r\n          this.players[socket.id].attack,\r\n          this.players[socket.id].defense,\r\n          this.players[socket.id].maxHealth,\r\n          this.players[socket.id].exp,\r\n          this.players[socket.id].maxExp\r\n        );\r\n      });\r\n\r\n      socket.on(\"attackedPlayer\", (attackedPlayerId) => {\r\n        if (this.players[attackedPlayerId]) {\r\n          // get required info from attacked player\r\n          const { gold } = this.players[attackedPlayerId];\r\n          const playerAttackValue = this.players[socket.id].attack;\r\n\r\n          // subtract health from attacked player\r\n          this.players[attackedPlayerId].playerAttacked(playerAttackValue);\r\n\r\n          // check attacked players health, if dead send gold to other player\r\n          if (this.players[attackedPlayerId].health <= 0) {\r\n            // get the amount of gold, and update player object\r\n            this.players[socket.id].updateGold(gold);\r\n\r\n            // respawn attacked player\r\n            this.players[attackedPlayerId].respawn(this.players);\r\n            this.io.emit(\"respawnPlayer\", this.players[attackedPlayerId]);\r\n\r\n            // send update gold message to player\r\n            socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n            // reset the attacked players gold\r\n            this.players[attackedPlayerId].updateGold(-gold);\r\n            this.io\r\n              .to(`${attackedPlayerId}`)\r\n              .emit(\"updateScore\", this.players[attackedPlayerId].gold);\r\n\r\n            // add bonus health to the player\r\n            this.players[socket.id].updateHealth(15);\r\n            this.io.emit(\r\n              \"updatePlayerHealth\",\r\n              socket.id,\r\n              this.players[socket.id].health\r\n            );\r\n          } else {\r\n            this.io.emit(\r\n              \"updatePlayerHealth\",\r\n              attackedPlayerId,\r\n              this.players[attackedPlayerId].health\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"monsterAttacked\", (monsterId, dis) => {\r\n        // update the spawner\r\n        if (this.monsters[monsterId]) {\r\n          const { gold, attack, exp } = this.monsters[monsterId];\r\n          const playerAttackValue = this.players[socket.id].attack;\r\n          // subtract health monster model\r\n          this.monsters[monsterId].loseHealth(playerAttackValue);\r\n\r\n          // check the monsters health, and if dead remove that object\r\n          if (this.monsters[monsterId].health <= 0) {\r\n            // updating the players gold\r\n            this.players[socket.id].updateGold(gold);\r\n            socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n            //socket.emit(\"dropItem\", item);\r\n\r\n            //update xp\r\n            this.players[socket.id].updateExp(exp);\r\n            this.io.emit(\"updateXp\", exp, socket.id);\r\n\r\n            //this.io.emit(\"dropItem\",this.monsters[monsterId] );\r\n\r\n            // removing the monster\r\n            // this.spawners[this.monsters[monsterId].spawnerId].removeObject(\r\n            //   monsterId\r\n            // );\r\n            this.deleteMonster(monsterId);\r\n          } else {\r\n            // update the monsters health\r\n            this.io.emit(\r\n              \"updateMonsterHealth\",\r\n              monsterId,\r\n              this.monsters[monsterId].health\r\n            );\r\n\r\n            if (dis < 90) {\r\n              // update the players health\r\n              this.players[socket.id].playerAttacked(attack);\r\n              this.io.emit(\r\n                \"updatePlayerHealth\",\r\n                socket.id,\r\n                this.players[socket.id].health\r\n              );\r\n\r\n              // check the player's health, if below 0 have the player respawn\r\n              if (this.players[socket.id].health <= 0) {\r\n                // update the gold the player has\r\n                this.players[socket.id].updateGold(\r\n                  parseInt(-this.players[socket.id].gold / 2, 10)\r\n                );\r\n                socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n                // respawn the player\r\n                this.players[socket.id].respawn(this.players);\r\n                this.io.emit(\"respawnPlayer\", this.players[socket.id]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerHit\", (damage) => {});\r\n\r\n      socket.on(\"healthPotion\", (playerId, health) => {\r\n        if (socket.id === playerId) {\r\n          this.players[socket.id];\r\n          this.players[socket.id].potion(health);\r\n          this.io.emit(\r\n            \"updatePlayerHealth\",\r\n            socket.id,\r\n            this.players[socket.id].health\r\n          );\r\n        }\r\n      });\r\n\r\n      socket.on(\"sendBuyItemMessage\", (item) => {\r\n        this.players[socket.id].potions++;\r\n\r\n        this.players[socket.id].updateGold(-item.price);\r\n        socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersScore\",\r\n          socket.id,\r\n          this.players[socket.id].gold\r\n        );\r\n      });\r\n\r\n      socket.on(\"monsterMovement\", (monster) => {\r\n        if (!this.monsters[monster.id]) return;\r\n        this.monsters[monster.id].stateTime = monster.stateTime;\r\n        this.monsters[monster.id].randomPosition = monster.randomPosition;\r\n        this.monsters[monster.id].x = monster.x;\r\n        this.monsters[monster.id].y = monster.y;\r\n        // emit a message to all players about the monster that moved\r\n\r\n        this.io.emit(\"monsterMoved\", this.monsters[monster.id]);\r\n      });\r\n\r\n      socket.on(\"dropItem\", (x, y, item) => {\r\n        this.itemDictionary[item](x, y);\r\n      });\r\n\r\n      // player connected to our game\r\n      console.log(\"player connected to our game\");\r\n    });\r\n  }\r\n\r\n  setupSpawners() {\r\n    const config = {\r\n      spawnInterval: 3000,\r\n      limit: 3,\r\n      spawnerType: SpawnerType.CHEST,\r\n      id: \"\",\r\n    };\r\n    let spawner;\r\n    // create chest spawners\r\n    Object.keys(this.chestLocations).forEach((key) => {\r\n      config.id = `chest-${key}`;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.chestLocations[key],\r\n        this.addChest.bind(this),\r\n        this.deleteChest.bind(this)\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create monster spawners\r\n    Object.keys(this.monsterLocations).forEach((key) => {\r\n      config.id = `monster-${key}`;\r\n      config.limit = 8;\r\n      config.spawnerType = SpawnerType.MONSTER;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.monsterLocations[key],\r\n        this.addMonster.bind(this),\r\n        this.deleteMonster.bind(this)\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create npc spawners\r\n    Object.keys(this.npcLocations).forEach((key) => {\r\n      config.id = `npc-${key}`;\r\n      config.spawnerType = SpawnerType.NPC;\r\n\r\n      spawner = new Spawner(\r\n        config,\r\n        this.npcLocations[key],\r\n        this.addNpc.bind(this),\r\n        this.deleteNpc.bind(this)\r\n      );\r\n      this.spawners[spawner.id] = spawner;\r\n    });\r\n\r\n    // create items spawners\r\n    config.id = \"item\";\r\n    config.spawnerType = SpawnerType.ITEM;\r\n    spawner = new Spawner(\r\n      config,\r\n      this.itemsLocations,\r\n      this.addItems.bind(this),\r\n      this.deleteItems.bind(this)\r\n    );\r\n    this.spawners[spawner.id] = spawner;\r\n  }\r\n  spawnPlayer(playerId, name, key, playerSchema) {\r\n    const player = new PlayerModel(\r\n      playerId,\r\n      this.playerLocations,\r\n      this.players,\r\n      name,\r\n      key,\r\n      undefined,\r\n      playerSchema\r\n    );\r\n    this.players[playerId] = player;\r\n  }\r\n\r\n  addItems(itemId, item) {\r\n    this.items[itemId] = item;\r\n    this.io.emit(\"itemSpawned\", item);\r\n  }\r\n\r\n  deleteItems(itemId) {\r\n    delete this.items[itemId];\r\n    this.io.emit(\"itemRemoved\", itemId);\r\n  }\r\n\r\n  addChest(chestId, chest) {\r\n    this.chests[chestId] = chest;\r\n    this.io.emit(\"chestSpawned\", chest);\r\n  }\r\n\r\n  deleteChest(chestId) {\r\n    delete this.chests[chestId];\r\n    this.io.emit(\"chestRemoved\", chestId);\r\n  }\r\n\r\n  addMonster(monsterId, monster) {\r\n    this.monsters[monsterId] = monster;\r\n    this.io.emit(\"monsterSpawned\", monster);\r\n  }\r\n\r\n  deleteMonster(monsterId) {\r\n    delete this.monsters[monsterId];\r\n    this.io.emit(\"monsterRemoved\", monsterId);\r\n  }\r\n\r\n  addNpc(npcId, npc) {\r\n    this.npcs[npcId] = npc;\r\n    this.io.emit(\"npcSpawned\", npc);\r\n  }\r\n\r\n  deleteNpc(npcId) {\r\n    delete this.npcs[npcId];\r\n    this.io.emit(\"npcRemoved\", npcId);\r\n  }\r\n\r\n  drop(x,y){\r\n\r\n  }\r\n\r\n  createChest(x,y) {\r\n    const chest = new ChestModel(\r\n      x,\r\n      y,\r\n      randomNumber(10, 20),\r\n      `chest-${v4()}`,\r\n    );\r\n\r\n    this.addChest(chest.id,chest)\r\n\r\n  }\r\n\r\n  createItem(x,y) {\r\n    const randomItem =\r\n      itemData.items[Math.floor(Math.random() * itemData.items.length)];\r\n\r\n    const item =  new ItemModel(\r\n      x,\r\n      y,\r\n      `item-${v4()}`,\r\n      randomItem.name,\r\n      randomItem.frame,\r\n      getRandonValues(),\r\n      getRandonValues(),\r\n      getRandonValues(),\r\n      WeaponTypes.MELEE,\r\n      \"Description\"\r\n    );\r\n\r\n    this.addItems(item.id, item)\r\n  }\r\n}\r\n"],"file":"GameManager.js"}