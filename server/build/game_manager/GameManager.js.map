{"version":3,"sources":["../../src/game_manager/GameManager.js"],"names":["GameManager","io","spawners","chests","items","npcs","monsterController","MonsterController","playerController","PlayerController","rangedObjects","chestLocations","npcLocations","itemsLocations","itemData","locations","itemDictionary","chest","createChest","bind","item","createItem","drop","locationsDictionary","parseMapData","setupEventListeners","levelData","layers","forEach","name","objects","on","socket","message","token","decoded","jwt","verify","process","env","JWT_SECRET","email","user","ChatModel","create","emit","players","id","playerName","frame","console","log","getPlayerList","getMonsterList","x","y","itemId","chestId","npcId","npc","ChestModel","addChest","randomItem","Math","floor","random","length","ItemModel","WeaponTypes","MELEE","addItems"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AAEA;;AAMA;;AACA;;AACA;;AACA;;AACA;;;;;;IAEqBA,W;AACnB,uBAAYC,EAAZ,EAAgB;AAAA;AACd,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,EAAZ;AAEA,SAAKC,iBAAL,GAAyB,IAAIC,6BAAJ,CAAsB,KAAKN,EAA3B,CAAzB;AACA,SAAKO,gBAAL,GAAwB,IAAIC,4BAAJ,CAAqB,KAAKR,EAA1B,CAAxB;AAEA,SAAKS,aAAL,GAAqB,EAArB;AAEA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,YAAL,GAAoB,EAApB;AAEA,SAAKC,cAAL,GAAsBC,QAAQ,CAACC,SAA/B;AAEA,SAAKC,cAAL,GAAsB;AACpBC,MAAAA,KAAK,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CADa;AAEpBC,MAAAA,IAAI,EAAE,KAAKC,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAFc;AAGpB,UAAI,KAAKG,IAAL,CAAUH,IAAV,CAAe,IAAf;AAHgB,KAAtB;AAMA,SAAKI,mBAAL,GAA2B,EAA3B;AACD;;;;WAED,iBAAQ;AACN,WAAKC,YAAL;AACA,WAAKC,mBAAL;AACD;;;WAED,wBAAe;AACb,WAAKC,SAAL,GAAiBA,SAAjB;AACA,WAAKA,SAAL,CAAeC,MAAf,CAAsBC,OAAtB,CAA8B,gBAAuB,CACnD;;AADmD,YAApBC,IAAoB,QAApBA,IAAoB;AAAA,YAAdC,OAAc,QAAdA,OAAc;AAEpD,OAFD;AAGD;;;WAED,+BAAsB;AAAA;;AACpB,WAAK7B,EAAL,CAAQ8B,EAAR,CAAW,YAAX,EAAyB,UAACC,MAAD,EAAY;AACnC;AAEAA,QAAAA,MAAM,CAACD,EAAP,CAAU,aAAV;AAAA,oGAAyB,iBAAOE,OAAP,EAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,oBAAAA,OAFe,GAELC,yBAAIC,MAAJ,CAAWH,KAAX,EAAkBI,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAFK;AAGbC,oBAAAA,KAHa,GAGHN,OAAO,CAACO,IAHL,CAGbD,KAHa;AAAA;AAAA,2BAIfE,sBAAUC,MAAV,CAAiB;AAAEH,sBAAAA,KAAK,EAALA,KAAF;AAASR,sBAAAA,OAAO,EAAPA;AAAT,qBAAjB,CAJe;;AAAA;AAKrB,oBAAA,KAAI,CAAChC,EAAL,CAAQ4C,IAAR,CAAa,YAAb,EAA2B;AACzBZ,sBAAAA,OAAO,EAAPA,OADyB;AAEzBJ,sBAAAA,IAAI,EAAE,KAAI,CAACiB,OAAL,CAAad,MAAM,CAACe,EAApB,EAAwBC,UAFL;AAGzBC,sBAAAA,KAAK,EAAE,KAAI,CAACH,OAAL,CAAad,MAAM,CAACe,EAApB,EAAwBE;AAHN,qBAA3B;;AALqB;AAAA;;AAAA;AAAA;AAAA;AAWrBC,oBAAAA,OAAO,CAACC,GAAR;;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAzB;;AAAA;AAAA;AAAA;AAAA;AAeAnB,QAAAA,MAAM,CAACD,EAAP,CAAU,UAAV,EAAsB,YAAM;AAC1B;AACAC,UAAAA,MAAM,CAACa,IAAP,CAAY,gBAAZ,EAA8B,KAAI,CAACrC,gBAAL,CAAsB4C,aAAtB,EAA9B,EAF0B,CAG1B;;AACApB,UAAAA,MAAM,CAACa,IAAP,CAAY,iBAAZ,EAA+B,KAAI,CAACvC,iBAAL,CAAuB+C,cAAvB,EAA/B,EAJ0B,CAK1B;;AACArB,UAAAA,MAAM,CAACa,IAAP,CAAY,eAAZ,EAA6B,KAAI,CAAC1C,MAAlC,EAN0B,CAO1B;;AACA6B,UAAAA,MAAM,CAACa,IAAP,CAAY,cAAZ,EAA4B,KAAI,CAACzC,KAAjC,EAR0B,CAS1B;;AACA4B,UAAAA,MAAM,CAACa,IAAP,CAAY,aAAZ,EAA2B,KAAI,CAACxC,IAAhC;AACD,SAXD;AAaA2B,QAAAA,MAAM,CAACD,EAAP,CAAU,UAAV,EAAsB,UAACuB,CAAD,EAAIC,CAAJ,EAAOnC,IAAP,EAAgB;AACpC,UAAA,KAAI,CAACJ,cAAL,CAAoBI,IAApB,EAA0BkC,CAA1B,EAA6BC,CAA7B;AACD,SAFD,EA/BmC,CAmCnC;;AACA,QAAA,KAAI,CAACjD,iBAAL,CAAuBmB,mBAAvB,CAA2CO,MAA3C;;AACA,QAAA,KAAI,CAACxB,gBAAL,CAAsBiB,mBAAtB,CAA0CO,MAA1C,EArCmC,CAuCnC;;;AACAkB,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,OAzCD;AA0CD;;;WAED,kBAASK,MAAT,EAAiBpC,IAAjB,EAAuB;AACrB,WAAKhB,KAAL,CAAWoD,MAAX,IAAqBpC,IAArB;AACA,WAAKnB,EAAL,CAAQ4C,IAAR,CAAa,aAAb,EAA4BzB,IAA5B;AACD;;;WAED,qBAAYoC,MAAZ,EAAoB;AAClB,aAAO,KAAKpD,KAAL,CAAWoD,MAAX,CAAP;AACA,WAAKvD,EAAL,CAAQ4C,IAAR,CAAa,aAAb,EAA4BW,MAA5B;AACD;;;WAED,kBAASC,OAAT,EAAkBxC,KAAlB,EAAyB;AACvB,WAAKd,MAAL,CAAYsD,OAAZ,IAAuBxC,KAAvB;AACA,WAAKhB,EAAL,CAAQ4C,IAAR,CAAa,cAAb,EAA6B5B,KAA7B;AACD;;;WAED,qBAAYwC,OAAZ,EAAqB;AACnB,aAAO,KAAKtD,MAAL,CAAYsD,OAAZ,CAAP;AACA,WAAKxD,EAAL,CAAQ4C,IAAR,CAAa,cAAb,EAA6BY,OAA7B;AACD;;;WAED,gBAAOC,KAAP,EAAcC,GAAd,EAAmB;AACjB,WAAKtD,IAAL,CAAUqD,KAAV,IAAmBC,GAAnB;AACA,WAAK1D,EAAL,CAAQ4C,IAAR,CAAa,YAAb,EAA2Bc,GAA3B;AACD;;;WAED,mBAAUD,KAAV,EAAiB;AACf,aAAO,KAAKrD,IAAL,CAAUqD,KAAV,CAAP;AACA,WAAKzD,EAAL,CAAQ4C,IAAR,CAAa,YAAb,EAA2Ba,KAA3B;AACD;;;WAED,cAAKJ,CAAL,EAAQC,CAAR,EAAW,CAAE;;;WAEb,qBAAYD,CAAZ,EAAeC,CAAf,EAAkB;AAChB,UAAMtC,KAAK,GAAG,IAAI2C,sBAAJ,CAAeN,CAAf,EAAkBC,CAAlB,EAAqB,yBAAa,EAAb,EAAiB,EAAjB,CAArB,kBAAoD,eAApD,EAAd;AACA,WAAKM,QAAL,CAAc5C,KAAK,CAAC8B,EAApB,EAAwB9B,KAAxB;AACD;;;WAED,oBAAWqC,CAAX,EAAcC,CAAd,EAAiB;AACf,UAAMO,UAAU,GACdhD,QAAQ,CAACV,KAAT,CAAe2D,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBnD,QAAQ,CAACV,KAAT,CAAe8D,MAA1C,CAAf,CADF;AAGA,UAAM9C,IAAI,GAAG,IAAI+C,qBAAJ,CACXb,CADW,EAEXC,CAFW,iBAGH,eAHG,GAIXO,UAAU,CAACjC,IAJA,EAKXiC,UAAU,CAACb,KALA,EAMX,6BANW,EAOX,6BAPW,EAQX,6BARW,EASXmB,mBAAYC,KATD,EAUX,aAVW,CAAb;AAaA,WAAKC,QAAL,CAAclD,IAAI,CAAC2B,EAAnB,EAAuB3B,IAAvB;AACD","sourcesContent":["import jwt from \"jsonwebtoken\";\r\n\r\nimport ChatModel from \"../models/ChatModel\";\r\n\r\nimport * as levelData from \"../../public/assets/level/new_level.json\";\r\nimport * as itemData from \"../../public/assets/level/tools.json\";\r\nimport * as enemyData from \"../../public/assets/Enemies/enemies.json\";\r\n\r\nimport {\r\n  getRandonValues,\r\n  randomNumber,\r\n  SpawnerType,\r\n  WeaponTypes,\r\n} from \"./utils\";\r\nimport ItemModel from \"../models/ItemModel\";\r\nimport ChestModel from \"../models/ChestModel\";\r\nimport { v4 } from \"uuid\";\r\nimport MonsterController from \"./controllers/MonsterController\";\r\nimport PlayerController from \"./controllers/PlayerController\";\r\n\r\nexport default class GameManager {\r\n  constructor(io) {\r\n    this.io = io;\r\n    this.spawners = {};\r\n    this.chests = {};\r\n    this.items = {};\r\n    this.npcs = {};\r\n\r\n    this.monsterController = new MonsterController(this.io);\r\n    this.playerController = new PlayerController(this.io);\r\n\r\n    this.rangedObjects = {};\r\n\r\n    this.chestLocations = {};\r\n    this.npcLocations = {};\r\n\r\n    this.itemsLocations = itemData.locations;\r\n\r\n    this.itemDictionary = {\r\n      chest: this.createChest.bind(this),\r\n      item: this.createItem.bind(this),\r\n      \"\": this.drop.bind(this),\r\n    };\r\n\r\n    this.locationsDictionary = {};\r\n  }\r\n\r\n  setup() {\r\n    this.parseMapData();\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  parseMapData() {\r\n    this.levelData = levelData;\r\n    this.levelData.layers.forEach(({ name, objects }) => {\r\n      //this.locationsDictionary[name](objects);\r\n    });\r\n  }\r\n\r\n  setupEventListeners() {\r\n    this.io.on(\"connection\", (socket) => {\r\n      // player disconnected\r\n\r\n      socket.on(\"sendMessage\", async (message, token) => {\r\n        try {\r\n          const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n          const { email } = decoded.user;\r\n          await ChatModel.create({ email, message });\r\n          this.io.emit(\"newMessage\", {\r\n            message,\r\n            name: this.players[socket.id].playerName,\r\n            frame: this.players[socket.id].frame,\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n\r\n      socket.on(\"currents\", () => {\r\n        // send the players object to the new player\r\n        socket.emit(\"currentPlayers\", this.playerController.getPlayerList());\r\n        // send the monsters object to the new player\r\n        socket.emit(\"currentMonsters\", this.monsterController.getMonsterList());\r\n        // send the chests object to the new player\r\n        socket.emit(\"currentChests\", this.chests);\r\n        // send the items object to the new player\r\n        socket.emit(\"currentItems\", this.items);\r\n        // send the npcs object to the new player\r\n        socket.emit(\"currentNpcs\", this.npcs);\r\n      });\r\n\r\n      socket.on(\"dropItem\", (x, y, item) => {\r\n        this.itemDictionary[item](x, y);\r\n      });\r\n\r\n      //-------------------MONSTER---------------\r\n      this.monsterController.setupEventListeners(socket);\r\n      this.playerController.setupEventListeners(socket);\r\n\r\n      // player connected to our game\r\n      console.log(\"player connected to our game\");\r\n    });\r\n  }\r\n\r\n  addItems(itemId, item) {\r\n    this.items[itemId] = item;\r\n    this.io.emit(\"itemSpawned\", item);\r\n  }\r\n\r\n  deleteItems(itemId) {\r\n    delete this.items[itemId];\r\n    this.io.emit(\"itemRemoved\", itemId);\r\n  }\r\n\r\n  addChest(chestId, chest) {\r\n    this.chests[chestId] = chest;\r\n    this.io.emit(\"chestSpawned\", chest);\r\n  }\r\n\r\n  deleteChest(chestId) {\r\n    delete this.chests[chestId];\r\n    this.io.emit(\"chestRemoved\", chestId);\r\n  }\r\n\r\n  addNpc(npcId, npc) {\r\n    this.npcs[npcId] = npc;\r\n    this.io.emit(\"npcSpawned\", npc);\r\n  }\r\n\r\n  deleteNpc(npcId) {\r\n    delete this.npcs[npcId];\r\n    this.io.emit(\"npcRemoved\", npcId);\r\n  }\r\n\r\n  drop(x, y) {}\r\n\r\n  createChest(x, y) {\r\n    const chest = new ChestModel(x, y, randomNumber(10, 20), `chest-${v4()}`);\r\n    this.addChest(chest.id, chest);\r\n  }\r\n\r\n  createItem(x, y) {\r\n    const randomItem =\r\n      itemData.items[Math.floor(Math.random() * itemData.items.length)];\r\n\r\n    const item = new ItemModel(\r\n      x,\r\n      y,\r\n      `item-${v4()}`,\r\n      randomItem.name,\r\n      randomItem.frame,\r\n      getRandonValues(),\r\n      getRandonValues(),\r\n      getRandonValues(),\r\n      WeaponTypes.MELEE,\r\n      \"Description\"\r\n    );\r\n\r\n    this.addItems(item.id, item);\r\n  }\r\n}\r\n"],"file":"GameManager.js"}