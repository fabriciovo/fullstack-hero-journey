{"version":3,"file":"Spawner.js","names":["_utils","require","_ChestModel","_interopRequireDefault","_MonsterModel","_ItemModel","itemData","_interopRequireWildcard","enemyData","_NpcModel","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Spawner","exports","config","spawnLocations","addObject","deleteObject","moveObjects","_classCallCheck2","id","spawnInterval","limit","objectType","spawnerType","monsterIntervalTimer","objectsCreated","start","_createClass2","key","value","_this","interval","setInterval","length","spawnObject","SpawnerType","MONSTER","moveMonsters","CHEST","spawnChest","spawnMonster","ITEM","spawnItem","NPC","spawnNpc","location","pickRandomLocation","randomItem","items","Math","floor","random","item","ItemModel","name","frame","getRandonValues","WeaponTypes","MELEE","push","chest","ChestModel","randomNumber","randomEnemy","enemies","monster","MonsterModel","goldValue","healthValue","attackValue","expValue","npc","NpcModel","invalidLocation","some","obj","x","y","removeObject","filter","_this2","moveMonsterInterval","forEach","move","resetMonsterInterval","_this3","clearInterval"],"sources":["../../../src/game_manager/controllers/Spawner.js"],"sourcesContent":["import {\r\n  SpawnerType,\r\n  randomNumber,\r\n  WeaponTypes,\r\n  getRandonValues,\r\n} from \"../utils\";\r\nimport ChestModel from \"../../models/ChestModel\";\r\nimport MonsterModel from \"../../models/MonsterModel\";\r\nimport ItemModel from \"../../models/ItemModel\";\r\nimport * as itemData from \"../../../public/assets/level/tools.json\";\r\nimport * as enemyData from \"../../../public/assets/Enemies/enemies.json\";\r\nimport NpcModel from \"../../models/NpcModel\";\r\n\r\nexport default class Spawner {\r\n  constructor(config, spawnLocations, addObject, deleteObject, moveObjects) {\r\n    this.id = config.id;\r\n    this.spawnInterval = config.spawnInterval;\r\n    this.limit = config.limit;\r\n    this.objectType = config.spawnerType;\r\n    this.spawnLocations = spawnLocations;\r\n    this.addObject = addObject;\r\n    this.deleteObject = deleteObject;\r\n    this.moveObjects = moveObjects;\r\n    this.monsterIntervalTimer = 1000;\r\n    this.objectsCreated = [];\r\n\r\n    this.start();\r\n  }\r\n\r\n  start() {\r\n    this.interval = setInterval(() => {\r\n      if (this.objectsCreated.length < this.limit) {\r\n        this.spawnObject();\r\n      }\r\n    }, this.spawnInterval);\r\n    if (this.objectType === SpawnerType.MONSTER) this.moveMonsters();\r\n  }\r\n\r\n  spawnObject() {\r\n    if (this.objectType === SpawnerType.CHEST) {\r\n      this.spawnChest();\r\n    } else if (this.objectType === SpawnerType.MONSTER) {\r\n      this.spawnMonster();\r\n    } else if (this.objectType === SpawnerType.ITEM) {\r\n      this.spawnItem();\r\n    } else if (this.objectType === SpawnerType.NPC) {\r\n      this.spawnNpc();\r\n    }\r\n  }\r\n\r\n  spawnItem() {\r\n    const location = this.pickRandomLocation();\r\n\r\n    const randomItem =\r\n      itemData.items[Math.floor(Math.random() * itemData.items.length)];\r\n\r\n    const item = new ItemModel(\r\n      location[0],\r\n      location[1],\r\n      this.id,\r\n      randomItem.name,\r\n      randomItem.frame,\r\n      getRandonValues(),\r\n      getRandonValues(),\r\n      getRandonValues(),\r\n      WeaponTypes.MELEE,\r\n      \"Description\"\r\n    );\r\n    this.objectsCreated.push(item);\r\n    this.addObject(item.id, item);\r\n  }\r\n\r\n  spawnChest() {\r\n    const location = this.pickRandomLocation();\r\n    const chest = new ChestModel(\r\n      location[0],\r\n      location[1],\r\n      randomNumber(10, 20),\r\n      this.id\r\n    );\r\n    this.objectsCreated.push(chest);\r\n    this.addObject(chest.id, chest);\r\n  }\r\n\r\n  spawnMonster() {\r\n    const randomEnemy =\r\n      enemyData.enemies[Math.floor(Math.random() * enemyData.enemies.length)];\r\n\r\n    const location = this.pickRandomLocation();\r\n    const monster = new MonsterModel(\r\n      location[0],\r\n      location[1],\r\n      randomEnemy.goldValue, // gold value\r\n      this.id,\r\n      randomEnemy.key, // key\r\n      randomEnemy.healthValue, // health value\r\n      randomEnemy.attackValue, // attack value\r\n      randomEnemy.expValue, // exp value\r\n      3000 //timer\r\n    );\r\n    this.objectsCreated.push(monster);\r\n    this.addObject(monster.id, monster);\r\n  }\r\n\r\n  spawnNpc() {\r\n    const location = this.pickRandomLocation();\r\n    const npc = new NpcModel(location[0], location[1], this.id);\r\n    this.objectsCreated.push(npc);\r\n    this.addObject(npc.id, npc);\r\n  }\r\n\r\n  pickRandomLocation() {\r\n    const location =\r\n      this.spawnLocations[\r\n        Math.floor(Math.random() * this.spawnLocations.length)\r\n      ];\r\n    const invalidLocation = this.objectsCreated.some((obj) => {\r\n      if (obj.x === location[0] && obj.y === location[1]) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (invalidLocation) return this.pickRandomLocation();\r\n    return location;\r\n  }\r\n\r\n  removeObject(id) {\r\n    this.objectsCreated = this.objectsCreated.filter((obj) => obj.id !== id);\r\n    this.deleteObject(id);\r\n  }\r\n\r\n  moveMonsters() {\r\n    this.moveMonsterInterval = setInterval(() => {\r\n      this.objectsCreated.forEach((monster) => {\r\n        monster.move();\r\n      });\r\n      this.moveObjects();\r\n    }, this.monsterIntervalTimer);\r\n  }\r\n\r\n  resetMonsterInterval(value) {\r\n    // clear the existing interval\r\n    this.monsterIntervalTimer = value;\r\n    clearInterval(this.moveMonsterInterval);\r\n    // just start a new one\r\n    this.moveMonsterInterval = setInterval(() => {\r\n      this.objectsCreated.forEach((monster) => {\r\n        monster.move();\r\n      });\r\n      this.moveObjects();\r\n    }, this.monsterIntervalTimer);\r\n  }\r\n}\r\n"],"mappings":"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"}