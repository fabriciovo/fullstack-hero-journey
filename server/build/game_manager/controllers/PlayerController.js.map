{"version":3,"sources":["../../../src/game_manager/controllers/PlayerController.js"],"names":["PlayerController","io","players","playerLocations","init","socket","on","id","items","equipedItems","UserModel","updateOne","username","playerName","$set","player","console","log","token","key","decoded","jwt","verify","process","env","JWT_SECRET","user","name","_id","findById","playerSchema","spawnPlayer","emit","broadcast","playerData","x","y","flipX","actionAActive","potionAActive","frame","currentDirection","chestId","chests","gold","updateGold","itemId","canPickupItem","addItem","removeItem","canEquipItem","equipItem","removeEquipedItem","levelUp","level","attack","defense","maxHealth","exp","maxExp","attackedPlayerId","playerAttackValue","playerAttacked","health","respawn","to","updateHealth","playerId","potion","item","potions","price","PlayerModel","undefined"],"mappings":"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","sourcesContent":["import jwt from \"jsonwebtoken\";\r\n\r\nimport UserModel from \"../../models/UserModel\";\r\nimport PlayerModel from \"../../models/PlayerModel\";\r\nexport default class PlayerController {\r\n  constructor(io) {\r\n    this.players = {};\r\n    this.playerLocations = [];\r\n    this.io = io;\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {}\r\n\r\n  setupEventListeners(socket) {\r\n    socket.on(\"savePlayerData\", async () => {\r\n      try {\r\n        if (!this.players[socket.id].items) {\r\n          this.players[socket.id].items = null;\r\n        }\r\n\r\n        if (!this.players[socket.id].equipedItems) {\r\n          this.players[socket.id].equipedItems = null;\r\n        }\r\n\r\n        await UserModel.updateOne(\r\n          { username: this.players[socket.id].playerName },\r\n          {\r\n            $set: {\r\n              player: this.players[socket.id],\r\n            },\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n    socket.on(\"newPlayer\", async (token, key) => {\r\n      console.log(\"newPlayer\")\r\n      try {\r\n        const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n        const { name, _id } = decoded.user;\r\n\r\n        const playerSchema = await UserModel.findById(_id);\r\n        // create a new Player\r\n\r\n        this.spawnPlayer(socket.id, name, key, playerSchema.player);\r\n\r\n        socket.emit(\"currents\");\r\n\r\n        // inform the other players of the new player that joined\r\n        socket.broadcast.emit(\"spawnPlayer\", this.players[socket.id]);\r\n        socket.emit(\"updateItems\", this.players[socket.id]);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersItems\",\r\n          socket.id,\r\n          this.players[socket.id]\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n        socket.emit(\"invalidToken\");\r\n      }\r\n    });\r\n\r\n    socket.on(\"playerMovement\", (playerData) => {\r\n      if (this.players[socket.id]) {\r\n        this.players[socket.id].x = playerData.x;\r\n        this.players[socket.id].y = playerData.y;\r\n        this.players[socket.id].flipX = playerData.flipX;\r\n        this.players[socket.id].actionAActive = playerData.actionAActive;\r\n        this.players[socket.id].potionAActive = playerData.potionAActive;\r\n        this.players[socket.id].frame = playerData.frame;\r\n        this.players[socket.id].currentDirection = playerData.currentDirection;\r\n        // emit a message to all players about the player that moved\r\n        this.io.emit(\"playerMoved\", this.players[socket.id]);\r\n      }\r\n\r\n      socket.on(\"pickUpChest\", (chestId) => {\r\n        // update the spawner\r\n        if (this.chests[chestId]) {\r\n          const { gold } = this.chests[chestId];\r\n\r\n          // updating the players gold\r\n          this.players[socket.id].updateGold(gold);\r\n          socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersScore\",\r\n            socket.id,\r\n            this.players[socket.id].gold\r\n          );\r\n          // removing the chest\r\n          //this.deleteChest(chestId);\r\n        }\r\n      });\r\n\r\n      socket.on(\"pickUpItem\", (itemId) => {\r\n        // update the spawner\r\n        if (this.items[itemId]) {\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(this.items[itemId]);\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n\r\n            // removing the item\r\n            //this.deleteItems(itemId);\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerDroppedItem\", (itemId) => {\r\n        this.players[socket.id].removeItem(itemId);\r\n        socket.emit(\"updateItems\", this.players[socket.id]);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersItems\",\r\n          socket.id,\r\n          this.players[socket.id]\r\n        );\r\n      });\r\n\r\n      socket.on(\"playerEquipedItem\", (itemId) => {\r\n        if (this.players[socket.id].items[itemId]) {\r\n          if (this.players[socket.id].canEquipItem()) {\r\n            this.players[socket.id].equipItem(\r\n              this.players[socket.id].items[itemId]\r\n            );\r\n\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"playerUnequipedItem\", (itemId) => {\r\n        if (this.players[socket.id].equipedItems[itemId]) {\r\n          if (this.players[socket.id].canPickupItem()) {\r\n            this.players[socket.id].addItem(\r\n              this.players[socket.id].equipedItems[itemId]\r\n            );\r\n\r\n            this.players[socket.id].removeEquipedItem(itemId);\r\n\r\n            socket.emit(\"updateItems\", this.players[socket.id]);\r\n            socket.broadcast.emit(\r\n              \"updatePlayersItems\",\r\n              socket.id,\r\n              this.players[socket.id]\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"levelUp\", () => {\r\n        this.players[socket.id].levelUp();\r\n        this.io.emit(\r\n          \"updatePlayerStats\",\r\n          socket.id,\r\n          this.players[socket.id].level,\r\n          this.players[socket.id].attack,\r\n          this.players[socket.id].defense,\r\n          this.players[socket.id].maxHealth,\r\n          this.players[socket.id].exp,\r\n          this.players[socket.id].maxExp\r\n        );\r\n      });\r\n\r\n      socket.on(\"attackedPlayer\", (attackedPlayerId) => {\r\n        if (this.players[attackedPlayerId]) {\r\n          // get required info from attacked player\r\n          const { gold } = this.players[attackedPlayerId];\r\n          const playerAttackValue = this.players[socket.id].attack;\r\n\r\n          // subtract health from attacked player\r\n          this.players[attackedPlayerId].playerAttacked(playerAttackValue);\r\n\r\n          // check attacked players health, if dead send gold to other player\r\n          if (this.players[attackedPlayerId].health <= 0) {\r\n            // get the amount of gold, and update player object\r\n            this.players[socket.id].updateGold(gold);\r\n\r\n            // respawn attacked player\r\n            this.players[attackedPlayerId].respawn(this.players);\r\n            this.io.emit(\"respawnPlayer\", this.players[attackedPlayerId]);\r\n\r\n            // send update gold message to player\r\n            socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n            // reset the attacked players gold\r\n            this.players[attackedPlayerId].updateGold(-gold);\r\n            this.io\r\n              .to(`${attackedPlayerId}`)\r\n              .emit(\"updateScore\", this.players[attackedPlayerId].gold);\r\n\r\n            // add bonus health to the player\r\n            this.players[socket.id].updateHealth(15);\r\n            this.io.emit(\r\n              \"updatePlayerHealth\",\r\n              socket.id,\r\n              this.players[socket.id].health\r\n            );\r\n          } else {\r\n            this.io.emit(\r\n              \"updatePlayerHealth\",\r\n              attackedPlayerId,\r\n              this.players[attackedPlayerId].health\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      socket.on(\"healthPotion\", (playerId, health) => {\r\n        if (socket.id === playerId) {\r\n          this.players[socket.id];\r\n          this.players[socket.id].potion(health);\r\n          this.io.emit(\r\n            \"updatePlayerHealth\",\r\n            socket.id,\r\n            this.players[socket.id].health\r\n          );\r\n        }\r\n      });\r\n\r\n      socket.on(\"sendBuyItemMessage\", (item) => {\r\n        this.players[socket.id].potions++;\r\n\r\n        this.players[socket.id].updateGold(-item.price);\r\n        socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n        socket.broadcast.emit(\r\n          \"updatePlayersScore\",\r\n          socket.id,\r\n          this.players[socket.id].gold\r\n        );\r\n      });\r\n\r\n      socket.on(\"disconnect\", () => {\r\n        // delete user data from server\r\n\r\n        console.log(\"Player Disconnect\");\r\n\r\n        delete this.players[socket.id];\r\n\r\n        // emit a message to all players to remove this player\r\n        this.io.emit(\"disconnected\", socket.id);\r\n      });\r\n    });\r\n  }\r\n\r\n  spawnPlayer(playerId, name, key, playerSchema) {\r\n    const player = new PlayerModel(\r\n      playerId,\r\n      [\r\n        [200, 200],\r\n        [400, 400],\r\n      ],\r\n      this.players,\r\n      name,\r\n      key,\r\n      undefined,\r\n      playerSchema\r\n    );\r\n    this.players[playerId] = player;\r\n  }\r\n\r\n  getPlayerList() {\r\n    return this.players;\r\n  }\r\n}\r\n"],"file":"PlayerController.js"}