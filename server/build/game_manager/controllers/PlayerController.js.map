{"version":3,"sources":["../../../src/game_manager/controllers/PlayerController.js"],"names":["PlayerController","io","players","playerLocations","socket","_eventNewPlayer","_eventPlayerMovement","_eventPickupChest","_eventPickupItem","_eventPlayerDroppedItem","_eventPlayerEquipedItem","_eventPlayerUnequipedItem","_eventHealthPotion","_eventAttackedPlayer","_eventPlayerHit","_eventSendBuyItemMessage","_eventPlayerUpdateXp","_eventDisconnect","on","id","items","equipedItems","UserModel","updateOne","username","playerName","$set","player","console","log","token","key","instanceId","decoded","jwt","verify","process","env","JWT_SECRET","user","name","_id","findById","playerSchema","_spawnPlayer","emit","broadcast","playerData","x","y","flipX","actionAActive","potionAActive","frame","currentDirection","chestId","levelUp","level","attack","defense","maxHealth","exp","maxExp","itemId","removeItem","canEquipItem","equipItem","canPickupItem","addItem","removeEquipedItem","playerId","health","potion","attackedPlayerId","gold","playerAttackValue","playerAttacked","updateGold","respawn","to","updateHealth","monsterAttack","item","potions","price","parseInt","updateExp","PlayerModel","undefined"],"mappings":"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","sourcesContent":["import jwt from \"jsonwebtoken\";\r\n\r\nimport UserModel from \"../../models/UserModel\";\r\nimport PlayerModel from \"../../models/PlayerModel\";\r\nexport default class PlayerController {\r\n  constructor(io) {\r\n    this.players = {};\r\n    this.playerLocations = [];\r\n    this.io = io;\r\n  }\r\n\r\n  setupEventListeners(socket) {\r\n    this._eventNewPlayer(socket);\r\n    this._eventPlayerMovement(socket);\r\n    this._eventPickupChest(socket);\r\n    this._eventPickupItem(socket);\r\n    this._eventPlayerDroppedItem(socket);\r\n    this._eventPlayerEquipedItem(socket);\r\n    this._eventPlayerUnequipedItem(socket);\r\n    this._eventHealthPotion(socket);\r\n    this._eventPickupItem(socket);\r\n    this._eventAttackedPlayer(socket);\r\n    this._eventPlayerHit(socket);\r\n    this._eventSendBuyItemMessage(socket);\r\n    this._eventPlayerUpdateXp(socket);\r\n    this._eventDisconnect(socket);\r\n  }\r\n\r\n  _eventSavePlayerData(socket) {\r\n    return socket.on(\"savePlayerData\", async () => {\r\n      try {\r\n        if (!this.players[socket.id].items) {\r\n          this.players[socket.id].items = null;\r\n        }\r\n\r\n        if (!this.players[socket.id].equipedItems) {\r\n          this.players[socket.id].equipedItems = null;\r\n        }\r\n\r\n        await UserModel.updateOne(\r\n          { username: this.players[socket.id].playerName },\r\n          {\r\n            $set: {\r\n              player: this.players[socket.id],\r\n            },\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  _eventNewPlayer(socket) {\r\n    socket.on(\"newPlayer\", async (token, key, instanceId) => {\r\n      console.log(\"Player newPlayer\");\r\n\r\n      try {\r\n        const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n        const { name, _id } = decoded.user;\r\n\r\n        const playerSchema = await UserModel.findById(_id);\r\n\r\n        const player = this._spawnPlayer(\r\n          socket.id,\r\n          name,\r\n          key,\r\n          playerSchema.player\r\n        );\r\n\r\n        socket.emit(\"currentPlayers\", this.players, instanceId);\r\n\r\n        // inform the other players of the new player that joined\r\n        socket.broadcast.emit(\"spawnPlayer\", player);\r\n        socket.emit(\"updateItems\", player);\r\n        socket.broadcast.emit(\"updatePlayersItems\", socket.id, player);\r\n      } catch (error) {\r\n        console.log(error);\r\n        socket.emit(\"invalidToken\");\r\n      }\r\n    });\r\n  }\r\n\r\n  _eventPlayerMovement(socket) {\r\n    return socket.on(\"playerMovement\", (playerData) => {\r\n      if (this.players[socket.id]) {\r\n        this.players[socket.id].x = playerData.x;\r\n        this.players[socket.id].y = playerData.y;\r\n        this.players[socket.id].flipX = playerData.flipX;\r\n        this.players[socket.id].actionAActive = playerData.actionAActive;\r\n        this.players[socket.id].potionAActive = playerData.potionAActive;\r\n        this.players[socket.id].frame = playerData.frame;\r\n        this.players[socket.id].currentDirection = playerData.currentDirection;\r\n        // emit a message to all players about the player that moved\r\n        this.io.emit(\"playerMoved\", this.players[socket.id]);\r\n      }\r\n    });\r\n  }\r\n\r\n  _eventPickupChest(socket) {\r\n    return socket.on(\"pickUpChest\", (chestId) => {\r\n      this.io.emit(\"playerPickupChest\", chestId, this.players[socket.id]);\r\n    });\r\n  }\r\n\r\n  _eventPickupItem(socket) {\r\n    return socket.on(\"pickUpItem\", (itemId) => {\r\n      this.io.emit(\"playerPickupItem\", itemId, this.players[socket.id]);\r\n    });\r\n  }\r\n\r\n  _eventPlayerDroppedItem(socket) {\r\n    return socket.on(\"playerDroppedItem\", (itemId) => {\r\n      this.players[socket.id].removeItem(itemId);\r\n      socket.emit(\"updateItems\", this.players[socket.id]);\r\n      socket.broadcast.emit(\r\n        \"updatePlayersItems\",\r\n        socket.id,\r\n        this.players[socket.id]\r\n      );\r\n    });\r\n  }\r\n\r\n  _eventPlayerEquipedItem(socket) {\r\n    return socket.on(\"playerEquipedItem\", (itemId) => {\r\n      if (this.players[socket.id].items[itemId]) {\r\n        if (this.players[socket.id].canEquipItem()) {\r\n          this.players[socket.id].equipItem(\r\n            this.players[socket.id].items[itemId]\r\n          );\r\n          socket.emit(\"updateItems\", this.players[socket.id]);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersItems\",\r\n            socket.id,\r\n            this.players[socket.id]\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _eventPlayerUnequipedItem(socket) {\r\n    return socket.on(\"playerUnequipedItem\", (itemId) => {\r\n      if (this.players[socket.id].equipedItems[itemId]) {\r\n        if (this.players[socket.id].canPickupItem()) {\r\n          this.players[socket.id].addItem(\r\n            this.players[socket.id].equipedItems[itemId]\r\n          );\r\n          this.players[socket.id].removeEquipedItem(itemId);\r\n          socket.emit(\"updateItems\", this.players[socket.id]);\r\n          socket.broadcast.emit(\r\n            \"updatePlayersItems\",\r\n            socket.id,\r\n            this.players[socket.id]\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n  _eventPickupItem(socket) {\r\n    return socket.on(\"levelUp\", () => {\r\n      this.players[socket.id].levelUp();\r\n      this.io.emit(\r\n        \"updatePlayerStats\",\r\n        socket.id,\r\n        this.players[socket.id].level,\r\n        this.players[socket.id].attack,\r\n        this.players[socket.id].defense,\r\n        this.players[socket.id].maxHealth,\r\n        this.players[socket.id].exp,\r\n        this.players[socket.id].maxExp\r\n      );\r\n    });\r\n  }\r\n\r\n  _eventHealthPotion(socket) {\r\n    return socket.on(\"healthPotion\", (playerId, health) => {\r\n      this.players[playerId];\r\n      this.players[playerId].potion(health);\r\n      this.io.emit(\r\n        \"updatePlayerHealth\",\r\n        playerId,\r\n        this.players[playerId].health\r\n      );\r\n    });\r\n  }\r\n\r\n  _eventAttackedPlayer(socket) {\r\n    return socket.on(\"attackedPlayer\", (attackedPlayerId) => {\r\n      if (this.players[attackedPlayerId]) {\r\n        // get required info from attacked player\r\n        const { gold } = this.players[attackedPlayerId];\r\n        const playerAttackValue = this.players[socket.id].attack;\r\n\r\n        // subtract health from attacked player\r\n        this.players[attackedPlayerId].playerAttacked(playerAttackValue);\r\n\r\n        // check attacked players health, if dead send gold to other player\r\n        if (this.players[attackedPlayerId].health <= 0) {\r\n          // get the amount of gold, and update player object\r\n          this.players[socket.id].updateGold(gold);\r\n\r\n          // respawn attacked player\r\n          this.players[attackedPlayerId].respawn(this.players);\r\n          this.io.emit(\"respawnPlayer\", this.players[attackedPlayerId]);\r\n\r\n          // send update gold message to player\r\n          socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n          // reset the attacked players gold\r\n          this.players[attackedPlayerId].updateGold(-gold);\r\n          this.io\r\n            .to(`${attackedPlayerId}`)\r\n            .emit(\"updateScore\", this.players[attackedPlayerId].gold);\r\n\r\n          // add bonus health to the player\r\n          this.players[socket.id].updateHealth(15);\r\n          this.io.emit(\r\n            \"updatePlayerHealth\",\r\n            socket.id,\r\n            this.players[socket.id].health\r\n          );\r\n        } else {\r\n          this.io.emit(\r\n            \"updatePlayerHealth\",\r\n            attackedPlayerId,\r\n            this.players[attackedPlayerId].health\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _eventPlayerHit(socket) {\r\n    return socket.on(\"playerHit\", (playerId, monsterAttack) => {\r\n      this.players[playerId].playerAttacked(monsterAttack);\r\n      this.io.emit(\r\n        \"updatePlayerHealth\",\r\n        playerId,\r\n        this.players[playerId].health\r\n      );\r\n    });\r\n  }\r\n\r\n  _eventSendBuyItemMessage(socket) {\r\n    return socket.on(\"sendBuyItemMessage\", (item) => {\r\n      this.players[socket.id].potions++;\r\n\r\n      this.players[socket.id].updateGold(-item.price);\r\n      socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n      socket.broadcast.emit(\r\n        \"updatePlayersScore\",\r\n        socket.id,\r\n        this.players[socket.id].gold\r\n      );\r\n      // check the player's health, if below 0 have the player respawn\r\n      if (this.players[playerId].health <= 0) {\r\n        // update the gold the player has\r\n        this.players[playerId].updateGold(\r\n          parseInt(-this.players[playerId].gold / 2, 10)\r\n        );\r\n        this.players[playerId].updateExp(\r\n          parseInt(-this.players[playerId].exp / 2, 10)\r\n        );\r\n        socket.emit(\"updateScore\", this.players[playerId].gold);\r\n\r\n        // respawn the player\r\n        this.players[playerId].respawn(this.players);\r\n        this.io.emit(\"respawnPlayer\", this.players[playerId]);\r\n      }\r\n    });\r\n  }\r\n\r\n  _eventPlayerUpdateXp(socket) {\r\n    return socket.on(\"playerUpdateXp\", (playerId, exp) => {\r\n      this.players[playerId].updateExp(exp);\r\n      this.io.emit(\"updateXp\", exp, socket.id);\r\n    });\r\n  }\r\n\r\n  _eventDisconnect(socket) {\r\n    return socket.on(\"disconnect\", () => {\r\n      // delete user data from server\r\n\r\n      console.log(\"Player Disconnect\");\r\n\r\n      delete this.players[socket.id];\r\n\r\n      // emit a message to all players to remove this player\r\n      this.io.emit(\"disconnected\", socket.id);\r\n    });\r\n  }\r\n\r\n  _eventPlayerHit(socket) {\r\n    return socket.on(\"playerHit\", (playerId, monsterAttack, gold = 20) => {\r\n      this.players[playerId].playerAttacked(monsterAttack);\r\n      // check attacked players health, if dead send gold to other player\r\n      if (this.players[playerId].health <= 0) {\r\n        // get the amount of gold, and update player object\r\n        this.players[playerId].updateGold(gold);\r\n\r\n        // respawn attacked player\r\n        this.players[playerId].respawn(this.players);\r\n        this.io.emit(\"respawnPlayer\", this.players[playerId]);\r\n\r\n        // send update gold message to player\r\n        socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n        // reset the attacked players gold\r\n        this.players[playerId].updateGold(-gold);\r\n        this.io\r\n          .to(`${playerId}`)\r\n          .emit(\"updateScore\", this.players[playerId].gold);\r\n\r\n        // add bonus health to the player\r\n        this.players[socket.id].updateHealth(15);\r\n        this.io.emit(\r\n          \"updatePlayerHealth\",\r\n          socket.id,\r\n          this.players[socket.id].health\r\n        );\r\n      } else {\r\n        this.io.emit(\r\n          \"updatePlayerHealth\",\r\n          playerId,\r\n          this.players[playerId].health\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  _spawnPlayer(playerId, name, key, playerSchema) {\r\n    const player = new PlayerModel(\r\n      playerId,\r\n      [\r\n        [200, 200],\r\n        [400, 400],\r\n      ],\r\n      this.players,\r\n      name,\r\n      key,\r\n      undefined,\r\n      playerSchema\r\n    );\r\n    this.players[playerId] = player;\r\n    return this.players[playerId];\r\n  }\r\n}\r\n"],"file":"PlayerController.js"}