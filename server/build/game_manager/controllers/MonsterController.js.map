{"version":3,"sources":["../../../src/game_manager/controllers/MonsterController.js"],"names":["MonsterController","io","monsters","monsterLocations","setupSpawn","init","update","socket","on","monsterId","playerAttack","playerId","monster","exp","playerAttackValue","loseHealth","health","emit","deleteMonster","id","setInterval","Object","keys","forEach","_movement","length","spawnMonster","location","Math","floor","random","invalidLocation","some","obj","x","y","pickRandomLocation","randomEnemy","enemyData","enemies","console","log","MonsterModel","goldValue","key","healthValue","attackValue","expValue","addMonster","push","move"],"mappings":"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","sourcesContent":["import MonsterModel from \"../../models/MonsterModel\";\r\nimport * as enemyData from \"../../../public/assets/Enemies/enemies.json\";\r\nimport { v4 } from \"uuid\";\r\n\r\nexport default class MonsterController {\r\n  constructor(io) {\r\n    this.monsters = {};\r\n    this.monsterLocations = [];\r\n    this.io = io;\r\n\r\n    this.setupSpawn();\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.update();\r\n  }\r\n\r\n  setupEventListeners(socket) {\r\n    return socket.on(\"monsterHit\", (monsterId, playerAttack, playerId) => {\r\n      if (!this.monsters[monsterId]) return;\r\n      const monster = this.monsters[monsterId];\r\n      const { exp } = monster;\r\n      const playerAttackValue = playerAttack;\r\n      monster.loseHealth(playerAttackValue);\r\n\r\n      if (monster.health <= 0) {\r\n        socket.emit(\"playerUpdateXp\", playerId, exp);\r\n\r\n        this.deleteMonster(monster.id);\r\n      } else {\r\n        socket.emit(\"updateMonsterHealth\", monsterId, monster.health);\r\n      }\r\n    });\r\n  }\r\n\r\n  update() {\r\n    setInterval(() => {\r\n      Object.keys(this.monsters).forEach((id) => {\r\n        if (!this.monsters[id]) return;\r\n        this._movement(this.monsters[id]);\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  setupSpawn() {\r\n    setInterval(() => {\r\n      if (Object.keys(this.monsters).length <= 8) {\r\n        this.spawnMonster();\r\n      }\r\n    }, 3000);\r\n  }\r\n\r\n  pickRandomLocation() {\r\n    const location =\r\n      this.monsterLocations[\r\n        Math.floor(Math.random() * this.monsterLocations.length)\r\n      ];\r\n\r\n    if (this.monsters.length > 0) {\r\n      const invalidLocation = this.monsters.some((obj) => {\r\n        if (obj.x === location[0] && obj.y === location[1]) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      if (invalidLocation) return this.pickRandomLocation();\r\n      return location || [200, 200];\r\n    }\r\n    return location || [200, 200];\r\n  }\r\n\r\n  spawnMonster() {\r\n    const randomEnemy =\r\n      enemyData.enemies[Math.floor(Math.random() * enemyData.enemies.length)];\r\n    console.log(\"spawnMonster\")\r\n    const location = this.pickRandomLocation();\r\n    const monster = new MonsterModel(\r\n      location[0],\r\n      location[1],\r\n      randomEnemy.goldValue, // gold value\r\n      `monster-${v4()}`,\r\n      randomEnemy.key, // key\r\n      randomEnemy.healthValue, // health value\r\n      randomEnemy.attackValue, // attack value\r\n      randomEnemy.expValue, // exp value\r\n      3000 //timer\r\n    );\r\n    this.addMonster(monster.id, monster);\r\n  }\r\n\r\n  addMonster(monsterId, monster) {\r\n    this.monsters[monsterId] = monster;\r\n    this.io.emit(\"monsterSpawned\", monster);\r\n  }\r\n\r\n  deleteMonster(monsterId) {\r\n    delete this.monsters[monsterId];\r\n    this.io.emit(\"monsterRemoved\", monsterId);\r\n  }\r\n\r\n  addLocation(x, y) {\r\n    this.monsterLocations.push([x, y]);\r\n  }\r\n\r\n  getMonsterList() {\r\n    return this.monsters;\r\n  }\r\n\r\n  getMonster(monsterId) {\r\n    return this.monsters[monsterId];\r\n  }\r\n  getMonsterLocationList() {\r\n    return this.monsterLocations;\r\n  }\r\n\r\n  _movement(monster) {\r\n    monster.move();\r\n    this.io.emit(\"monsterMovement\", monster);\r\n  }\r\n}\r\n"],"file":"MonsterController.js"}