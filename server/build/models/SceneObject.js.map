{"version":3,"sources":["../../src/models/SceneObject.js"],"names":["SceneObject","data","itemData","sceneId","io","socket","id","chests","monsters","players","items","npcs","playerLocations","chestLocations","monsterLocations","npcLocations","spawners","itemLocations","getLocations","player_locations","layer","objects","forEach","obj","push","x","y","monster_locations","chest_locations","npc_locations","parseMapData","setupEventListeners","setupSpawners","layers","name","on","message","token","player","decoded","jwt","verify","process","env","JWT_SECRET","user","email","ChatModel","create","emit","playerName","frame","console","log","key","room","_id","UserModel","findById","playerSchema","spawnPlayer","broadcast","playerData","flipX","actionAActive","actionBActive","potionAActive","currentDirection","chestId","gold","updateGold","to","spawnerId","removeObject","itemId","canPickupItem","addItem","removeItem","canEquipItem","equipItem","equipedItems","removeEquipedItem","levelUp","level","attack","defense","maxHealth","exp","maxExp","attackedPlayerId","playerAttackValue","playerAttacked","health","respawn","updateHealth","monsterId","dis","loseHealth","updateExp","parseInt","damage","playerId","potion","item","potions","price"],"mappings":"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","sourcesContent":["import { v4 } from \"uuid\";\r\n\r\nexport default class SceneObject {\r\n  constructor(data, itemData, sceneId, io, socket) {\r\n    this.id = `${sceneId}-${v4()}`;\r\n    this.data = data;\r\n\r\n    this.chests = {};\r\n    this.monsters = {};\r\n    this.players = {};\r\n    this.items = {};\r\n    this.npcs = {};\r\n\r\n    this.playerLocations = [];\r\n    this.chestLocations = [];\r\n    this.monsterLocations = [];\r\n    this.npcLocations = [];\r\n    this.spawners = [];\r\n    this.itemLocations = itemData.itemLocations;\r\n\r\n    this.getLocations = {\r\n      player_locations: (layer) => {\r\n        layer.objects.forEach((obj) => {\r\n          this.playerLocations.push([obj.x, obj.y]);\r\n        });\r\n      },\r\n      monster_locations: (layer) => {\r\n        layer.objects.forEach((obj) => {\r\n          this.monsterLocations.push([obj.x, obj.y]);\r\n        });\r\n      },\r\n      chest_locations: (layer) => {\r\n        layer.objects.forEach((obj) => {\r\n          this.monsterLocations.push([obj.x, obj.y]);\r\n        });\r\n      },\r\n      npc_locations: (layer) => {\r\n        layer.objects.forEach((obj) => {\r\n          this.npcLocations.push([obj.x, obj.y]);\r\n        });\r\n      },\r\n    };\r\n\r\n    this.parseMapData();\r\n    this.setupEventListeners(io,socket);\r\n    this.setupSpawners();\r\n  }\r\n\r\n  parseMapData() {\r\n    this.data.layers.forEach((layer) => {\r\n      this.getLocations[layer.name](layer);\r\n    });\r\n  }\r\n  setupEventListeners(io, socket) {\r\n    socket.on(\"sendMessage\", async (message, token, player) => {\r\n      try {\r\n        const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n        const { name, email } = decoded.user;\r\n        await ChatModel.create({ email, message });\r\n        io.emit(\"newMessage\", {\r\n          message,\r\n          name: this.players[socket.id].playerName,\r\n          frame: this.players[socket.id].frame,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    socket.on(\"newPlayer\", async (token, key, room) => {\r\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n      const { name, _id } = decoded.user;\r\n\r\n      const playerSchema = await UserModel.findById(_id);\r\n      // create a new Player\r\n      this.spawnPlayer(socket.id, name, key, playerSchema.player);\r\n\r\n      // send the players object to the new player\r\n      socket.emit(\"createPlayer\", this.players[socket.id], true);\r\n\r\n      // send the players object to the new player\r\n      socket.emit(\"currentPlayers\", this.players, false);\r\n\r\n      // send the monsters object to the new player\r\n      socket.emit(\"currentMonsters\", this.monsters);\r\n\r\n      // send the chests object to the new player\r\n      socket.emit(\"currentChests\", this.chests);\r\n\r\n      // send the items object to the new player\r\n      socket.emit(\"currentItems\", this.items);\r\n\r\n      // send the npcs object to the new player\r\n      socket.emit(\"currentNpcs\", this.npcs);\r\n\r\n      // inform the other players of the new player that joined\r\n      socket.broadcast.emit(\"spawnPlayer\", this.players[socket.id]);\r\n      socket.emit(\"updateItems\", this.players[socket.id]);\r\n      socket.broadcast.emit(\r\n        \"updatePlayersItems\",\r\n        socket.id,\r\n        this.players[socket.id]\r\n      );\r\n    });\r\n\r\n    socket.on(\"playerMovement\", (playerData) => {\r\n      if (this.players[socket.id]) {\r\n        this.players[socket.id].x = playerData.x;\r\n        this.players[socket.id].y = playerData.y;\r\n        this.players[socket.id].flipX = playerData.flipX;\r\n        this.players[socket.id].actionAActive = playerData.actionAActive;\r\n        this.players[socket.id].actionBActive = playerData.actionBActive;\r\n        this.players[socket.id].potionAActive = playerData.potionAActive;\r\n        this.players[socket.id].frame = playerData.frame;\r\n        this.players[socket.id].currentDirection = playerData.currentDirection;\r\n        // emit a message to all players about the player that moved\r\n        socket.broadcast.emit(\"playerMoved\", this.players[socket.id]);\r\n      }\r\n    });\r\n\r\n    socket.on(\"pickUpChest\", (chestId) => {\r\n      // update the spawner\r\n      if (this.chests[chestId]) {\r\n        const { gold } = this.chests[chestId];\r\n\r\n        // updating the players gold\r\n        this.players[socket.id].updateGold(gold);\r\n        socket.to(\"world_1\").emit(\"updateScore\", this.players[socket.id].gold);\r\n        socket\r\n          .to(\"world_1\")\r\n          .broadcast.emit(\r\n            \"updatePlayersScore\",\r\n            socket.id,\r\n            this.players[socket.id].gold\r\n          );\r\n        // removing the chest\r\n        this.spawners[this.chests[chestId].spawnerId].removeObject(chestId);\r\n      }\r\n    });\r\n\r\n    socket.on(\"pickUpItem\", (itemId) => {\r\n      // update the spawner\r\n      if (this.items[itemId]) {\r\n        if (this.players[socket.id].canPickupItem()) {\r\n          this.players[socket.id].addItem(this.items[itemId]);\r\n          socket.emit(\"updateItems\", this.players[socket.id]);\r\n          io.broadcast.emit(\r\n            \"updatePlayersItems\",\r\n            socket.id,\r\n            this.players[socket.id]\r\n          );\r\n\r\n          // removing the item\r\n          this.spawners[this.items[itemId].spawnerId].removeObject(itemId);\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on(\"playerDroppedItem\", (itemId) => {\r\n      this.players[socket.id].removeItem(itemId);\r\n      socket.emit(\"updateItems\", this.players[socket.id]);\r\n      this.broadcast.emit(\r\n        \"updatePlayersItems\",\r\n        socket.id,\r\n        this.players[socket.id]\r\n      );\r\n    });\r\n\r\n    socket.on(\"playerEquipedItem\", (itemId) => {\r\n      if (this.players[socket.id].items[itemId]) {\r\n        if (this.players[socket.id].canEquipItem()) {\r\n          this.players[socket.id].equipItem(\r\n            this.players[socket.id].items[itemId]\r\n          );\r\n\r\n          socket.emit(\"updateItems\", this.players[socket.id]);\r\n          io.broadcast.emit(\r\n            \"updatePlayersItems\",\r\n            socket.id,\r\n            this.players[socket.id]\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on(\"playerUnequipedItem\", (itemId) => {\r\n      if (this.players[socket.id].equipedItems[itemId]) {\r\n        if (this.players[socket.id].canPickupItem()) {\r\n          this.players[socket.id].addItem(\r\n            this.players[socket.id].equipedItems[itemId]\r\n          );\r\n\r\n          this.players[socket.id].removeEquipedItem(itemId);\r\n\r\n          socket.emit(\"updateItems\", this.players[socket.id]);\r\n          this.broadcast.emit(\r\n            \"updatePlayersItems\",\r\n            socket.id,\r\n            this.players[socket.id]\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on(\"levelUp\", () => {\r\n      this.players[socket.id].levelUp();\r\n      io.emit(\r\n        \"updatePlayerStats\",\r\n        socket.id,\r\n        this.players[socket.id].level,\r\n        this.players[socket.id].attack,\r\n        this.players[socket.id].defense,\r\n        this.players[socket.id].maxHealth,\r\n        this.players[socket.id].exp,\r\n        this.players[socket.id].maxExp\r\n      );\r\n    });\r\n\r\n    socket.on(\"attackedPlayer\", (attackedPlayerId) => {\r\n      if (this.players[attackedPlayerId]) {\r\n        // get required info from attacked player\r\n        const { gold } = this.players[attackedPlayerId];\r\n        const playerAttackValue = this.players[socket.id].attack;\r\n\r\n        // subtract health from attacked player\r\n        this.players[attackedPlayerId].playerAttacked(playerAttackValue);\r\n\r\n        // check attacked players health, if dead send gold to other player\r\n        if (this.players[attackedPlayerId].health <= 0) {\r\n          // get the amount of gold, and update player object\r\n          this.players[socket.id].updateGold(gold);\r\n\r\n          // respawn attacked player\r\n          this.players[attackedPlayerId].respawn(this.players);\r\n          io.broadcast.emit(\r\n            \"respawnPlayer\",\r\n            this.players[attackedPlayerId]\r\n          );\r\n\r\n          // send update gold message to player\r\n          socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n          // reset the attacked players gold\r\n          this.players[attackedPlayerId].updateGold(-gold);\r\n          io.to(`${attackedPlayerId}`).emit(\r\n            \"updateScore\",\r\n            this.players[attackedPlayerId].gold\r\n          );\r\n\r\n          // add bonus health to the player\r\n          this.players[socket.id].updateHealth(15);\r\n          io.emit(\r\n            \"updatePlayerHealth\",\r\n            socket.id,\r\n            this.players[socket.id].health\r\n          );\r\n        } else {\r\n          io.emit(\r\n            \"updatePlayerHealth\",\r\n            attackedPlayerId,\r\n            this.players[attackedPlayerId].health\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on(\"monsterAttacked\", (monsterId, dis) => {\r\n      // update the spawner\r\n      if (this.monsters[monsterId]) {\r\n        const { gold, attack, exp } = this.monsters[monsterId];\r\n        const playerAttackValue = this.players[socket.id].attack;\r\n        // subtract health monster model\r\n        this.monsters[monsterId].loseHealth(playerAttackValue);\r\n\r\n        // check the monsters health, and if dead remove that object\r\n        if (this.monsters[monsterId].health <= 0) {\r\n          // updating the players gold\r\n          this.players[socket.id].updateGold(gold);\r\n          socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n          //socket.emit(\"dropItem\", item);\r\n\r\n          //update xp\r\n          this.players[socket.id].updateExp(exp);\r\n          io.emit(\"updateXp\", exp, socket.id);\r\n\r\n          // removing the monster\r\n          this.spawners[this.monsters[monsterId].spawnerId].removeObject(\r\n            monsterId\r\n          );\r\n          io.emit(\"monsterRemoved\", monsterId);\r\n        } else {\r\n          // update the monsters health\r\n          io.emit(\r\n            \"updateMonsterHealth\",\r\n            monsterId,\r\n            this.monsters[monsterId].health\r\n          );\r\n\r\n          if (dis < 90) {\r\n            // update the players health\r\n            this.players[socket.id].playerAttacked(attack);\r\n            io.emit(\r\n              \"updatePlayerHealth\",\r\n              socket.id,\r\n              this.players[socket.id].health\r\n            );\r\n\r\n            // check the player's health, if below 0 have the player respawn\r\n            if (this.players[socket.id].health <= 0) {\r\n              // update the gold the player has\r\n              this.players[socket.id].updateGold(\r\n                parseInt(-this.players[socket.id].gold / 2, 10)\r\n              );\r\n              socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n\r\n              // respawn the player\r\n              this.players[socket.id].respawn(this.players);\r\n              io.emit(\"respawnPlayer\", this.players[socket.id]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on(\"playerHit\", (damage) => {});\r\n\r\n    socket.on(\"healthPotion\", (playerId, health) => {\r\n      if (socket.id === playerId) {\r\n        this.players[socket.id];\r\n        this.players[socket.id].potion(health);\r\n        io.emit(\r\n          \"updatePlayerHealth\",\r\n          socket.id,\r\n          this.players[socket.id].health\r\n        );\r\n      }\r\n    });\r\n\r\n    socket.on(\"sendBuyItemMessage\", (item) => {\r\n      this.players[socket.id].potions++;\r\n\r\n      this.players[socket.id].updateGold(-item.price);\r\n      socket.emit(\"updateScore\", this.players[socket.id].gold);\r\n      socket.broadcast.emit(\r\n        \"updatePlayersScore\",\r\n        socket.id,\r\n        this.players[socket.id].gold\r\n      );\r\n    });\r\n  }\r\n  setupSpawners() {}\r\n}\r\n"],"file":"SceneObject.js"}