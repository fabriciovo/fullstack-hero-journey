{"version":3,"file":"password.js","names":["_express","_interopRequireDefault","require","_nodemailerExpressHandlebars","_nodemailer","_path","_crypto","_UserModel","email","process","env","EMAIL","password","PASSWORD","smtpTransport","nodemailer","createTransport","service","EMAIL_PROVIDER","auth","user","pass","handlebarsOptions","viewEngine","extName","defaultLayout","partialsDir","layoutsDir","viewPath","path","resolve","use","hbs","router","express","Router","post","_ref","_asyncToGenerator2","_regenerator","mark","_callee","request","response","userEmail","buffer","token","emailOptions","wrap","_callee$","_context","prev","next","body","UserModel","findOne","sent","status","json","message","abrupt","crypto","randomBytes","toString","findByIdAndUpdate","_id","resetToken","resetTokenExp","Date","now","to","from","template","subject","context","name","url","concat","PORT","sendMail","stop","_x","_x2","apply","arguments","_ref2","_callee2","_callee2$","_context2","$gt","verifiedPassword","undefined","save","username","_x3","_x4","_default","exports"],"sources":["../../src/routes/password.js"],"sourcesContent":["import express from 'express';\r\nimport hbs from 'nodemailer-express-handlebars';\r\nimport nodemailer from 'nodemailer';\r\nimport path from 'path';\r\nimport crypto from 'crypto';\r\n\r\nimport UserModel from '../models/UserModel';\r\n\r\nconst email = process.env.EMAIL;\r\nconst password = process.env.PASSWORD;\r\n\r\nconst smtpTransport = nodemailer.createTransport({\r\n  service: process.env.EMAIL_PROVIDER,\r\n  auth: {\r\n    user: email,\r\n    pass: password,\r\n  },\r\n});\r\n\r\nconst handlebarsOptions = {\r\n  viewEngine: {\r\n    extName: '.hbs',\r\n    defaultLayout: null,\r\n    partialsDir: './templates/',\r\n    layoutsDir: './templates/',\r\n  },\r\n  viewPath: path.resolve('./templates/'),\r\n  extName: '.html',\r\n};\r\n\r\nsmtpTransport.use('compile', hbs(handlebarsOptions));\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post('/forgot-password', async (request, response) => {\r\n  const userEmail = request.body.email;\r\n  const user = await UserModel.findOne({ email: userEmail });\r\n  if (!user) {\r\n    response.status(400).json({ message: 'invalid email', status: 400 });\r\n    return;\r\n  }\r\n\r\n  // create user token\r\n  const buffer = crypto.randomBytes(20);\r\n  const token = buffer.toString('hex');\r\n\r\n  // update user reset password token and exp\r\n  await UserModel.findByIdAndUpdate(\r\n    { _id: user._id }, { resetToken: token, resetTokenExp: Date.now() + 600000 },\r\n  );\r\n\r\n  // send user password reset email\r\n  const emailOptions = {\r\n    to: userEmail,\r\n    from: email,\r\n    template: 'forgot-password',\r\n    subject: 'MMO Password Reset',\r\n    context: {\r\n      name: 'joe',\r\n      url: `http://localhost:${process.env.PORT || 3000}/?token=${token}&scene=resetPassword`,\r\n    },\r\n  };\r\n  await smtpTransport.sendMail(emailOptions);\r\n\r\n  response.status(200).json({ message: 'An email has been sent to your email address. Password reset link is only valid for 10 minutes.', status: 200 });\r\n});\r\n\r\nrouter.post('/reset-password', async (request, response) => {\r\n  const userEmail = request.body.email;\r\n  const user = await UserModel.findOne({\r\n    resetToken: request.body.token,\r\n    resetTokenExp: { $gt: Date.now() },\r\n    email: userEmail,\r\n  });\r\n\r\n  if (!user) {\r\n    response.status(400).json({ message: 'invalid token', status: 400 });\r\n    return;\r\n  }\r\n\r\n  // ensure password was provided, and that the password matches the verified password\r\n  if (!request.body.password || !request.body.verifiedPassword\r\n    || request.body.password !== request.body.verifiedPassword) {\r\n    response.status(400).json({ message: 'passwords do not match', status: 400 });\r\n    return;\r\n  }\r\n\r\n  // update user model\r\n  user.password = request.body.password;\r\n  user.resetToken = undefined;\r\n  user.resetTokenExp = undefined;\r\n  await user.save();\r\n\r\n  // send user password update email\r\n  const emailOptions = {\r\n    to: userEmail,\r\n    from: email,\r\n    template: 'reset-password',\r\n    subject: 'MMO Password Reset Confirmation',\r\n    context: {\r\n      name: user.username,\r\n    },\r\n  };\r\n  await smtpTransport.sendMail(emailOptions);\r\n\r\n  response.status(200).json({ message: 'password updated', status: 200 });\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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"}